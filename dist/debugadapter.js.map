{"version":3,"sources":["../webpack/bootstrap",".././node_modules/async/lib/async.js",".././node_modules/command-exists/index.js",".././node_modules/command-exists/lib/command-exists.js",".././node_modules/deep-is/index.js",".././node_modules/has-flag/index.js",".././node_modules/hasbin/lib/hasbin.js",".././node_modules/ip-regex/index.js",".././node_modules/is-url/index.js",".././node_modules/is2/index.js",".././node_modules/mkdirp/index.js",".././node_modules/ms/index.js",".././node_modules/os-tmpdir/index.js",".././node_modules/supports-color/index.js",".././node_modules/tcp-port-used/index.js",".././node_modules/tcp-port-used/node_modules/debug/src/browser.js",".././node_modules/tcp-port-used/node_modules/debug/src/common.js",".././node_modules/tcp-port-used/node_modules/debug/src/index.js",".././node_modules/tcp-port-used/node_modules/debug/src/node.js",".././node_modules/tmp/lib/tmp.js",".././node_modules/vscode-debugadapter/lib/debugSession.js",".././node_modules/vscode-debugadapter/lib/handles.js",".././node_modules/vscode-debugadapter/lib/logger.js",".././node_modules/vscode-debugadapter/lib/loggingDebugSession.js",".././node_modules/vscode-debugadapter/lib/main.js",".././node_modules/vscode-debugadapter/lib/messages.js",".././node_modules/vscode-debugadapter/lib/protocol.js",".././src/backend/backend.ts",".././src/backend/gdb_expansion.ts",".././src/backend/mi2/mi2.ts",".././src/backend/mi_parse.ts",".././src/backend/server.ts",".././src/backend/symbols.ts",".././src/bmp.ts",".././src/common.ts",".././src/external.ts",".././src/frontend/utils.ts",".././src/gdb.ts",".././src/jlink.ts",".././src/openocd.ts",".././src/pemicro.ts",".././src/pyocd.ts",".././src/qemu.ts",".././src/stutil.ts",".././src/symbols.ts",".././src/tcpportscanner.ts","../external \"child_process\"","../external \"crypto\"","../external \"events\"","../external \"fs\"","../external \"net\"","../external \"os\"","../external \"path\"","../external \"timers\"","../external \"tty\"","../external \"url\"","../external \"util\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,UAAU,EAAE;AAC/D;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uBAAuB;AACzD;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D,yBAAyB;AACvF,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA,QAAQ,KAA0B;AAClC;AACA;AACA;AACA,aAAa,IAA0C;AACvD,QAAQ,iCAAO,EAAE,mCAAE;AACnB;AACA,SAAS;AAAA,oGAAC;AACV;AACA;AACA,SAAS,EAEJ;;AAEL,CAAC;;;;;;;;;;;;AChvCD,iBAAiB,mBAAO,CAAC,iFAAsB;;;;;;;;;;;;;ACAlC;;AAEb,WAAW,mBAAO,CAAC,oCAAe;AAClC,eAAe,mBAAO,CAAC,oCAAe;AACtC,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAwB,qCAAqC,QAAQ,EAAE;AACvE;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC,QAAQ,EAAE;AACnE;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC1JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrGa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb,YAAY,mBAAO,CAAC,gDAAO;AAC3B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;ACjFa;;AAEb,4HAA4H,EAAE;;AAE9H,2BAA2B,IAAI;AAC/B;AACA;AACA,KAAK,MAAM,GAAG,EAAE,KAAK,MAAM;AAC3B,KAAK,MAAM,GAAG,EAAE,KAAK,GAAG,IAAI,MAAM;AAClC,KAAK,MAAM,GAAG,EAAE,MAAM,GAAG,KAAK,MAAM,EAAE,IAAI;AAC1C,KAAK,MAAM,GAAG,EAAE,OAAO,MAAM,EAAE,IAAI,GAAG,GAAG,KAAK,MAAM,EAAE,IAAI;AAC1D,KAAK,MAAM,GAAG,EAAE,OAAO,MAAM,EAAE,IAAI,GAAG,GAAG,KAAK,MAAM,EAAE,IAAI;AAC1D,KAAK,MAAM,GAAG,EAAE,OAAO,MAAM,EAAE,IAAI,GAAG,GAAG,KAAK,MAAM,EAAE,IAAI;AAC1D,KAAK,MAAM,GAAG,EAAE,OAAO,MAAM,EAAE,IAAI,GAAG,GAAG,KAAK,MAAM,EAAE,IAAI;AAC1D,WAAW,MAAM,EAAE,IAAI,GAAG,GAAG,OAAO,MAAM,EAAE,IAAI;AAChD,eAAe,GAAG;AAClB;;AAEA;AACA,mBAAmB,GAAG,SAAS,GAAG;AAClC,kBAAkB,GAAG,OAAO,GAAG;;AAE/B,oDAAoD,GAAG;AACvD,oDAAoD,GAAG;;;;;;;;;;;;;ACtBvD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0CAA0C,GAAG;;AAE7C;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,eAAe;AACf,mBAAmB;AACnB;AACA,eAAe,mBAAO,CAAC,gDAAS;AAChC,iBAAiB,mBAAO,CAAC,kDAAU;AACnC,aAAa,mBAAO,CAAC,uDAAgB;;AAErC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,0BAA0B;AACvF;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA,sCAAsC,EAAE,UAAU,EAAE,eAAe,EAAE;AACrE,sCAAsC,EAAE,UAAU,GAAG;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK,qDAAqD,KAAK;AACtH,yCAAyC,KAAK,6BAA6B,KAAK;;AAEhF;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,EAAE,OAAO,EAAE;AAC5B;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,yNAAyN,EAAE,uBAAuB,EAAE;AACpP;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY,mBAAO,CAAC,8CAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7xCA,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjKa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxBa;AACb,WAAW,mBAAO,CAAC,cAAI;AACvB,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,wCAAK;AACtB,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,2EAAO;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,iCAAiC,eAAe;;AAEpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iDAAiD,WAAW,EAAE;AAC9D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/WA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,+EAAU;;AAEnC,OAAO,WAAW;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;ACtQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,sCAAI;;AAEpC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACvQA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAO,CAAC,oFAAc;AACxC,CAAC;AACD,kBAAkB,mBAAO,CAAC,8EAAW;AACrC;;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,8DAAgB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,2BAA2B;;AAEnC;AACA;AACA,iDAAiD,EAAE;AACnD,sBAAsB,WAAW,IAAI,KAAK;;AAE1C;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,+EAAU;;AAEnC,OAAO,WAAW;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AChQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,iBAAiB,mBAAO,CAAC,oDAAW;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,eAAe;AAC5B,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,YAAY;AACtD;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,cAAc;AAC3B,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB,cAAc;AAChC;AACA;AACA,iBAAiB;AACjB,kBAAkB,OAAO;AACzB;AACA;AACA,iBAAiB;AACjB,kBAAkB,OAAO;AACzB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AClmBa;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,sEAAY;AACvC,mBAAmB,mBAAO,CAAC,sEAAY;AACvC,YAAY,mBAAO,CAAC,gBAAK;AACzB,cAAc,mBAAO,CAAC,ghF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,IAAI;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gEAAgE,KAAK;AACrE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbqDAAqD,OAAO,IAAI,yCAAyC;AACzyCAAyC;AACzC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kCAAkC,IAAI,IAAI;AAC1C;AACA,2CAA2C,+4mE;;;;;;;;;;;;ACvsB9B;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mzE;;;;;;;;;;;;AC1B9B;AACb;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,eAAe,mBAAO,CAAC,8CAAQ;AAC/B,uBAAuB,mBAAO,CAAC,8EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,oBAAoB;AAC1F;AACA;AACA,gGAAgG,oBAAoB,WAAW,eAAe;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB,IAAI,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,m1rB;;;;;;;;;;;;ACjQ9B;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kEAAU;AACjC;AACA,uBAAuB,mBAAO,CAAC,8EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wBAAwB,GAAG,qBAAqB,cAAc,QAAQ;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA,uCAAuC,gBAAgB,GAAG,kCAAkC;AAC5F;AACA;AACA;AACA;AACA,2CAA2C,29J;;;;;;;;;;;;ACnD3C;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,8EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAO,CAAC,4FAAuB;AAC7D;AACA,eAAe,mBAAO,CAAC,kEAAU;AACjC;AACA,mBAAmB,mBAAO,CAAC,sEAAY;AACvC;AACA;AACA,kBAAkB,mBAAO,CAAC,oEAAW;AACrC;AACA;AACA;AACA,2CAA2C,mzF;;;;;;;;;;;;ACtC9B;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uzF;;;;;;;;;;;;ACtC9B;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sBAAQ;AAC3B,mBAAmB,mBAAO,CAAC,sEAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,iBAAiB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gCAAgC,UAAU,KAAK;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"debugadapter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/gdb.ts\");\n","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n(function () {\n\n    var async = {};\n    function noop() {}\n    function identity(v) {\n        return v;\n    }\n    function toBool(v) {\n        return !!v;\n    }\n    function notId(v) {\n        return !v;\n    }\n\n    // global on the server, window in the browser\n    var previous_async;\n\n    // Establish the root object, `window` (`self`) in the browser, `global`\n    // on the server, or `this` in some virtual machines. We use `self`\n    // instead of `window` for `WebWorker` support.\n    var root = typeof self === 'object' && self.self === self && self ||\n            typeof global === 'object' && global.global === global && global ||\n            this;\n\n    if (root != null) {\n        previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        return function() {\n            if (fn === null) throw new Error(\"Callback was already called.\");\n            fn.apply(this, arguments);\n            fn = null;\n        };\n    }\n\n    function _once(fn) {\n        return function() {\n            if (fn === null) return;\n            fn.apply(this, arguments);\n            fn = null;\n        };\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    // Ported from underscore.js isObject\n    var _isObject = function(obj) {\n        var type = typeof obj;\n        return type === 'function' || type === 'object' && !!obj;\n    };\n\n    function _isArrayLike(arr) {\n        return _isArray(arr) || (\n            // has a positive integer length property\n            typeof arr.length === \"number\" &&\n            arr.length >= 0 &&\n            arr.length % 1 === 0\n        );\n    }\n\n    function _arrayEach(arr, iterator) {\n        var index = -1,\n            length = arr.length;\n\n        while (++index < length) {\n            iterator(arr[index], index, arr);\n        }\n    }\n\n    function _map(arr, iterator) {\n        var index = -1,\n            length = arr.length,\n            result = Array(length);\n\n        while (++index < length) {\n            result[index] = iterator(arr[index], index, arr);\n        }\n        return result;\n    }\n\n    function _range(count) {\n        return _map(Array(count), function (v, i) { return i; });\n    }\n\n    function _reduce(arr, iterator, memo) {\n        _arrayEach(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    }\n\n    function _forEachOf(object, iterator) {\n        _arrayEach(_keys(object), function (key) {\n            iterator(object[key], key);\n        });\n    }\n\n    function _indexOf(arr, item) {\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] === item) return i;\n        }\n        return -1;\n    }\n\n    var _keys = Object.keys || function (obj) {\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    function _keyIterator(coll) {\n        var i = -1;\n        var len;\n        var keys;\n        if (_isArrayLike(coll)) {\n            len = coll.length;\n            return function next() {\n                i++;\n                return i < len ? i : null;\n            };\n        } else {\n            keys = _keys(coll);\n            len = keys.length;\n            return function next() {\n                i++;\n                return i < len ? keys[i] : null;\n            };\n        }\n    }\n\n    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)\n    // This accumulates the arguments passed into an array, after a given index.\n    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).\n    function _restParam(func, startIndex) {\n        startIndex = startIndex == null ? func.length - 1 : +startIndex;\n        return function() {\n            var length = Math.max(arguments.length - startIndex, 0);\n            var rest = Array(length);\n            for (var index = 0; index < length; index++) {\n                rest[index] = arguments[index + startIndex];\n            }\n            switch (startIndex) {\n                case 0: return func.call(this, rest);\n                case 1: return func.call(this, arguments[0], rest);\n            }\n            // Currently unused but handle cases outside of the switch statement:\n            // var args = Array(startIndex + 1);\n            // for (index = 0; index < startIndex; index++) {\n            //     args[index] = arguments[index];\n            // }\n            // args[startIndex] = rest;\n            // return func.apply(this, args);\n        };\n    }\n\n    function _withoutIndex(iterator) {\n        return function (value, index, callback) {\n            return iterator(value, callback);\n        };\n    }\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n\n    // capture the global reference to guard against fakeTimer mocks\n    var _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\n    var _delay = _setImmediate ? function(fn) {\n        // not a direct alias for IE10 compatibility\n        _setImmediate(fn);\n    } : function(fn) {\n        setTimeout(fn, 0);\n    };\n\n    if (typeof process === 'object' && typeof process.nextTick === 'function') {\n        async.nextTick = process.nextTick;\n    } else {\n        async.nextTick = _delay;\n    }\n    async.setImmediate = _setImmediate ? _delay : async.nextTick;\n\n\n    async.forEach =\n    async.each = function (arr, iterator, callback) {\n        return async.eachOf(arr, _withoutIndex(iterator), callback);\n    };\n\n    async.forEachSeries =\n    async.eachSeries = function (arr, iterator, callback) {\n        return async.eachOfSeries(arr, _withoutIndex(iterator), callback);\n    };\n\n\n    async.forEachLimit =\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);\n    };\n\n    async.forEachOf =\n    async.eachOf = function (object, iterator, callback) {\n        callback = _once(callback || noop);\n        object = object || [];\n\n        var iter = _keyIterator(object);\n        var key, completed = 0;\n\n        while ((key = iter()) != null) {\n            completed += 1;\n            iterator(object[key], key, only_once(done));\n        }\n\n        if (completed === 0) callback(null);\n\n        function done(err) {\n            completed--;\n            if (err) {\n                callback(err);\n            }\n            // Check key is null in case iterator isn't exhausted\n            // and done resolved synchronously.\n            else if (key === null && completed <= 0) {\n                callback(null);\n            }\n        }\n    };\n\n    async.forEachOfSeries =\n    async.eachOfSeries = function (obj, iterator, callback) {\n        callback = _once(callback || noop);\n        obj = obj || [];\n        var nextKey = _keyIterator(obj);\n        var key = nextKey();\n        function iterate() {\n            var sync = true;\n            if (key === null) {\n                return callback(null);\n            }\n            iterator(obj[key], key, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    key = nextKey();\n                    if (key === null) {\n                        return callback(null);\n                    } else {\n                        if (sync) {\n                            async.setImmediate(iterate);\n                        } else {\n                            iterate();\n                        }\n                    }\n                }\n            }));\n            sync = false;\n        }\n        iterate();\n    };\n\n\n\n    async.forEachOfLimit =\n    async.eachOfLimit = function (obj, limit, iterator, callback) {\n        _eachOfLimit(limit)(obj, iterator, callback);\n    };\n\n    function _eachOfLimit(limit) {\n\n        return function (obj, iterator, callback) {\n            callback = _once(callback || noop);\n            obj = obj || [];\n            var nextKey = _keyIterator(obj);\n            if (limit <= 0) {\n                return callback(null);\n            }\n            var done = false;\n            var running = 0;\n            var errored = false;\n\n            (function replenish () {\n                if (done && running <= 0) {\n                    return callback(null);\n                }\n\n                while (running < limit && !errored) {\n                    var key = nextKey();\n                    if (key === null) {\n                        done = true;\n                        if (running <= 0) {\n                            callback(null);\n                        }\n                        return;\n                    }\n                    running += 1;\n                    iterator(obj[key], key, only_once(function (err) {\n                        running -= 1;\n                        if (err) {\n                            callback(err);\n                            errored = true;\n                        }\n                        else {\n                            replenish();\n                        }\n                    }));\n                }\n            })();\n        };\n    }\n\n\n    function doParallel(fn) {\n        return function (obj, iterator, callback) {\n            return fn(async.eachOf, obj, iterator, callback);\n        };\n    }\n    function doParallelLimit(fn) {\n        return function (obj, limit, iterator, callback) {\n            return fn(_eachOfLimit(limit), obj, iterator, callback);\n        };\n    }\n    function doSeries(fn) {\n        return function (obj, iterator, callback) {\n            return fn(async.eachOfSeries, obj, iterator, callback);\n        };\n    }\n\n    function _asyncMap(eachfn, arr, iterator, callback) {\n        callback = _once(callback || noop);\n        arr = arr || [];\n        var results = _isArrayLike(arr) ? [] : {};\n        eachfn(arr, function (value, index, callback) {\n            iterator(value, function (err, v) {\n                results[index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    }\n\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = doParallelLimit(_asyncMap);\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.inject =\n    async.foldl =\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachOfSeries(arr, function (x, i, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n\n    async.foldr =\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, identity).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n\n    async.transform = function (arr, memo, iterator, callback) {\n        if (arguments.length === 3) {\n            callback = iterator;\n            iterator = memo;\n            memo = _isArray(arr) ? [] : {};\n        }\n\n        async.eachOf(arr, function(v, k, cb) {\n            iterator(memo, v, k, cb);\n        }, function(err) {\n            callback(err, memo);\n        });\n    };\n\n    function _filter(eachfn, arr, iterator, callback) {\n        var results = [];\n        eachfn(arr, function (x, index, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    results.push({index: index, value: x});\n                }\n                callback();\n            });\n        }, function () {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    }\n\n    async.select =\n    async.filter = doParallel(_filter);\n\n    async.selectLimit =\n    async.filterLimit = doParallelLimit(_filter);\n\n    async.selectSeries =\n    async.filterSeries = doSeries(_filter);\n\n    function _reject(eachfn, arr, iterator, callback) {\n        _filter(eachfn, arr, function(value, cb) {\n            iterator(value, function(v) {\n                cb(!v);\n            });\n        }, callback);\n    }\n    async.reject = doParallel(_reject);\n    async.rejectLimit = doParallelLimit(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    function _createTester(eachfn, check, getResult) {\n        return function(arr, limit, iterator, cb) {\n            function done() {\n                if (cb) cb(getResult(false, void 0));\n            }\n            function iteratee(x, _, callback) {\n                if (!cb) return callback();\n                iterator(x, function (v) {\n                    if (cb && check(v)) {\n                        cb(getResult(true, x));\n                        cb = iterator = false;\n                    }\n                    callback();\n                });\n            }\n            if (arguments.length > 3) {\n                eachfn(arr, limit, iteratee, done);\n            } else {\n                cb = iterator;\n                iterator = limit;\n                eachfn(arr, iteratee, done);\n            }\n        };\n    }\n\n    async.any =\n    async.some = _createTester(async.eachOf, toBool, identity);\n\n    async.someLimit = _createTester(async.eachOfLimit, toBool, identity);\n\n    async.all =\n    async.every = _createTester(async.eachOf, notId, notId);\n\n    async.everyLimit = _createTester(async.eachOfLimit, notId, notId);\n\n    function _findGetResult(v, x) {\n        return x;\n    }\n    async.detect = _createTester(async.eachOf, identity, _findGetResult);\n    async.detectSeries = _createTester(async.eachOfSeries, identity, _findGetResult);\n    async.detectLimit = _createTester(async.eachOfLimit, identity, _findGetResult);\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                callback(null, _map(results.sort(comparator), function (x) {\n                    return x.value;\n                }));\n            }\n\n        });\n\n        function comparator(left, right) {\n            var a = left.criteria, b = right.criteria;\n            return a < b ? -1 : a > b ? 1 : 0;\n        }\n    };\n\n    async.auto = function (tasks, concurrency, callback) {\n        if (typeof arguments[1] === 'function') {\n            // concurrency is optional, shift the args.\n            callback = concurrency;\n            concurrency = null;\n        }\n        callback = _once(callback || noop);\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length;\n        if (!remainingTasks) {\n            return callback(null);\n        }\n        if (!concurrency) {\n            concurrency = remainingTasks;\n        }\n\n        var results = {};\n        var runningTasks = 0;\n\n        var hasError = false;\n\n        var listeners = [];\n        function addListener(fn) {\n            listeners.unshift(fn);\n        }\n        function removeListener(fn) {\n            var idx = _indexOf(listeners, fn);\n            if (idx >= 0) listeners.splice(idx, 1);\n        }\n        function taskComplete() {\n            remainingTasks--;\n            _arrayEach(listeners.slice(0), function (fn) {\n                fn();\n            });\n        }\n\n        addListener(function () {\n            if (!remainingTasks) {\n                callback(null, results);\n            }\n        });\n\n        _arrayEach(keys, function (k) {\n            if (hasError) return;\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = _restParam(function(err, args) {\n                runningTasks--;\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _forEachOf(results, function(val, rkey) {\n                        safeResults[rkey] = val;\n                    });\n                    safeResults[k] = args;\n                    hasError = true;\n\n                    callback(err, safeResults);\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            });\n            var requires = task.slice(0, task.length - 1);\n            // prevent dead-locks\n            var len = requires.length;\n            var dep;\n            while (len--) {\n                if (!(dep = tasks[requires[len]])) {\n                    throw new Error('Has nonexistent dependency in ' + requires.join(', '));\n                }\n                if (_isArray(dep) && _indexOf(dep, k) >= 0) {\n                    throw new Error('Has cyclic dependencies');\n                }\n            }\n            function ready() {\n                return runningTasks < concurrency && _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            }\n            if (ready()) {\n                runningTasks++;\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                addListener(listener);\n            }\n            function listener() {\n                if (ready()) {\n                    runningTasks++;\n                    removeListener(listener);\n                    task[task.length - 1](taskCallback, results);\n                }\n            }\n        });\n    };\n\n\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var DEFAULT_INTERVAL = 0;\n\n        var attempts = [];\n\n        var opts = {\n            times: DEFAULT_TIMES,\n            interval: DEFAULT_INTERVAL\n        };\n\n        function parseTimes(acc, t){\n            if(typeof t === 'number'){\n                acc.times = parseInt(t, 10) || DEFAULT_TIMES;\n            } else if(typeof t === 'object'){\n                acc.times = parseInt(t.times, 10) || DEFAULT_TIMES;\n                acc.interval = parseInt(t.interval, 10) || DEFAULT_INTERVAL;\n            } else {\n                throw new Error('Unsupported argument type for \\'times\\': ' + typeof t);\n            }\n        }\n\n        var length = arguments.length;\n        if (length < 1 || length > 3) {\n            throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');\n        } else if (length <= 2 && typeof times === 'function') {\n            callback = task;\n            task = times;\n        }\n        if (typeof times !== 'function') {\n            parseTimes(opts, times);\n        }\n        opts.callback = callback;\n        opts.task = task;\n\n        function wrappedTask(wrappedCallback, wrappedResults) {\n            function retryAttempt(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            }\n\n            function retryInterval(interval){\n                return function(seriesCallback){\n                    setTimeout(function(){\n                        seriesCallback(null);\n                    }, interval);\n                };\n            }\n\n            while (opts.times) {\n\n                var finalAttempt = !(opts.times-=1);\n                attempts.push(retryAttempt(opts.task, finalAttempt));\n                if(!finalAttempt && opts.interval > 0){\n                    attempts.push(retryInterval(opts.interval));\n                }\n            }\n\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || opts.callback)(data.err, data.result);\n            });\n        }\n\n        // If a callback is passed, run this as a controll flow\n        return opts.callback ? wrappedTask() : wrappedTask;\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = _once(callback || noop);\n        if (!_isArray(tasks)) {\n            var err = new Error('First argument to waterfall must be an array of functions');\n            return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        function wrapIterator(iterator) {\n            return _restParam(function (err, args) {\n                if (err) {\n                    callback.apply(null, [err].concat(args));\n                }\n                else {\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    ensureAsync(iterator).apply(null, args);\n                }\n            });\n        }\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    function _parallel(eachfn, tasks, callback) {\n        callback = callback || noop;\n        var results = _isArrayLike(tasks) ? [] : {};\n\n        eachfn(tasks, function (task, key, callback) {\n            task(_restParam(function (err, args) {\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                results[key] = args;\n                callback(err);\n            }));\n        }, function (err) {\n            callback(err, results);\n        });\n    }\n\n    async.parallel = function (tasks, callback) {\n        _parallel(async.eachOf, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel(_eachOfLimit(limit), tasks, callback);\n    };\n\n    async.series = function(tasks, callback) {\n        _parallel(async.eachOfSeries, tasks, callback);\n    };\n\n    async.iterator = function (tasks) {\n        function makeCallback(index) {\n            function fn() {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            }\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        }\n        return makeCallback(0);\n    };\n\n    async.apply = _restParam(function (fn, args) {\n        return _restParam(function (callArgs) {\n            return fn.apply(\n                null, args.concat(callArgs)\n            );\n        });\n    });\n\n    function _concat(eachfn, arr, fn, callback) {\n        var result = [];\n        eachfn(arr, function (x, index, cb) {\n            fn(x, function (err, y) {\n                result = result.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, result);\n        });\n    }\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        callback = callback || noop;\n        if (test()) {\n            var next = _restParam(function(err, args) {\n                if (err) {\n                    callback(err);\n                } else if (test.apply(this, args)) {\n                    iterator(next);\n                } else {\n                    callback.apply(null, [null].concat(args));\n                }\n            });\n            iterator(next);\n        } else {\n            callback(null);\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        var calls = 0;\n        return async.whilst(function() {\n            return ++calls <= 1 || test.apply(this, arguments);\n        }, iterator, callback);\n    };\n\n    async.until = function (test, iterator, callback) {\n        return async.whilst(function() {\n            return !test.apply(this, arguments);\n        }, iterator, callback);\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        return async.doWhilst(iterator, function() {\n            return !test.apply(this, arguments);\n        }, callback);\n    };\n\n    async.during = function (test, iterator, callback) {\n        callback = callback || noop;\n\n        var next = _restParam(function(err, args) {\n            if (err) {\n                callback(err);\n            } else {\n                args.push(check);\n                test.apply(this, args);\n            }\n        });\n\n        var check = function(err, truth) {\n            if (err) {\n                callback(err);\n            } else if (truth) {\n                iterator(next);\n            } else {\n                callback(null);\n            }\n        };\n\n        test(check);\n    };\n\n    async.doDuring = function (iterator, test, callback) {\n        var calls = 0;\n        async.during(function(next) {\n            if (calls++ < 1) {\n                next(null, true);\n            } else {\n                test.apply(this, arguments);\n            }\n        }, iterator, callback);\n    };\n\n    function _queue(worker, concurrency, payload) {\n        if (concurrency == null) {\n            concurrency = 1;\n        }\n        else if(concurrency === 0) {\n            throw new Error('Concurrency must not be zero');\n        }\n        function _insert(q, data, pos, callback) {\n            if (callback != null && typeof callback !== \"function\") {\n                throw new Error(\"task callback must be a function\");\n            }\n            q.started = true;\n            if (!_isArray(data)) {\n                data = [data];\n            }\n            if(data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                return async.setImmediate(function() {\n                    q.drain();\n                });\n            }\n            _arrayEach(data, function(task) {\n                var item = {\n                    data: task,\n                    callback: callback || noop\n                };\n\n                if (pos) {\n                    q.tasks.unshift(item);\n                } else {\n                    q.tasks.push(item);\n                }\n\n                if (q.tasks.length === q.concurrency) {\n                    q.saturated();\n                }\n            });\n            async.setImmediate(q.process);\n        }\n        function _next(q, tasks) {\n            return function(){\n                workers -= 1;\n\n                var removed = false;\n                var args = arguments;\n                _arrayEach(tasks, function (task) {\n                    _arrayEach(workersList, function (worker, index) {\n                        if (worker === task && !removed) {\n                            workersList.splice(index, 1);\n                            removed = true;\n                        }\n                    });\n\n                    task.callback.apply(task, args);\n                });\n                if (q.tasks.length + workers === 0) {\n                    q.drain();\n                }\n                q.process();\n            };\n        }\n\n        var workers = 0;\n        var workersList = [];\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            payload: payload,\n            saturated: noop,\n            empty: noop,\n            drain: noop,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n                _insert(q, data, false, callback);\n            },\n            kill: function () {\n                q.drain = noop;\n                q.tasks = [];\n            },\n            unshift: function (data, callback) {\n                _insert(q, data, true, callback);\n            },\n            process: function () {\n                while(!q.paused && workers < q.concurrency && q.tasks.length){\n\n                    var tasks = q.payload ?\n                        q.tasks.splice(0, q.payload) :\n                        q.tasks.splice(0, q.tasks.length);\n\n                    var data = _map(tasks, function (task) {\n                        return task.data;\n                    });\n\n                    if (q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    workersList.push(tasks[0]);\n                    var cb = only_once(_next(q, tasks));\n                    worker(data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            workersList: function () {\n                return workersList;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                q.paused = true;\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                var resumeCount = Math.min(q.concurrency, q.tasks.length);\n                // Need to call q.process once per concurrent\n                // worker to preserve full concurrency after pause\n                for (var w = 1; w <= resumeCount; w++) {\n                    async.setImmediate(q.process);\n                }\n            }\n        };\n        return q;\n    }\n\n    async.queue = function (worker, concurrency) {\n        var q = _queue(function (items, cb) {\n            worker(items[0], cb);\n        }, concurrency, 1);\n\n        return q;\n    };\n\n    async.priorityQueue = function (worker, concurrency) {\n\n        function _compareTasks(a, b){\n            return a.priority - b.priority;\n        }\n\n        function _binarySearch(sequence, item, compare) {\n            var beg = -1,\n                end = sequence.length - 1;\n            while (beg < end) {\n                var mid = beg + ((end - beg + 1) >>> 1);\n                if (compare(item, sequence[mid]) >= 0) {\n                    beg = mid;\n                } else {\n                    end = mid - 1;\n                }\n            }\n            return beg;\n        }\n\n        function _insert(q, data, priority, callback) {\n            if (callback != null && typeof callback !== \"function\") {\n                throw new Error(\"task callback must be a function\");\n            }\n            q.started = true;\n            if (!_isArray(data)) {\n                data = [data];\n            }\n            if(data.length === 0) {\n                // call drain immediately if there are no tasks\n                return async.setImmediate(function() {\n                    q.drain();\n                });\n            }\n            _arrayEach(data, function(task) {\n                var item = {\n                    data: task,\n                    priority: priority,\n                    callback: typeof callback === 'function' ? callback : noop\n                };\n\n                q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n                if (q.tasks.length === q.concurrency) {\n                    q.saturated();\n                }\n                async.setImmediate(q.process);\n            });\n        }\n\n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n\n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n            _insert(q, data, priority, callback);\n        };\n\n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        return _queue(worker, 1, payload);\n    };\n\n    function _console_fn(name) {\n        return _restParam(function (fn, args) {\n            fn.apply(null, args.concat([_restParam(function (err, args) {\n                if (typeof console === 'object') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _arrayEach(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            })]));\n        });\n    }\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        var has = Object.prototype.hasOwnProperty;\n        hasher = hasher || identity;\n        var memoized = _restParam(function memoized(args) {\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (has.call(memo, key)) {   \n                async.setImmediate(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (has.call(queues, key)) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([_restParam(function (args) {\n                    memo[key] = args;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                        q[i].apply(null, args);\n                    }\n                })]));\n            }\n        });\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n        return function () {\n            return (fn.unmemoized || fn).apply(null, arguments);\n        };\n    };\n\n    function _times(mapper) {\n        return function (count, iterator, callback) {\n            mapper(_range(count), iterator, callback);\n        };\n    }\n\n    async.times = _times(async.map);\n    async.timesSeries = _times(async.mapSeries);\n    async.timesLimit = function (count, limit, iterator, callback) {\n        return async.mapLimit(_range(count), limit, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return _restParam(function (args) {\n            var that = this;\n\n            var callback = args[args.length - 1];\n            if (typeof callback == 'function') {\n                args.pop();\n            } else {\n                callback = noop;\n            }\n\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) {\n                    cb(err, nextargs);\n                })]));\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        });\n    };\n\n    async.compose = function (/* functions... */) {\n        return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n\n    function _applyEach(eachfn) {\n        return _restParam(function(fns, args) {\n            var go = _restParam(function(args) {\n                var that = this;\n                var callback = args.pop();\n                return eachfn(fns, function (fn, _, cb) {\n                    fn.apply(that, args.concat([cb]));\n                },\n                callback);\n            });\n            if (args.length) {\n                return go.apply(this, args);\n            }\n            else {\n                return go;\n            }\n        });\n    }\n\n    async.applyEach = _applyEach(async.eachOf);\n    async.applyEachSeries = _applyEach(async.eachOfSeries);\n\n\n    async.forever = function (fn, callback) {\n        var done = only_once(callback || noop);\n        var task = ensureAsync(fn);\n        function next(err) {\n            if (err) {\n                return done(err);\n            }\n            task(next);\n        }\n        next();\n    };\n\n    function ensureAsync(fn) {\n        return _restParam(function (args) {\n            var callback = args.pop();\n            args.push(function () {\n                var innerArgs = arguments;\n                if (sync) {\n                    async.setImmediate(function () {\n                        callback.apply(null, innerArgs);\n                    });\n                } else {\n                    callback.apply(null, innerArgs);\n                }\n            });\n            var sync = true;\n            fn.apply(this, args);\n            sync = false;\n        });\n    }\n\n    async.ensureAsync = ensureAsync;\n\n    async.constant = _restParam(function(values) {\n        var args = [null].concat(values);\n        return function (callback) {\n            return callback.apply(this, args);\n        };\n    });\n\n    async.wrapSync =\n    async.asyncify = function asyncify(func) {\n        return _restParam(function (args) {\n            var callback = args.pop();\n            var result;\n            try {\n                result = func.apply(this, args);\n            } catch (e) {\n                return callback(e);\n            }\n            // if result is Promise object\n            if (_isObject(result) && typeof result.then === \"function\") {\n                result.then(function(value) {\n                    callback(null, value);\n                })[\"catch\"](function(err) {\n                    callback(err.message ? err : new Error(err));\n                });\n            } else {\n                callback(null, result);\n            }\n        });\n    };\n\n    // Node.js\n    if (typeof module === 'object' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","module.exports = require('./lib/command-exists');\n","'use strict';\n\nvar exec = require('child_process').exec;\nvar execSync = require('child_process').execSync;\nvar fs = require('fs');\nvar path = require('path');\nvar access = fs.access;\nvar accessSync = fs.accessSync;\nvar constants = fs.constants || fs;\n\nvar isUsingWindows = process.platform == 'win32'\n\nvar fileNotExists = function(commandName, callback){\n    access(commandName, constants.F_OK,\n    function(err){\n        callback(!err);\n    });\n};\n\nvar fileNotExistsSync = function(commandName){\n    try{\n        accessSync(commandName, constants.F_OK);\n        return false;\n    }catch(e){\n        return true;\n    }\n};\n\nvar localExecutable = function(commandName, callback){\n    access(commandName, constants.F_OK | constants.X_OK,\n        function(err){\n        callback(null, !err);\n    });\n};\n\nvar localExecutableSync = function(commandName){\n    try{\n        accessSync(commandName, constants.F_OK | constants.X_OK);\n        return true;\n    }catch(e){\n        return false;\n    }\n}\n\nvar commandExistsUnix = function(commandName, cleanedCommandName, callback) {\n\n    fileNotExists(commandName, function(isFile){\n\n        if(!isFile){\n            var child = exec('command -v ' + cleanedCommandName +\n                  ' 2>/dev/null' +\n                  ' && { echo >&1 ' + cleanedCommandName + '; exit 0; }',\n                  function (error, stdout, stderr) {\n                      callback(null, !!stdout);\n                  });\n            return;\n        }\n\n        localExecutable(commandName, callback);\n    });\n\n}\n\nvar commandExistsWindows = function(commandName, cleanedCommandName, callback) {\n  if (/[\\x00-\\x1f<>:\"\\|\\?\\*]/.test(commandName)) {\n    callback(null, false);\n    return;\n  }\n  var child = exec('where ' + cleanedCommandName,\n    function (error) {\n      if (error !== null){\n        callback(null, false);\n      } else {\n        callback(null, true);\n      }\n    }\n  )\n}\n\nvar commandExistsUnixSync = function(commandName, cleanedCommandName) {\n  if(fileNotExistsSync(commandName)){\n      try {\n        var stdout = execSync('command -v ' + cleanedCommandName +\n              ' 2>/dev/null' +\n              ' && { echo >&1 ' + cleanedCommandName + '; exit 0; }'\n              );\n        return !!stdout;\n      } catch (error) {\n        return false;\n      }\n  }\n  return localExecutableSync(commandName);\n}\n\nvar commandExistsWindowsSync = function(commandName, cleanedCommandName, callback) {\n  if (/[\\x00-\\x1f<>:\"\\|\\?\\*]/.test(commandName)) {\n    return false;\n  }\n  try {\n      var stdout = execSync('where ' + cleanedCommandName, {stdio: []});\n      return !!stdout;\n  } catch (error) {\n      return false;\n  }\n}\n\nvar cleanInput = function(s) {\n  if (/[^A-Za-z0-9_\\/:=-]/.test(s)) {\n    s = \"'\"+s.replace(/'/g,\"'\\\\''\")+\"'\";\n    s = s.replace(/^(?:'')+/g, '') // unduplicate single-quote at the beginning\n      .replace(/\\\\'''/g, \"\\\\'\" ); // remove non-escaped single-quote if there are enclosed between 2 escaped\n  }\n  return s;\n}\n\nif (isUsingWindows) {\n  cleanInput = function(s) {\n    var isPathName = /[\\\\]/.test(s);\n    if (isPathName) {\n      var dirname = '\"' + path.dirname(s) + '\"';\n      var basename = '\"' + path.basename(s) + '\"';\n      return dirname + ':' + basename;\n    }\n    return '\"' + s + '\"';\n  }\n}\n\nmodule.exports = function commandExists(commandName, callback) {\n  var cleanedCommandName = cleanInput(commandName);\n  if (!callback && typeof Promise !== 'undefined') {\n    return new Promise(function(resolve, reject){\n      commandExists(commandName, function(error, output) {\n        if (output) {\n          resolve(commandName);\n        } else {\n          reject(error);\n        }\n      });\n    });\n  }\n  if (isUsingWindows) {\n    commandExistsWindows(commandName, cleanedCommandName, callback);\n  } else {\n    commandExistsUnix(commandName, cleanedCommandName, callback);\n  }\n};\n\nmodule.exports.sync = function(commandName) {\n  var cleanedCommandName = cleanInput(commandName);\n  if (isUsingWindows) {\n    return commandExistsWindowsSync(commandName, cleanedCommandName);\n  } else {\n    return commandExistsUnixSync(commandName, cleanedCommandName);\n  }\n};\n","var pSlice = Array.prototype.slice;\nvar Object_keys = typeof Object.keys === 'function'\n    ? Object.keys\n    : function (obj) {\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        return keys;\n    }\n;\n\nvar deepEqual = module.exports = function (actual, expected) {\n  // enforce Object.is +0 !== -0\n  if (actual === 0 && expected === 0) {\n    return areZerosEqual(actual, expected);\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  } else if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  } else if (isNumberNaN(actual)) {\n    return isNumberNaN(expected);\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction isNumberNaN(value) {\n  // NaN === NaN -> false\n  return typeof value == 'number' && value !== value;\n}\n\nfunction areZerosEqual(zeroA, zeroB) {\n  // (1 / +0|0) -> Infinity, but (1 / -0) -> -Infinity and (Infinity !== -Infinity)\n  return (1 / zeroA) === (1 / zeroB);\n}\n\nfunction objEquiv(a, b) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b);\n  }\n  try {\n    var ka = Object_keys(a),\n        kb = Object_keys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","'use strict';\n\nvar async = require('async');\nvar fs = require('fs');\nvar path = require('path');\n\nmodule.exports = hasbin;\nhasbin.async = hasbin;\nhasbin.sync = hasbinSync;\nhasbin.all = hasbinAll;\nhasbin.all.sync = hasbinAllSync;\nhasbin.some = hasbinSome;\nhasbin.some.sync = hasbinSomeSync;\nhasbin.first = hasbinFirst;\nhasbin.first.sync = hasbinFirstSync;\n\nhasbin.every = hasbin.all;\nhasbin.any = hasbin.some;\n\nfunction hasbin (bin, done) {\n\tasync.some(getPaths(bin), fileExists, done);\n}\n\nfunction hasbinSync (bin) {\n\treturn getPaths(bin).some(fileExistsSync);\n}\n\nfunction hasbinAll (bins, done) {\n\tasync.every(bins, hasbin.async, done);\n}\n\nfunction hasbinAllSync (bins) {\n\treturn bins.every(hasbin.sync);\n}\n\nfunction hasbinSome (bins, done) {\n\tasync.some(bins, hasbin.async, done);\n}\n\nfunction hasbinSomeSync (bins) {\n\treturn bins.some(hasbin.sync);\n}\n\nfunction hasbinFirst (bins, done) {\n\tasync.detect(bins, hasbin.async, function (result) {\n\t\tdone(result || false);\n\t});\n}\n\nfunction hasbinFirstSync (bins) {\n\tvar matched = bins.filter(hasbin.sync);\n\treturn matched.length ? matched[0] : false;\n}\n\nfunction getPaths (bin) {\n\tvar envPath = (process.env.PATH || '');\n\tvar envExt = (process.env.PATHEXT || '');\n\treturn envPath.replace(/[\"]+/g, '').split(path.delimiter).map(function (chunk) {\n\t\treturn envExt.split(path.delimiter).map(function (ext) {\n\t\t\treturn path.join(chunk, bin + ext);\n\t\t});\n\t}).reduce(function (a, b) {\n\t\treturn a.concat(b);\n\t});\n}\n\nfunction fileExists (filePath, done) {\n\tfs.stat(filePath, function (error, stat) {\n\t\tif (error) {\n\t\t\treturn done(false);\n\t\t}\n\t\tdone(stat.isFile());\n\t});\n}\n\nfunction fileExistsSync (filePath) {\n\ttry {\n\t\treturn fs.statSync(filePath).isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n","'use strict';\n\nconst v4 = '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}';\n\nconst v6seg = '[0-9a-fA-F]{1,4}';\nconst v6 = `\n(\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(:${v6seg}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(:${v6seg}){0,1}:${v4}|(:${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(:${v6seg}){0,2}:${v4}|(:${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(:${v6seg}){0,3}:${v4}|(:${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(:${v6seg}){0,4}:${v4}|(:${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\nconst ip = module.exports = opts => opts && opts.exact ?\n\tnew RegExp(`(?:^${v4}$)|(?:^${v6}$)`) :\n\tnew RegExp(`(?:${v4})|(?:${v6})`, 'g');\n\nip.v4 = opts => opts && opts.exact ? new RegExp(`^${v4}$`) : new RegExp(v4, 'g');\nip.v6 = opts => opts && opts.exact ? new RegExp(`^${v6}$`) : new RegExp(v6, 'g');\n","\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n","/**\n * @fileOverview\n * is2 derived from is by Enrico Marino, adapted for Node.js.\n * Slightly modified by Edmond Meinfelder\n *\n * is\n * the definitive JavaScript type testing library\n * Copyright(c) 2013,2014 Edmond Meinfelder <edmond@stdarg.com>\n * Copyright(c) 2011 Enrico Marino <enrico.marino@email.com>\n * MIT license\n */\n'use strict';\nconst owns = {}.hasOwnProperty;\nconst toString = {}.toString;\nconst is = exports;\nconst deepIs = require('deep-is');\nconst ipRegEx =  require('ip-regex');\nis.version = require('./package.json').version;\n\n////////////////////////////////////////////////////////////////////////////////\n// Environment\n\n/**\n * Tests if is is running under a browser.\n * @return {Boolean} true if the environment has process, process.version and process.versions.\n */\nis.browser = function() {\n    return (!is.node() && typeof window !== 'undefined' && toString.call(window) === '[object global]');\n};\n\n/**\n * Test if 'value' is defined.\n * Alias: def\n * @param {Any} value The value to test.\n * @return {Boolean} true if 'value' is defined, false otherwise.\n */\nis.defined = function(value) {\n    return typeof value !== 'undefined';\n};\nis.def = is.defined;\n\n/**\n * Tests if is is running under node.js\n * @return {Boolean} true if the environment has process, process.version and process.versions.\n */\nis.nodejs = function() {\n    return (process && process.hasOwnProperty('version') &&\n            process.hasOwnProperty('versions'));\n};\nis.node = is.nodejs;\n\n/**\n * Test if 'value' is undefined.\n * Aliases: undef, udef\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is undefined, false otherwise.\n */\nis.undefined = function(value) {\n    return value === undefined;\n};\nis.udef = is.undef = is.undefined;\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\n/**\n * Test if 'value' is an array.\n * Alias: ary, arry\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is an array, false otherwise.\n */\nis.array = function(value) {\n    return '[object Array]' === toString.call(value);\n};\nis.arr = is.ary = is.arry = is.array;\n\n/**\n * Test if 'value' is an arraylike object (i.e. it has a length property with a valid value)\n * Aliases: arraylike, arryLike, aryLike\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is an arguments object, false otherwise.\n */\nis.arrayLike = function(value) {\n    if (is.nullOrUndef(value))\n        return false;\n    return value !== undefined &&\n        owns.call(value, 'length') &&\n        isFinite(value.length);\n};\nis.arrLike = is.arryLike = is.aryLike = is.arraylike = is.arrayLike;\n\n/**\n * Test if 'value' is an arguments object.\n * Alias: args\n * @param {Any} value value to test\n * @return {Boolean} true if 'value' is an arguments object, false otherwise\n */\nis.arguments = function(value) {\n    return '[object Arguments]' === toString.call(value);\n};\nis.args = is.arguments;\n\n/**\n * Test if 'value' is a boolean.\n * Alias: bool\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is a boolean, false otherwise.\n */\nis.boolean = function(value) {\n    return '[object Boolean]' === toString.call(value);\n};\nis.bool = is.boolean;\n\n/**\n * Test if 'value' is an instance of Buffer.\n * Aliases: instOf, instanceof\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is an instance of 'constructor'.\n */\nis.buffer = function(value) {\n    return is.nodejs() && Buffer && Buffer.hasOwnProperty('isBuffer') && Buffer.isBuffer(value);\n};\nis.buff = is.buf = is.buffer;\n\n/**\n * Test if 'value' is a date.\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is a date, false otherwise.\n */\nis.date = function(value) {\n    return '[object Date]' === toString.call(value);\n};\n\n/**\n * Test if 'value' is an error object.\n * Alias: err\n * @param value value to test.\n * @return {Boolean} true if 'value' is an error object, false otherwise.\n */\nis.error = function(value) {\n    return '[object Error]' === toString.call(value);\n};\nis.err = is.error;\n\n/**\n * Test if 'value' is false.\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is false, false otherwise\n */\nis.false = function(value) {\n    return value === false;\n};\n\n/**\n * Test if 'value' is a function or async function.\n * Alias: func\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is a function, false otherwise.\n */\nis.function = function(value) {\n    return is.syncFunction(value) || is.asyncFunction(value)\n};\nis.fun = is.func = is.function;\n\n/**\n * Test if 'value' is an async function using `async () => {}` or `async function () {}`.\n * Alias: func\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is a function, false otherwise.\n */\nis.asyncFunction = function(value) {\n  return '[object AsyncFunction]' === toString.call(value);\n}\nis.asyncFun = is.asyncFunc = is.asyncFunction;\n\n/**\n * Test if 'value' is a synchronous function.\n * Alias: syncFunc\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is a function, false otherwise.\n */\nis.syncFunction = function (value) {\n  return '[object Function]' === toString.call(value);\n}\nis.syncFun = is.syncFunc = is.syncFunction\n/**\n * Test if 'value' is null.\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is null, false otherwise.\n */\nis.null = function(value) {\n    return value === null;\n};\n\n/**\n * Test is 'value' is either null or undefined.\n * Alias: nullOrUndef\n * @param {Any} value value to test.\n * @return {Boolean} True if value is null or undefined, false otherwise.\n */\nis.nullOrUndefined = function(value) {\n    return value === null || typeof value === 'undefined';\n};\nis.nullOrUndef = is.nullOrUndefined;\n\n/**\n * Test if 'value' is a number.\n * Alias: num\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a number, false otherwise.\n */\nis.number = function(value) {\n    return '[object Number]' === toString.call(value);\n};\nis.num = is.number;\n\n/**\n * Test if 'value' is an object. Note: Arrays, RegExps, Date, Error, etc all return false.\n * Alias: obj\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is an object, false otherwise.\n */\nis.object = function(value) {\n    return '[object Object]' === toString.call(value);\n};\nis.obj = is.object;\n\n/**\n * Test if 'value' is a regular expression.\n * Alias: regexp\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a regexp, false otherwise.\n */\nis.regExp = function(value) {\n    return '[object RegExp]' === toString.call(value);\n};\nis.re = is.regexp = is.regExp;\n\n/**\n * Test if 'value' is a string.\n * Alias: str\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a string, false otherwise.\n */\nis.string = function(value) {\n    return '[object String]' === toString.call(value);\n};\nis.str = is.string;\n\n/**\n * Test if 'value' is true.\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is true, false otherwise.\n */\nis.true = function(value) {\n    return value === true;\n};\n\n/**\n * Test if 'value' is a uuid (v1-v5)\n * @param {Any} value to test.\n * @return {Boolean} true if 'value is a valid RFC4122 UUID. Case non-specific.\n */\nvar uuidRegExp = new RegExp('[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab]'+\n                            '[0-9a-f]{3}-[0-9a-f]{12}', 'i');\nis.uuid = function(value) {\n    return uuidRegExp.test(value);\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Object Relationships\n\n/**\n * Test if 'value' is equal to 'other'. Works for objects and arrays and will do deep comparisions,\n * using recursion.\n * Alias: eq\n * @param {Any} value value.\n * @param {Any} other value to compare with.\n * @return {Boolean} true if 'value' is equal to 'other', false otherwise\n */\nis.equal = function(value, other) {\n    var type = toString.call(value);\n\n    if (typeof value !== typeof other) {\n        return false;\n    }\n\n    if (type !== toString.call(other)) {\n        return false;\n    }\n\n    if ('[object Object]' === type || '[object Array]' === type) {\n        return deepIs(value, other);\n    } else if ('[object Function]' === type) {\n        return value.prototype === other.prototype;\n    } else if ('[object Date]' === type) {\n        return value.getTime() === other.getTime();\n    }\n\n    return value === other;\n};\nis.objEquals = is.eq = is.equal;\n\n/**\n * JS Type definitions which cannot host values.\n * @api private\n */\nvar NON_HOST_TYPES = {\n    'boolean': 1,\n    'number': 1,\n    'string': 1,\n    'undefined': 1\n};\n\n/**\n * Test if 'key' in host is an object. To be hosted means host[value] is an object.\n * @param {Any} value The value to test.\n * @param {Any} host Host that may contain value.\n * @return {Boolean} true if 'value' is hosted by 'host', false otherwise.\n */\nis.hosted = function(value, host) {\n    if (is.nullOrUndef(value))\n        return false;\n    var type = typeof host[value];\n    return type === 'object' ? !!host[value] : !NON_HOST_TYPES[type];\n};\n\n/**\n * Test if 'value' is an instance of 'constructor'.\n * Aliases: instOf, instanceof\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is an instance of 'constructor'.\n */\nis.instanceOf = function(value, constructor) {\n    if (is.nullOrUndef(value) || is.nullOrUndef(constructor))\n        return false;\n    return (value instanceof constructor);\n};\nis.instOf = is.instanceof = is.instanceOf;\n\n/**\n * Test if 'value' is an instance type objType.\n * Aliases: objInstOf, objectinstanceof, instOf, instanceOf\n * @param {object} objInst an object to testfor type.\n * @param {object} objType an object type to compare.\n * @return {Boolean} true if 'value' is an object, false otherwise.\n */\nis.objectInstanceOf = function(objInst, objType) {\n    try {\n        return '[object Object]' === toString.call(objInst) && (objInst instanceof objType);\n    } catch(err) {\n        return false;\n    }\n};\nis.instOf = is.instanceOf = is.objInstOf = is.objectInstanceOf;\n\n/**\n * Test if 'value' is a type of 'type'.\n * Alias: a\n * @param value value to test.\n * @param {String} type The name of the type.\n * @return {Boolean} true if 'value' is an arguments object, false otherwise.\n */\nis.type = function(value, type) {\n    return typeof value === type;\n};\nis.a = is.type;\n\n////////////////////////////////////////////////////////////////////////////////\n// Object State\n\n/**\n * Test if 'value' is empty. To be empty means to be an array, object or string with nothing contained.\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is empty, false otherwise.\n */\nis.empty = function(value) {\n    var type = toString.call(value);\n\n    if ('[object Array]' === type || '[object Arguments]' === type) {\n        return value.length === 0;\n    }\n\n    if ('[object Object]' === type) {\n        for (var key in value) if (owns.call(value, key)) return false;\n        return true;\n    }\n\n    if ('[object String]' === type) {\n        return value === '';\n    }\n\n    return false;\n};\n\n/**\n * Test if 'value' is an arguments object that is empty.\n * Alias: args\n * @param {Any} value value to test\n * @return {Boolean} true if 'value' is an arguments object with no args, false otherwise\n */\nis.emptyArguments = function(value) {\n    return '[object Arguments]' === toString.call(value) && value.length === 0;\n};\nis.noArgs = is.emptyArgs = is.emptyArguments;\n\n/**\n * Test if 'value' is an array containing no entries.\n * Aliases: emptyArry, emptyAry\n * @param {Any} value The value to test.\n * @return {Boolean} true if 'value' is an array with no elemnets.\n */\nis.emptyArray = function(value) {\n    return '[object Array]' === toString.call(value) && value.length === 0;\n};\nis.emptyArry = is.emptyAry = is.emptyArray;\n\n/**\n * Test if 'value' is an empty array(like) object.\n * Aliases: arguents.empty, args.empty, ary.empty, arry.empty\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is an empty array(like), false otherwise.\n */\nis.emptyArrayLike = function(value) {\n    return value.length === 0;\n};\nis.emptyArrLike = is.emptyArrayLike;\n\n/**\n * Test if 'value' is an empty string.\n * Alias: emptyStr\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is am empty string, false otherwise.\n */\nis.emptyString = function(value) {\n    return is.string(value) && value.length === 0;\n};\nis.emptyStr = is.emptyString;\n\n/**\n * Test if 'value' is an array containing at least 1 entry.\n * Aliases: nonEmptyArry, nonEmptyAry\n * @param {Any} value The value to test.\n * @return {Boolean} true if 'value' is an array with at least 1 value, false otherwise.\n */\nis.nonEmptyArray = function(value) {\n    return '[object Array]' === toString.call(value) && value.length > 0;\n};\nis.nonEmptyArr = is.nonEmptyArry = is.nonEmptyAry = is.nonEmptyArray;\n\n/**\n * Test if 'value' is an object with properties. Note: Arrays are objects.\n * Alias: nonEmptyObj\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is an object, false otherwise.\n */\nis.nonEmptyObject = function(value) {\n    return '[object Object]' === toString.call(value) && Object.keys(value).length > 0;\n};\nis.nonEmptyObj = is.nonEmptyObject;\n\n/**\n * Test if 'value' is an object with no properties. Note: Arrays are objects.\n * Alias: nonEmptyObj\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is an object, false otherwise.\n */\nis.emptyObject = function(value) {\n    return '[object Object]' === toString.call(value) && Object.keys(value).length === 0;\n};\nis.emptyObj = is.emptyObject;\n\n/**\n * Test if 'value' is a non-empty string.\n * Alias: nonEmptyStr\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a non-empty string, false otherwise.\n */\nis.nonEmptyString = function(value) {\n    return is.string(value) && value.length > 0;\n};\nis.nonEmptyStr = is.nonEmptyString;\n\n////////////////////////////////////////////////////////////////////////////////\n// Numeric Types within Number\n\n/**\n * Test if 'value' is an even number.\n * @param {Number} value to test.\n * @return {Boolean} true if 'value' is an even number, false otherwise.\n */\nis.even = function(value) {\n    return '[object Number]' === toString.call(value) && value % 2 === 0;\n};\n\n/**\n * Test if 'value' is a decimal number.\n * Aliases: decimalNumber, decNum\n * @param {Any} value value to test.\n * @return {Boolean} true if 'value' is a decimal number, false otherwise.\n */\nis.decimal = function(value) {\n    return '[object Number]' === toString.call(value) && value % 1 !== 0;\n};\nis.dec = is.decNum = is.decimal;\n\n/**\n * Test if 'value' is an integer.\n * Alias: integer\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is an integer, false otherwise.\n */\nis.integer = function(value) {\n    return '[object Number]' === toString.call(value) && value % 1 === 0;\n};\nis.int = is.integer;\n\n/**\n * is.nan\n * Test if `value` is not a number.\n *\n * @param {Mixed} value value to test\n * @return {Boolean} true if `value` is not a number, false otherwise\n * @api public\n */\nis.notANumber = function(value) {\n    return !is.num(value) || value !== value;\n};\nis.nan = is.notANum = is.notANumber;\n\n/**\n * Test if 'value' is an odd number.\n * @param {Number} value to test.\n * @return {Boolean} true if 'value' is an odd number, false otherwise.\n */\nis.odd = function(value) {\n    return !is.decimal(value) && '[object Number]' === toString.call(value) && value % 2 !== 0;\n};\nis.oddNumber = is.oddNum = is.odd;\n\n////////////////////////////////////////////////////////////////////////////////\n// Numeric Type & State\n\n/**\n * Test if 'value' is a positive number.\n * Alias: positiveNum, posNum\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a number, false otherwise.\n */\nis.positiveNumber = function(value) {\n    return '[object Number]' === toString.call(value) && value > 0;\n};\nis.pos = is.positive = is.posNum = is.positiveNum = is.positiveNumber;\n\n/**\n * Test if 'value' is a negative number.\n * Aliases: negNum, negativeNum\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a number, false otherwise.\n */\nis.negativeNumber = function(value) {\n    return '[object Number]' === toString.call(value) && value < 0;\n};\nis.neg = is.negNum = is.negativeNum = is.negativeNumber;\n\n/**\n * Test if 'value' is a negative integer.\n * Aliases: negInt, negativeInteger\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a negative integer, false otherwise.\n */\nis.negativeInteger = function(value) {\n    return '[object Number]' === toString.call(value) && value % 1 === 0 && value < 0;\n};\nis.negativeInt = is.negInt = is.negativeInteger;\n\n/**\n * Test if 'value' is a positive integer.\n * Alias: posInt\n * @param {Any} value to test.\n * @return {Boolean} true if 'value' is a positive integer, false otherwise.\n */\nis.positiveInteger = function(value) {\n    return '[object Number]' === toString.call(value) && value % 1 === 0 && value > 0;\n};\nis.posInt = is.positiveInt = is.positiveInteger;\n\n////////////////////////////////////////////////////////////////////////////////\n// Numeric Relationships\n\n/**\n * Test if 'value' is divisible by 'n'.\n * Alias: divisBy\n * @param {Number} value value to test.\n * @param {Number} n dividend.\n * @return {Boolean} true if 'value' is divisible by 'n', false otherwise.\n */\nis.divisibleBy = function(value, n) {\n    if (value === 0)\n        return false;\n    return '[object Number]' === toString.call(value) &&\n        n !== 0 &&\n        value % n === 0;\n};\nis.divBy = is.divisBy = is.divisibleBy;\n\n/**\n * Test if 'value' is greater than or equal to 'other'.\n * Aliases: greaterOrEq, greaterOrEqual\n * @param {Number} value value to test.\n * @param {Number} other value to compare with.\n * @return {Boolean} true, if value is greater than or equal to other, false otherwise.\n */\nis.greaterOrEqualTo = function(value, other) {\n    return value >= other;\n};\nis.greaterOrEqual = is.ge = is.greaterOrEqualTo;\n\n/**\n * Test if 'value' is greater than 'other'.\n * Aliases: greaterThan\n * @param {Number} value value to test.\n * @param {Number} other value to compare with.\n * @return {Boolean} true, if value is greater than other, false otherwise.\n */\nis.greaterThan = function(value, other) {\n    return value > other;\n};\nis.gt = is.greaterThan;\n\n/**\n * Test if 'value' is less than or equal to 'other'.\n * Alias: lessThanOrEq, lessThanOrEqual\n * @param {Number} value value to test\n * @param {Number} other value to compare with\n * @return {Boolean} true, if 'value' is less than or equal to 'other', false otherwise.\n */\nis.lessThanOrEqualTo = function(value, other) {\n    return value <= other;\n};\nis.lessThanOrEq = is.lessThanOrEqual = is.le = is.lessThanOrEqualTo;\n\n/**\n * Test if 'value' is less than 'other'.\n * Alias: lessThan\n * @param {Number} value value to test\n * @param {Number} other value to compare with\n * @return {Boolean} true, if 'value' is less than 'other', false otherwise.\n */\nis.lessThan = function(value, other) {\n    return value < other;\n};\nis.lt = is.lessThan;\n\n/**\n * Test if 'value' is greater than 'others' values.\n * Alias: max\n * @param {Number} value value to test.\n * @param {Array} others values to compare with.\n * @return {Boolean} true if 'value' is greater than 'others' values.\n */\nis.maximum = function(value, others) {\n    if (!is.arrayLike(others) || !is.number(value))\n        return false;\n\n    var len = others.length;\n    while (--len > -1) {\n        if (value < others[len]) {\n            return false;\n        }\n    }\n\n    return true;\n};\nis.max = is.maximum;\n\n/**\n * Test if 'value' is less than 'others' values.\n * Alias: min\n * @param {Number} value value to test.\n * @param {Array} others values to compare with.\n * @return {Boolean} true if 'value' is less than 'others' values.\n */\nis.minimum = function(value, others) {\n    if (!is.arrayLike(others) || !is.number(value))\n        return false;\n\n    var len = others.length;\n    while (--len > -1) {\n        if (value > others[len]) {\n            return false;\n        }\n    }\n\n    return true;\n};\nis.min = is.minimum;\n\n/**\n * Test if 'value' is within 'start' and 'finish'.\n * Alias: withIn\n * @param {Number} value value to test.\n * @param {Number} start lower bound.\n * @param {Number} finish upper bound.\n * @return {Boolean} true if 'value' is is within 'start' and 'finish', false otherwise.\n */\nis.within = function(value, start, finish) {\n    return value >= start && value <= finish;\n};\nis.withIn = is.within;\n\n/**\n * Test if 'value' is within 'precision' decimal places from 'comparitor'.\n * Alias: closish, near.\n * @param {Number} value value to test\n * @param {Number} comparitor value to test 'value' against\n * @param {Number} precision number of decimals to compare floating points, defaults to 2\n * @return {Boolean} true if 'value' is within 'precision' decimal places from 'comparitor', false otherwise.\n */\nis.prettyClose = function(value, comparitor, precision) {\n  if (!is.number(value) || !is.number(comparitor)) return false;\n  if (is.defined(precision) && !is.posInt(precision)) return false;\n  if (is.undefined(precision)) precision = 2;\n\n  return value.toFixed(precision) === comparitor.toFixed(precision);\n};\nis.closish = is.near = is.prettyClose;\n////////////////////////////////////////////////////////////////////////////////\n// Networking\n\n/**\n * Test if a value is a valid DNS address. eg www.stdarg.com is true while\n * 127.0.0.1 is false.\n * @param {Any} value to test if a DNS address.\n * @return {Boolean} true if a DNS address, false otherwise.\n * DNS Address is made up of labels separated by '.'\n * Each label must be between 1 and 63 characters long\n * The entire hostname (including the delimiting dots) has a maximum of 255 characters.\n * Hostname may not contain other characters, such as the underscore character (_)\n * other DNS names may contain the underscore.\n */\nis.dnsAddress = function(value) {\n    if (!is.nonEmptyStr(value))  return false;\n    if (value.length > 255)  return false;\n    if (numbersLabel.test(value))  return false;\n    if (!dnsLabel.test(value))  return false;\n    return true;\n    //var names = value.split('.');\n    //if (!is.array(names) || !names.length)  return false;\n    //if (names[0].indexOf('_') > -1)  return false;\n    //for (var i=0; i<names.length; i++) {\n        //if (!dnsLabel.test(names[i]))  return false;\n    //}\n    //return true;\n};\nis.dnsAddr = is.dns = is.dnsAddress;\nvar dnsLabel = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$/;\nvar numbersLabel = /^([0-9]|[0-9][0-9\\-]{0,61}[0-9])(\\.([0-9]|[0-9][0-9\\-]{0,61}[0-9]))*$/;\n\n/**\n * Test if value is a valid email address.\n * @param {Any} value to test if an email address.\n * @return {Boolean} true if an email address, false otherwise.\n */\nis.emailAddress = function(value) {\n    if (!is.nonEmptyStr(value))\n        return false;\n    return emailRegexp.test(value);\n};\nis.email = is.emailAddr = is.emailAddress;\nvar emailRegexp = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/;\n\n/**\n * Test if a value is either an IPv4 numeric IP address.\n * The rules are:\n * must be a string\n * length must be 15 characters or less\n * There must be four octets separated by a '.'\n * No octet can be less than 0 or greater than 255.\n * @param {Any} value to test if an ip address.\n * @return {Boolean} true if an ip address, false otherwise.\n */\nis.ipv4Address = function(value) {\n    if (!is.nonEmptyStr(value))  return false;\n    if (value.length > 15)  return false;\n    var octets = value.split('.');\n    if (!is.array(octets) || octets.length !== 4)  return false;\n    for (var i=0; i<octets.length; i++) {\n        var val = parseInt(octets[i], 10);\n        if (isNaN(val))  return false;\n        if (val < 0 || val > 255)  return false;\n    }\n    return true;\n};\nis.ipv4 = is.ipv4Addr = is.ipv4Address;\n\n/**\n * Test if a value is either an IPv6 numeric IP address.\n * @param {Any} value to test if an ip address.\n * @return {Boolean} true if an ip address, false otherwise.\n */\nis.ipv6Address = function(value) {\n    if (!is.nonEmptyStr(value))  return false;\n    return ipRegEx.v6({extract: true}).test(value);\n};\nis.ipv6 = is.ipv6Addr = is.ipv6Address;\n\n/**\n * Test if a value is either an IPv4 or IPv6 numeric IP address.\n * @param {Any} value to test if an ip address.\n * @return {Boolean} true if an ip address, false otherwise.\n */\nis.ipAddress = function(value) {\n    if (!is.nonEmptyStr(value)) return false;\n    return is.ipv4Address(value) || is.ipv6Address(value)\n};\nis.ip = is.ipAddr = is.ipAddress;\n\n/**\n * Test is a value is a valid ipv4, ipv6 or DNS name.\n * Aliases: host, hostAddr, hostAddress.\n * @param {Any} value to test if a host address.\n * @return {Boolean} true if a host address, false otherwise.\n */\nis.hostAddress = function(value) {\n    if (!is.nonEmptyStr(value)) return false;\n    return is.dns(value) || is.ipv4(value) || is.ipv6(value);\n};\nis.host = is.hostIp = is.hostAddr = is.hostAddress;\n\n/**\n * Test if a number is a valid TCP port\n * @param {Any} value to test if its a valid TCP port\n */\nis.port = function(value) {\n    if (!is.num(value) || is.negativeInt(value) || value > 65535)\n        return false;\n    return true;\n};\n\n/**\n * Test if a number is a valid TCP port in the range 0-1023.\n * Alias: is.sysPort.\n * @param {Any} value to test if its a valid TCP port\n */\nis.systemPort = function(value) {\n    if (is.port(value) && value < 1024)\n        return true;\n    return false;\n};\nis.sysPort = is.systemPort;\n\n/**\n * Test if a number is a valid TCP port in the range 1024-65535.\n * @param {Any} value to test if its a valid TCP port\n */\nis.userPort = function(value) {\n    if (is.port(value) && value > 1023)\n        return true;\n    return false;\n};\n\n/*\nfunction sumDigits(num) {\n    var str = num.toString();\n    var sum = 0;\n    for (var i = 0; i < str.length; i++)\n        sum += (str[i]-0);\n    return sum;\n}\n*/\n\n/**\n * Test if a string is a credit card.\n * From http://en.wikipedia.org/wiki/Luhn_algorithm\n * @param {String} value to test if a credit card.\n * @return true if the string is the correct format, false otherwise\n */\nis.creditCardNumber = function(str) {\n    if (!is.str(str))\n        return false;\n\n    var ary = str.split('');\n    var i, cnt;\n    // From the rightmost digit, which is the check digit, moving left, double\n    // the value of every second digit;\n    for (i=ary.length-1, cnt=1; i>-1; i--, cnt++) {\n        if (cnt%2 === 0)\n            ary[i] *= 2;\n    }\n\n    str = ary.join('');\n    var sum = 0;\n    // if the product of the previous doubling operation is greater than 9\n    // (e.g., 7 * 2 = 14), then sum the digits of the products (e.g., 10: 1 + 0\n    // = 1, 14: 1 + 4 = 5).  We do the this by joining the array of numbers and\n    // add adding the int value of all the characters in the string.\n    for (i=0; i<str.length; i++)\n        sum += Math.floor(str[i]);\n\n    // If the total (sum) modulo 10 is equal to 0 (if the total ends in zero)\n    // then the number is valid according to the Luhn formula; else it is not\n    // valid.\n    return sum % 10 === 0;\n};\nis.creditCard = is.creditCardNum = is.creditCardNumber;\n\n\n////////////////////////////////////////////////////////////////////////////////\n// The following credit card info is from:\n// http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n\n/**\n * Test if card number is an American Express card.\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.americanExpressCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 15)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,2));\n    if (prefix !== 34 && prefix !== 37)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.amexCard = is.amexCardNum = is.americanExpressCardNumber;\n\n/**\n * Test if card number is a China UnionPay card.\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.chinaUnionPayCardNumber = function(str) {\n    if (!is.str(str) || (str.length < 16 && str.length > 19))\n        return false;\n\n    var prefix = Math.floor(str.slice(0,2));\n    if (prefix !== 62 && prefix !== 88)\n        return false;\n\n    // no validation for this card\n    return true;\n};\nis.chinaUnion = is.chinaUnionPayCard = is.chinaUnionPayCardNumber;\n\n/**\n * Test if card number is a Diner's Club Carte Blance card.\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.dinersClubCarteBlancheCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 14)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,3));\n    if (prefix < 300 || prefix > 305)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.dinersClubCB = is.dinersClubCarteBlancheCard =\n    is.dinersClubCarteBlancheCardNumber;\n\n/**\n * Test if card number is a Diner's Club International card.\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.dinersClubInternationalCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 14)\n        return false;\n    var prefix = Math.floor(str.slice(0,3));\n    var prefix2 = Math.floor(str.slice(0,2));\n\n    // 300-305, 309, 36, 38-39\n    if ((prefix < 300 || prefix > 305) && prefix !== 309 && prefix2 !== 36 &&\n        (prefix2 < 38 || prefix2 > 39)) {\n        return false;\n    }\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.dinersClubInt = is.dinersClubInternationalCard =\n    is.dinersClubInternationalCardNumber;\n\n/**\n * Test if card number is a Diner's Club USA & CA card.\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.dinersClubUSACanadaCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n    var prefix = Math.floor(str.slice(0,2));\n\n    if (prefix !== 54 && prefix !== 55)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.dinersClub = is.dinersClubUSACanCard = is.dinersClubUSACanadaCardNumber;\n\n/**\n * Test if card number is a Diner's Club USA/CA card.\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.discoverCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,6));\n    var prefix2 = Math.floor(str.slice(0,3));\n\n    if (str.slice(0,4) !== '6011' && (prefix < 622126 || prefix > 622925) &&\n        (prefix2 < 644 || prefix2 > 649) && str.slice(0,2) !== '65') {\n        return false;\n    }\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.discover = is.discoverCard = is.discoverCardNumber;\n\n/**\n * Test if card number is an InstaPayment card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.instaPaymentCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,3));\n    if (prefix < 637 || prefix > 639)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.instaPayment = is.instaPaymentCardNumber;\n\n/**\n * Test if card number is a JCB card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.jcbCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,4));\n    if (prefix < 3528 || prefix > 3589)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.jcb = is.jcbCard = is.jcbCardNumber;\n\n/**\n * Test if card number is a Laser card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.laserCardNumber = function(str) {\n    if (!is.str(str) || (str.length < 16 && str.length > 19))\n        return false;\n\n    var prefix = Math.floor(str.slice(0,4));\n    var valid = [ 6304, 6706, 6771, 6709 ];\n    if (valid.indexOf(prefix) === -1)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.laser = is.laserCard = is.laserCardNumber;\n\n/**\n * Test if card number is a Maestro card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.maestroCardNumber = function(str) {\n    if (!is.str(str) || str.length < 12 || str.length > 19)\n        return false;\n\n    var prefix = str.slice(0,4);\n    var valid = [ '5018', '5020', '5038', '5612', '5893', '6304', '6759',\n        '6761', '6762', '6763', '0604', '6390' ];\n\n    if (valid.indexOf(prefix) === -1)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.maestro = is.maestroCard = is.maestroCardNumber;\n\n/**\n * Test if card number is a Dankort card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.dankortCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n\n    if (str.slice(0,4) !== '5019')\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.dankort = is.dankortCard = is.dankortCardNumber;\n\n/**\n * Test if card number is a MasterCard card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.masterCardCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,2));\n    if (prefix < 50 || prefix > 55)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\nis.masterCard = is.masterCardCard = is.masterCardCardNumber;\n\n/**\n * Test if card number is a Visa card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.visaCardNumber = function(str) {\n    if (!is.str(str) || (str.length !== 13 && str.length !== 16))\n        return false;\n\n    if ('4' !== str.slice(0,1))\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return true;\n};\n\nis.visa = is.visaCard = is.visaCardNumber;\n\n/**\n * Test if card number is a Visa card number\n * @param {String} the credit card number string to test.\n * @return true if the string is the correct format, false otherwise\n */\nis.visaElectronCardNumber = function(str) {\n    if (!is.str(str) || str.length !== 16)\n        return false;\n\n    var prefix = Math.floor(str.slice(0,4));\n    var valid = [ 4026, 4405, 4508, 4844, 4913, 4917 ];\n    if ('417500' !== str.slice(0,6) && valid.indexOf(prefix) === -1)\n        return false;\n\n    if (!is.creditCardNumber(str))\n        return false;\n\n    return false;\n};\n\nis.visaElectron = is.visaElectronCard = is.visaElectronCardNumber;\n\n/**\n * Test if the input is a valid MongoDB id.\n * @param {String|Object} Either a mongodb object id or a string representation.\n * @return true if the string is the correct format, false otherwise\n * Thanks to Jason Denizac (https://github.com/jden) for pointing this out.\n * https://github.com/jden/objectid/blob/master/index.js#L7-L10\n */\nvar objIdPattern = /^[0-9a-fA-F]{24}$/;\nis.mongoId = is.objectId = is.objId = function(id) {\n  return (Boolean(id) && !Array.isArray(id) && objIdPattern.test(String(id)));\n};\n\n/**\n * Test is the first argument is structly equal to any of the subsequent args.\n * @param Value to test against subsequent arguments.\n * @return true if the first value matches any of subsequent values.\n */\nis.matching = is.match = is.inArgs = function(val) {\n    if (arguments.length < 2)\n        return false;\n    var result = false;\n    for (var i=1; i<arguments.length; i++) {\n        var eq = is.equal(val, arguments[i]);\n        result = result || eq;\n    }\n    return result;\n};\n\n\n\n// US Address components\n/**********************************\n***Definitely a work in progress***\n**********************************/\n/**\n * Test if a string contains a US street address\n * @param {String} the string to search\n * @return true if an address is present, false otherwise\n */\nis.streetAddress = function(str) {\n  if (!is.str(str))\n      return false;\n\n  var regex = /\\b\\d+[\\s](?:[A-Za-z0-9.-]+[\\s]+)+\\b(ALLEY|ALY|AVENUE|AVE|BEND|BND|BLUFFS?|BLFS?|BOULEVARD|BLVD|BRANCH|BR|CENTERS?|CTRS?|CIRCLES?|CIRS?|CLIFFS?|CLFS?|COURTS?|CTS?|COVES?|CVS?|CREEK|CRK|CRESCENT|CRES|CREST|CRST|CROSSING|XING|DRIVES?|DRS?|EXPRESSWAY|EXPY|FREEWAY|FWY|HEIGHTS|HTS|HIGHWAY|HWY|HILLS?|HLS?|LANE|LN|LOOP|MANORS?|MNRS?|MOTORWAY|MTWY|MOUNT|MT|PARKS?|PARKWAYS?|PKWY|PASS|PLACE|PL|PLAZA|PLZ|POINTS?|PTS?|RIDGES?|RDGS?|ROADS?|RDS?|ROUTE|RTE?|SHOALS?|SHLS?|SHORES?|SHRS?|SPRINGS?|SPGS?|SPURS?|STREETS?|STS?|SUMMIT|SMT|TERRACE|TER|THROUGHWAY|TRWY|TRAFFICWAY|TRFY|TRAIL|TRL|TURNPIKE|TPKE|VALLEYS?|VLYS?|WAYS?)+(?:[\\.\\-\\s\\,]?)*((APARTMENT|APT|APPT|#|NUMBER|NUM|FLOOR|FL|\\s)?(\\d)*)\\b/ig;\n\n  return regex.test(str);\n};\nis.street = is.address = is.streetAddress;\n\n/**\n * Test if a string resembles a US Zip code,\n * no regular expression will be perfect for this,\n * as there are many numbers that aren't valid zip codes\n * @param {String || Number} the string or number literal to test\n * @return true if zipcode like, false otherwise\n */\nis.zipCode = function(str) {\n  if (is.undefined(str) || !(is.string(str) || is.number(str)))\n    return false;\n\n  var zip = /^\\d{5}(?:-\\d{4})?$/;\n  return zip.test(str);\n};\nis.zip = is.zipCode;\n\n/**\n * Test if a string contains a US phone number\n * @param {String} the string to search\n * @return true if str contains a phone number, false otherwise.\n */\n is.phoneNumber = function(str){\n   if (!is.string(str))\n    return false;\n   var nums = /(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:(\\(?)(?:(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]‌​)\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\)?)\\s*(?:[.-]\\s*)?)?([2-9]1[02-‌​9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})/g;\n   return nums.test(str);\n };\n is.phone = is.phoneNumber;\n\n/**\n * Test is a string is a valid URL\n * @param {string} val - the possible url to check\n * @return true if str contains a phone number, false otherwise.\n */\nvar isUrl = require('is-url');\nis.url = function(val) {\n    return isUrl(val);\n};\nis.uri = is.url;\n\nis.enumerator = function(val, ary){\n  var value = false;\n\n  if (!is.defined(val) || !is.defined(ary) || !is.arrayLike(ary))\n    return value;\n\n  for (var i = 0, len = ary.length; i < len; i++) {\n    if (is.equal(val, ary[i])) {\n      value = true;\n      break;\n    }\n  }\n  return value;\n};\nis.enum = is.inArray = is.enumerator;\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                if (path.dirname(p) === p) return cb(er);\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict';\nvar isWindows = process.platform === 'win32';\nvar trailingSlashRe = isWindows ? /[^:]\\\\$/ : /.\\/$/;\n\n// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43\nmodule.exports = function () {\n\tvar path;\n\n\tif (isWindows) {\n\t\tpath = process.env.TEMP ||\n\t\t\tprocess.env.TMP ||\n\t\t\t(process.env.SystemRoot || process.env.windir) + '\\\\temp';\n\t} else {\n\t\tpath = process.env.TMPDIR ||\n\t\t\tprocess.env.TMP ||\n\t\t\tprocess.env.TEMP ||\n\t\t\t'/tmp';\n\t}\n\n\tif (trailingSlashRe.test(path)) {\n\t\tpath = path.slice(0, -1);\n\t}\n\n\treturn path;\n};\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","/**\n * @fileOverview\n * A simple promises-based check to see if a TCP port is already in use.\n */\n'use strict';\n\n// define the exports first to avoid cyclic dependencies.\nexports.check = check;\nexports.waitUntilFreeOnHost = waitUntilFreeOnHost;\nexports.waitUntilFree = waitUntilFree;\nexports.waitUntilUsedOnHost = waitUntilUsedOnHost;\nexports.waitUntilUsed = waitUntilUsed;\nexports.waitForStatus = waitForStatus;\n\nvar is = require('is2');\nvar net = require('net');\nvar util = require('util');\nvar debug = require('debug')('tcp-port-used');\n\n// Global Values\nvar TIMEOUT = 2000;\nvar RETRYTIME = 250;\n\nfunction getDeferred() {\n    var resolve, reject, promise = new Promise(function(res, rej) {\n        resolve = res;\n        reject = rej;\n    });\n\n    return {\n        resolve: resolve,\n        reject: reject,\n        promise: promise\n    };\n}\n\n/**\n * Creates an options object from all the possible arguments\n * @private\n * @param {Number} port a valid TCP port number\n * @param {String} host The DNS name or IP address.\n * @param {Boolean} status The desired in use status to wait for: false === not in use, true === in use\n * @param {Number} retryTimeMs the retry interval in milliseconds - defaultis is 200ms\n * @param {Number} timeOutMs the amount of time to wait until port is free default is 1000ms\n * @return {Object} An options object with all the above parameters as properties.\n */\nfunction makeOptionsObj(port, host, inUse, retryTimeMs, timeOutMs) {\n    var opts = {};\n    opts.port = port;\n    opts.host = host;\n    opts.inUse = inUse;\n    opts.retryTimeMs = retryTimeMs;\n    opts.timeOutMs = timeOutMs;\n    return opts;\n}\n\n/**\n * Checks if a TCP port is in use by creating the socket and binding it to the\n * target port. Once bound, successfully, it's assume the port is availble.\n * After the socket is closed or in error, the promise is resolved.\n * Note: you have to be super user to correctly test system ports (0-1023).\n * @param {Number|Object} port The port you are curious to see if available. If an object, must have the parameters as properties.\n * @param {String} [host] May be a DNS name or IP address. Default '127.0.0.1'\n * @return {Object} A deferred Q promise.\n *\n * Example usage:\n *\n * var tcpPortUsed = require('tcp-port-used');\n * tcpPortUsed.check(22, '127.0.0.1')\n * .then(function(inUse) {\n *    debug('Port 22 usage: '+inUse);\n * }, function(err) {\n *    console.error('Error on check: '+util.inspect(err));\n * });\n */\nfunction check(port, host) {\n\n    var deferred = getDeferred();\n    var inUse = true;\n    var client;\n\n    var opts;\n    if (!is.obj(port)) {\n        opts = makeOptionsObj(port, host);\n    } else {\n        opts = port;\n    }\n\n    if (!is.port(opts.port)) {\n        debug('Error invalid port: '+util.inspect(opts.port));\n        deferred.reject(new Error('invalid port: '+util.inspect(opts.port)));\n        return deferred.promise;\n    }\n\n    if (is.nullOrUndefined(opts.host)) {\n        debug('set host address to default 127.0.0.1');\n        opts.host = '127.0.0.1';\n    }\n\n    function cleanUp() {\n        if (client) {\n            client.removeAllListeners('connect');\n            client.removeAllListeners('error');\n            client.end();\n            client.destroy();\n            client.unref();\n        }\n        //debug('listeners removed from client socket');\n    }\n\n    function onConnectCb() {\n        //debug('check - promise resolved - in use');\n        deferred.resolve(inUse);\n        cleanUp();\n    }\n\n    function onErrorCb(err) {\n        if (err.code !== 'ECONNREFUSED') {\n            //debug('check - promise rejected, error: '+err.message);\n            deferred.reject(err);\n        } else {\n            //debug('ECONNREFUSED');\n            inUse = false;\n            //debug('check - promise resolved - not in use');\n            deferred.resolve(inUse);\n        }\n        cleanUp();\n    }\n\n    client = new net.Socket();\n    client.once('connect', onConnectCb);\n    client.once('error', onErrorCb);\n    client.connect({port: opts.port, host: opts.host}, function() {});\n\n    return deferred.promise;\n}\n\n/**\n * Creates a deferred promise and fulfills it only when the socket's usage\n * equals status in terms of 'in use' (false === not in use, true === in use).\n * Will retry on an interval specified in retryTimeMs.  Note: you have to be\n * super user to correctly test system ports (0-1023).\n * @param {Number|Object} port a valid TCP port number, if an object, has all the parameters described as properties.\n * @param {String} host The DNS name or IP address.\n * @param {Boolean} status The desired in use status to wait for false === not in use, true === in use\n * @param {Number} [retryTimeMs] the retry interval in milliseconds - defaultis is 200ms\n * @param {Number} [timeOutMs] the amount of time to wait until port is free default is 1000ms\n * @return {Object} A deferred promise from the Q library.\n *\n * Example usage:\n *\n * var tcpPortUsed = require('tcp-port-used');\n * tcpPortUsed.waitForStatus(44204, 'some.host.com', true, 500, 4000)\n * .then(function() {\n *     console.log('Port 44204 is now in use.');\n * }, function(err) {\n *     console.log('Error: ', error.message);\n * });\n */\nfunction waitForStatus(port, host, inUse, retryTimeMs, timeOutMs) {\n\n    var deferred = getDeferred();\n    var timeoutId;\n    var timedout = false;\n    var retryId;\n\n    // the first arument may be an object, if it is not, make an object\n    var opts;\n    if (is.obj(port)) {\n        opts = port;\n    } else {\n        opts = makeOptionsObj(port, host, inUse, retryTimeMs, timeOutMs);\n    }\n\n    //debug('opts:'+util.inspect(opts);\n\n    if (!is.bool(opts.inUse)) {\n        deferred.reject(new Error('inUse must be a boolean'));\n        return deferred.promise;\n    }\n\n    if (!is.positiveInt(opts.retryTimeMs)) {\n        opts.retryTimeMs = RETRYTIME;\n        debug('set retryTime to default '+RETRYTIME+'ms');\n    }\n\n    if (!is.positiveInt(opts.timeOutMs)) {\n        opts.timeOutMs = TIMEOUT;\n        debug('set timeOutMs to default '+TIMEOUT+'ms');\n    }\n\n    function cleanUp() {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (retryId) {\n            clearTimeout(retryId);\n        }\n    }\n\n    function timeoutFunc() {\n        timedout = true;\n        cleanUp();\n        deferred.reject(new Error('timeout'));\n    }\n    timeoutId = setTimeout(timeoutFunc, opts.timeOutMs);\n\n    function doCheck() {\n        check(opts.port, opts.host)\n        .then(function(inUse) {\n            if (timedout) {\n                return;\n            }\n            //debug('doCheck inUse: '+inUse);\n            //debug('doCheck opts.inUse: '+opts.inUse);\n            if (inUse === opts.inUse) {\n                deferred.resolve();\n                cleanUp();\n                return;\n            } else {\n                retryId = setTimeout(function() { doCheck(); }, opts.retryTimeMs);\n                return;\n            }\n        }, function(err) {\n            if (timedout) {\n                return;\n            }\n            deferred.reject(err);\n            cleanUp();\n        });\n    }\n\n    doCheck();\n    return deferred.promise;\n}\n\n/**\n * Creates a deferred promise and fulfills it only when the socket is free.\n * Will retry on an interval specified in retryTimeMs.\n * Note: you have to be super user to correctly test system ports (0-1023).\n * @param {Number} port a valid TCP port number\n * @param {String} [host] The hostname or IP address of where the socket is.\n * @param {Number} [retryTimeMs] the retry interval in milliseconds - defaultis is 100ms.\n * @param {Number} [timeOutMs] the amount of time to wait until port is free. Default 300ms.\n * @return {Object} A deferred promise from the q library.\n *\n * Example usage:\n *\n * var tcpPortUsed = require('tcp-port-used');\n * tcpPortUsed.waitUntilFreeOnHost(44203, 'some.host.com', 500, 4000)\n * .then(function() {\n *     console.log('Port 44203 is now free.');\n *  }, function(err) {\n *     console.loh('Error: ', error.message);\n *  });\n */\nfunction waitUntilFreeOnHost(port, host, retryTimeMs, timeOutMs) {\n\n    // the first arument may be an object, if it is not, make an object\n    var opts;\n    if (is.obj(port)) {\n        opts = port;\n        opts.inUse = false;\n    } else {\n        opts = makeOptionsObj(port, host, false, retryTimeMs, timeOutMs);\n    }\n\n    return waitForStatus(opts);\n}\n\n/**\n * For compatibility with previous version of the module, that did not provide\n * arguements for hostnames. The host is set to the localhost '127.0.0.1'.\n * @param {Number|Object} port a valid TCP port number. If an object, must contain all the parameters as properties.\n * @param {Number} [retryTimeMs] the retry interval in milliseconds - defaultis is 100ms.\n * @param {Number} [timeOutMs] the amount of time to wait until port is free. Default 300ms.\n * @return {Object} A deferred promise from the q library.\n *\n * Example usage:\n *\n * var tcpPortUsed = require('tcp-port-used');\n * tcpPortUsed.waitUntilFree(44203, 500, 4000)\n * .then(function() {\n *     console.log('Port 44203 is now free.');\n *  }, function(err) {\n *     console.loh('Error: ', error.message);\n *  });\n */\nfunction waitUntilFree(port, retryTimeMs, timeOutMs) {\n\n    // the first arument may be an object, if it is not, make an object\n    var opts;\n    if (is.obj(port)) {\n        opts = port;\n        opts.host = '127.0.0.1';\n        opts.inUse = false;\n    } else {\n        opts = makeOptionsObj(port, '127.0.0.1', false, retryTimeMs, timeOutMs);\n    }\n\n    return waitForStatus(opts);\n}\n\n/**\n * Creates a deferred promise and fulfills it only when the socket is used.\n * Will retry on an interval specified in retryTimeMs.\n * Note: you have to be super user to correctly test system ports (0-1023).\n * @param {Number|Object} port a valid TCP port number. If an object, must contain all the parameters as properties.\n * @param {Number} [retryTimeMs] the retry interval in milliseconds - defaultis is 500ms\n * @param {Number} [timeOutMs] the amount of time to wait until port is free\n * @return {Object} A deferred promise from the q library.\n *\n * Example usage:\n *\n * var tcpPortUsed = require('tcp-port-used');\n * tcpPortUsed.waitUntilUsedOnHost(44204, 'some.host.com', 500, 4000)\n * .then(function() {\n *     console.log('Port 44204 is now in use.');\n * }, function(err) {\n *     console.log('Error: ', error.message);\n * });\n */\nfunction waitUntilUsedOnHost(port, host, retryTimeMs, timeOutMs) {\n\n    // the first arument may be an object, if it is not, make an object\n    var opts;\n    if (is.obj(port)) {\n        opts = port;\n        opts.inUse = true;\n    } else {\n        opts = makeOptionsObj(port, host, true, retryTimeMs, timeOutMs);\n    }\n\n    return waitForStatus(opts);\n}\n\n/**\n * For compatibility to previous version of module which did not have support\n * for host addresses. This function works only for localhost.\n * @param {Number} port a valid TCP port number. If an Object, must contain all the parameters as properties.\n * @param {Number} [retryTimeMs] the retry interval in milliseconds - defaultis is 500ms\n * @param {Number} [timeOutMs] the amount of time to wait until port is free\n * @return {Object} A deferred promise from the q library.\n *\n * Example usage:\n *\n * var tcpPortUsed = require('tcp-port-used');\n * tcpPortUsed.waitUntilUsed(44204, 500, 4000)\n * .then(function() {\n *     console.log('Port 44204 is now in use.');\n * }, function(err) {\n *     console.log('Error: ', error.message);\n * });\n */\nfunction waitUntilUsed(port, retryTimeMs, timeOutMs) {\n\n    // the first arument may be an object, if it is not, make an object\n    var opts;\n    if (is.obj(port)) {\n        opts = port;\n        opts.host = '127.0.0.1';\n        opts.inUse = true;\n    } else {\n        opts = makeOptionsObj(port, '127.0.0.1', true, retryTimeMs, timeOutMs);\n    }\n\n    return waitUntilUsedOnHost(opts);\n}\n\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\treturn createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/*!\n * Tmp\n *\n * Copyright (c) 2011-2017 KARASZI Istvan <github@spam.raszi.hu>\n *\n * MIT Licensed\n */\n\n/*\n * Module dependencies.\n */\nconst fs = require('fs');\nconst path = require('path');\nconst crypto = require('crypto');\nconst osTmpDir = require('os-tmpdir');\nconst _c = process.binding('constants');\n\n/*\n * The working inner variables.\n */\nconst\n  /**\n   * The temporary directory.\n   * @type {string}\n   */\n  tmpDir = osTmpDir(),\n\n  // the random characters to choose from\n  RANDOM_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n\n  TEMPLATE_PATTERN = /XXXXXX/,\n\n  DEFAULT_TRIES = 3,\n\n  CREATE_FLAGS = (_c.O_CREAT || _c.fs.O_CREAT) | (_c.O_EXCL || _c.fs.O_EXCL) | (_c.O_RDWR || _c.fs.O_RDWR),\n\n  EBADF = _c.EBADF || _c.os.errno.EBADF,\n  ENOENT = _c.ENOENT || _c.os.errno.ENOENT,\n\n  DIR_MODE = 448 /* 0o700 */,\n  FILE_MODE = 384 /* 0o600 */,\n\n  // this will hold the objects need to be removed on exit\n  _removeObjects = [];\n\nvar\n  _gracefulCleanup = false,\n  _uncaughtException = false;\n\n/**\n * Random name generator based on crypto.\n * Adapted from http://blog.tompawlak.org/how-to-generate-random-values-nodejs-javascript\n *\n * @param {number} howMany\n * @returns {string} the generated random name\n * @private\n */\nfunction _randomChars(howMany) {\n  var\n    value = [],\n    rnd = null;\n\n  // make sure that we do not fail because we ran out of entropy\n  try {\n    rnd = crypto.randomBytes(howMany);\n  } catch (e) {\n    rnd = crypto.pseudoRandomBytes(howMany);\n  }\n\n  for (var i = 0; i < howMany; i++) {\n    value.push(RANDOM_CHARS[rnd[i] % RANDOM_CHARS.length]);\n  }\n\n  return value.join('');\n}\n\n/**\n * Checks whether the `obj` parameter is defined or not.\n *\n * @param {Object} obj\n * @returns {boolean} true if the object is undefined\n * @private\n */\nfunction _isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\n/**\n * Parses the function arguments.\n *\n * This function helps to have optional arguments.\n *\n * @param {(Options|Function)} options\n * @param {Function} callback\n * @returns {Array} parsed arguments\n * @private\n */\nfunction _parseArguments(options, callback) {\n  if (typeof options == 'function') {\n    return [callback || {}, options];\n  }\n\n  if (_isUndefined(options)) {\n    return [{}, callback];\n  }\n\n  return [options, callback];\n}\n\n/**\n * Generates a new temporary name.\n *\n * @param {Object} opts\n * @returns {string} the new random name according to opts\n * @private\n */\nfunction _generateTmpName(opts) {\n  if (opts.name) {\n    return path.join(opts.dir || tmpDir, opts.name);\n  }\n\n  // mkstemps like template\n  if (opts.template) {\n    return opts.template.replace(TEMPLATE_PATTERN, _randomChars(6));\n  }\n\n  // prefix and postfix\n  const name = [\n    opts.prefix || 'tmp-',\n    process.pid,\n    _randomChars(12),\n    opts.postfix || ''\n  ].join('');\n\n  return path.join(opts.dir || tmpDir, name);\n}\n\n/**\n * Gets a temporary file name.\n *\n * @param {(Options|tmpNameCallback)} options options or callback\n * @param {?tmpNameCallback} callback the callback function\n */\nfunction tmpName(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1],\n    tries = opts.name ? 1 : opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    return cb(new Error('Invalid tries'));\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    return cb(new Error('Invalid template provided'));\n\n  (function _getUniqueName() {\n    const name = _generateTmpName(opts);\n\n    // check whether the path exists then retry if needed\n    fs.stat(name, function (err) {\n      if (!err) {\n        if (tries-- > 0) return _getUniqueName();\n\n        return cb(new Error('Could not get a unique tmp filename, max tries reached ' + name));\n      }\n\n      cb(null, name);\n    });\n  }());\n}\n\n/**\n * Synchronous version of tmpName.\n *\n * @param {Object} options\n * @returns {string} the generated random name\n * @throws {Error} if the options are invalid or could not generate a filename\n */\nfunction tmpNameSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0],\n    tries = opts.name ? 1 : opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    throw new Error('Invalid tries');\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    throw new Error('Invalid template provided');\n\n  do {\n    const name = _generateTmpName(opts);\n    try {\n      fs.statSync(name);\n    } catch (e) {\n      return name;\n    }\n  } while (tries-- > 0);\n\n  throw new Error('Could not get a unique tmp filename, max tries reached');\n}\n\n/**\n * Creates and opens a temporary file.\n *\n * @param {(Options|fileCallback)} options the config options or the callback function\n * @param {?fileCallback} callback\n */\nfunction file(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  opts.postfix = (_isUndefined(opts.postfix)) ? '.tmp' : opts.postfix;\n\n  // gets a temporary filename\n  tmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create and open the file\n    fs.open(name, CREATE_FLAGS, opts.mode || FILE_MODE, function _fileCreated(err, fd) {\n      if (err) return cb(err);\n\n      if (opts.discardDescriptor) {\n        return fs.close(fd, function _discardCallback(err) {\n          if (err) {\n            // Low probability, and the file exists, so this could be\n            // ignored.  If it isn't we certainly need to unlink the\n            // file, and if that fails too its error is more\n            // important.\n            try {\n              fs.unlinkSync(name);\n            } catch (e) {\n              if (!isENOENT(e)) {\n                err = e;\n              }\n            }\n            return cb(err);\n          }\n          cb(null, name, undefined, _prepareTmpFileRemoveCallback(name, -1, opts));\n        });\n      }\n      if (opts.detachDescriptor) {\n        return cb(null, name, fd, _prepareTmpFileRemoveCallback(name, -1, opts));\n      }\n      cb(null, name, fd, _prepareTmpFileRemoveCallback(name, fd, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of file.\n *\n * @param {Options} options\n * @returns {FileSyncObject} object consists of name, fd and removeCallback\n * @throws {Error} if cannot create a file\n */\nfunction fileSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  opts.postfix = opts.postfix || '.tmp';\n\n  const discardOrDetachDescriptor = opts.discardDescriptor || opts.detachDescriptor;\n  const name = tmpNameSync(opts);\n  var fd = fs.openSync(name, CREATE_FLAGS, opts.mode || FILE_MODE);\n  if (opts.discardDescriptor) {\n    fs.closeSync(fd); \n    fd = undefined;\n  }\n\n  return {\n    name: name,\n    fd: fd,\n    removeCallback: _prepareTmpFileRemoveCallback(name, discardOrDetachDescriptor ? -1 : fd, opts)\n  };\n}\n\n/**\n * Removes files and folders in a directory recursively.\n *\n * @param {string} root\n * @private\n */\nfunction _rmdirRecursiveSync(root) {\n  const dirs = [root];\n\n  do {\n    var\n      dir = dirs.pop(),\n      deferred = false,\n      files = fs.readdirSync(dir);\n\n    for (var i = 0, length = files.length; i < length; i++) {\n      var\n        file = path.join(dir, files[i]),\n        stat = fs.lstatSync(file); // lstat so we don't recurse into symlinked directories\n\n      if (stat.isDirectory()) {\n        if (!deferred) {\n          deferred = true;\n          dirs.push(dir);\n        }\n        dirs.push(file);\n      } else {\n        fs.unlinkSync(file);\n      }\n    }\n\n    if (!deferred) {\n      fs.rmdirSync(dir);\n    }\n  } while (dirs.length !== 0);\n}\n\n/**\n * Creates a temporary directory.\n *\n * @param {(Options|dirCallback)} options the options or the callback function\n * @param {?dirCallback} callback\n */\nfunction dir(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  // gets a temporary filename\n  tmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create the directory\n    fs.mkdir(name, opts.mode || DIR_MODE, function _dirCreated(err) {\n      if (err) return cb(err);\n\n      cb(null, name, _prepareTmpDirRemoveCallback(name, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of dir.\n *\n * @param {Options} options\n * @returns {DirSyncObject} object consists of name and removeCallback\n * @throws {Error} if it cannot create a directory\n */\nfunction dirSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  const name = tmpNameSync(opts);\n  fs.mkdirSync(name, opts.mode || DIR_MODE);\n\n  return {\n    name: name,\n    removeCallback: _prepareTmpDirRemoveCallback(name, opts)\n  };\n}\n\n/**\n * Prepares the callback for removal of the temporary file.\n *\n * @param {string} name the path of the file\n * @param {number} fd file descriptor\n * @param {Object} opts\n * @returns {fileCallback}\n * @private\n */\nfunction _prepareTmpFileRemoveCallback(name, fd, opts) {\n  const removeCallback = _prepareRemoveCallback(function _removeCallback(fdPath) {\n    try {\n      if (0 <= fdPath[0]) {\n        fs.closeSync(fdPath[0]);\n      }\n    }\n    catch (e) {\n      // under some node/windows related circumstances, a temporary file\n      // may have not be created as expected or the file was already closed\n      // by the user, in which case we will simply ignore the error\n      if (!isEBADF(e) && !isENOENT(e)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n    try {\n      fs.unlinkSync(fdPath[1]);\n    }\n    catch (e) {\n      if (!isENOENT(e)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n  }, [fd, name]);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Prepares the callback for removal of the temporary directory.\n *\n * @param {string} name\n * @param {Object} opts\n * @returns {Function} the callback\n * @private\n */\nfunction _prepareTmpDirRemoveCallback(name, opts) {\n  const removeFunction = opts.unsafeCleanup ? _rmdirRecursiveSync : fs.rmdirSync.bind(fs);\n  const removeCallback = _prepareRemoveCallback(removeFunction, name);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Creates a guarded function wrapping the removeFunction call.\n *\n * @param {Function} removeFunction\n * @param {Object} arg\n * @returns {Function}\n * @private\n */\nfunction _prepareRemoveCallback(removeFunction, arg) {\n  var called = false;\n\n  return function _cleanupCallback(next) {\n    if (!called) {\n      const index = _removeObjects.indexOf(_cleanupCallback);\n      if (index >= 0) {\n        _removeObjects.splice(index, 1);\n      }\n\n      called = true;\n      removeFunction(arg);\n    }\n\n    if (next) next(null);\n  };\n}\n\n/**\n * The garbage collector.\n *\n * @private\n */\nfunction _garbageCollector() {\n  if (_uncaughtException && !_gracefulCleanup) {\n    return;\n  }\n\n  // the function being called removes itself from _removeObjects,\n  // loop until _removeObjects is empty\n  while (_removeObjects.length) {\n    try {\n      _removeObjects[0].call(null);\n    } catch (e) {\n      // already removed?\n    }\n  }\n}\n\n/**\n * Helper for testing against EBADF to compensate changes made to Node 7.x under Windows.\n */\nfunction isEBADF(error) {\n  return isExpectedError(error, -EBADF, 'EBADF');\n}\n\n/**\n * Helper for testing against ENOENT to compensate changes made to Node 7.x under Windows.\n */\nfunction isENOENT(error) {\n  return isExpectedError(error, -ENOENT, 'ENOENT');\n}\n\n/**\n * Helper to determine whether the expected error code matches the actual code and errno,\n * which will differ between the supported node versions.\n *\n * - Node >= 7.0:\n *   error.code {String}\n *   error.errno {String|Number} any numerical value will be negated\n *\n * - Node >= 6.0 < 7.0:\n *   error.code {String}\n *   error.errno {Number} negated\n *\n * - Node >= 4.0 < 6.0: introduces SystemError\n *   error.code {String}\n *   error.errno {Number} negated\n *\n * - Node >= 0.10 < 4.0:\n *   error.code {Number} negated\n *   error.errno n/a\n */\nfunction isExpectedError(error, code, errno) {\n  return error.code == code || error.code == errno;\n}\n\n/**\n * Sets the graceful cleanup.\n *\n * Also removes the created files and directories when an uncaught exception occurs.\n */\nfunction setGracefulCleanup() {\n  _gracefulCleanup = true;\n}\n\nconst version = process.versions.node.split('.').map(function (value) {\n  return parseInt(value, 10);\n});\n\nif (version[0] === 0 && (version[1] < 9 || version[1] === 9 && version[2] < 5)) {\n  process.addListener('uncaughtException', function _uncaughtExceptionThrown(err) {\n    _uncaughtException = true;\n    _garbageCollector();\n\n    throw err;\n  });\n}\n\nprocess.addListener('exit', function _exit(code) {\n  if (code) _uncaughtException = true;\n  _garbageCollector();\n});\n\n/**\n * Configuration options.\n *\n * @typedef {Object} Options\n * @property {?number} tries the number of tries before give up the name generation\n * @property {?string} template the \"mkstemp\" like filename template\n * @property {?string} name fix name\n * @property {?string} dir the tmp directory to use\n * @property {?string} prefix prefix for the generated name\n * @property {?string} postfix postfix for the generated name\n */\n\n/**\n * @typedef {Object} FileSyncObject\n * @property {string} name the name of the file\n * @property {string} fd the file descriptor\n * @property {fileCallback} removeCallback the callback function to remove the file\n */\n\n/**\n * @typedef {Object} DirSyncObject\n * @property {string} name the name of the directory\n * @property {fileCallback} removeCallback the callback function to remove the directory\n */\n\n/**\n * @callback tmpNameCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n */\n\n/**\n * @callback fileCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n * @param {number} fd the file descriptor\n * @param {cleanupCallback} fn the cleanup callback function\n */\n\n/**\n * @callback dirCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n * @param {cleanupCallback} fn the cleanup callback function\n */\n\n/**\n * Removes the temporary created file or directory.\n *\n * @callback cleanupCallback\n * @param {simpleCallback} [next] function to call after entry was removed\n */\n\n/**\n * Callback function for function composition.\n * @see {@link https://github.com/raszi/node-tmp/issues/57|raszi/node-tmp#57}\n *\n * @callback simpleCallback\n */\n\n// exporting all the needed methods\nmodule.exports.tmpdir = tmpDir;\n\nmodule.exports.dir = dir;\nmodule.exports.dirSync = dirSync;\n\nmodule.exports.file = file;\nmodule.exports.fileSync = fileSync;\n\nmodule.exports.tmpName = tmpName;\nmodule.exports.tmpNameSync = tmpNameSync;\n\nmodule.exports.setGracefulCleanup = setGracefulCleanup;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst protocol_1 = require(\"./protocol\");\nconst messages_1 = require(\"./messages\");\nconst Net = require(\"net\");\nconst url_1 = require(\"url\");\nclass Source {\n    constructor(name, path, id = 0, origin, data) {\n        this.name = name;\n        this.path = path;\n        this.sourceReference = id;\n        if (origin) {\n            this.origin = origin;\n        }\n        if (data) {\n            this.adapterData = data;\n        }\n    }\n}\nexports.Source = Source;\nclass Scope {\n    constructor(name, reference, expensive = false) {\n        this.name = name;\n        this.variablesReference = reference;\n        this.expensive = expensive;\n    }\n}\nexports.Scope = Scope;\nclass StackFrame {\n    constructor(i, nm, src, ln = 0, col = 0) {\n        this.id = i;\n        this.source = src;\n        this.line = ln;\n        this.column = col;\n        this.name = nm;\n    }\n}\nexports.StackFrame = StackFrame;\nclass Thread {\n    constructor(id, name) {\n        this.id = id;\n        if (name) {\n            this.name = name;\n        }\n        else {\n            this.name = 'Thread #' + id;\n        }\n    }\n}\nexports.Thread = Thread;\nclass Variable {\n    constructor(name, value, ref = 0, indexedVariables, namedVariables) {\n        this.name = name;\n        this.value = value;\n        this.variablesReference = ref;\n        if (typeof namedVariables === 'number') {\n            this.namedVariables = namedVariables;\n        }\n        if (typeof indexedVariables === 'number') {\n            this.indexedVariables = indexedVariables;\n        }\n    }\n}\nexports.Variable = Variable;\nclass Breakpoint {\n    constructor(verified, line, column, source) {\n        this.verified = verified;\n        const e = this;\n        if (typeof line === 'number') {\n            e.line = line;\n        }\n        if (typeof column === 'number') {\n            e.column = column;\n        }\n        if (source) {\n            e.source = source;\n        }\n    }\n}\nexports.Breakpoint = Breakpoint;\nclass Module {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.Module = Module;\nclass CompletionItem {\n    constructor(label, start, length = 0) {\n        this.label = label;\n        this.start = start;\n        this.length = length;\n    }\n}\nexports.CompletionItem = CompletionItem;\nclass StoppedEvent extends messages_1.Event {\n    constructor(reason, threadId, exceptionText) {\n        super('stopped');\n        this.body = {\n            reason: reason\n        };\n        if (typeof threadId === 'number') {\n            this.body.threadId = threadId;\n        }\n        if (typeof exceptionText === 'string') {\n            this.body.text = exceptionText;\n        }\n    }\n}\nexports.StoppedEvent = StoppedEvent;\nclass ContinuedEvent extends messages_1.Event {\n    constructor(threadId, allThreadsContinued) {\n        super('continued');\n        this.body = {\n            threadId: threadId\n        };\n        if (typeof allThreadsContinued === 'boolean') {\n            this.body.allThreadsContinued = allThreadsContinued;\n        }\n    }\n}\nexports.ContinuedEvent = ContinuedEvent;\nclass InitializedEvent extends messages_1.Event {\n    constructor() {\n        super('initialized');\n    }\n}\nexports.InitializedEvent = InitializedEvent;\nclass TerminatedEvent extends messages_1.Event {\n    constructor(restart) {\n        super('terminated');\n        if (typeof restart === 'boolean' || restart) {\n            const e = this;\n            e.body = {\n                restart: restart\n            };\n        }\n    }\n}\nexports.TerminatedEvent = TerminatedEvent;\nclass OutputEvent extends messages_1.Event {\n    constructor(output, category = 'console', data) {\n        super('output');\n        this.body = {\n            category: category,\n            output: output\n        };\n        if (data !== undefined) {\n            this.body.data = data;\n        }\n    }\n}\nexports.OutputEvent = OutputEvent;\nclass ThreadEvent extends messages_1.Event {\n    constructor(reason, threadId) {\n        super('thread');\n        this.body = {\n            reason: reason,\n            threadId: threadId\n        };\n    }\n}\nexports.ThreadEvent = ThreadEvent;\nclass BreakpointEvent extends messages_1.Event {\n    constructor(reason, breakpoint) {\n        super('breakpoint');\n        this.body = {\n            reason: reason,\n            breakpoint: breakpoint\n        };\n    }\n}\nexports.BreakpointEvent = BreakpointEvent;\nclass ModuleEvent extends messages_1.Event {\n    constructor(reason, module) {\n        super('module');\n        this.body = {\n            reason: reason,\n            module: module\n        };\n    }\n}\nexports.ModuleEvent = ModuleEvent;\nclass LoadedSourceEvent extends messages_1.Event {\n    constructor(reason, source) {\n        super('loadedSource');\n        this.body = {\n            reason: reason,\n            source: source\n        };\n    }\n}\nexports.LoadedSourceEvent = LoadedSourceEvent;\nclass CapabilitiesEvent extends messages_1.Event {\n    constructor(capabilities) {\n        super('capabilities');\n        this.body = {\n            capabilities: capabilities\n        };\n    }\n}\nexports.CapabilitiesEvent = CapabilitiesEvent;\nvar ErrorDestination;\n(function (ErrorDestination) {\n    ErrorDestination[ErrorDestination[\"User\"] = 1] = \"User\";\n    ErrorDestination[ErrorDestination[\"Telemetry\"] = 2] = \"Telemetry\";\n})(ErrorDestination = exports.ErrorDestination || (exports.ErrorDestination = {}));\n;\nclass DebugSession extends protocol_1.ProtocolServer {\n    constructor(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super();\n        const linesAndColumnsStartAt1 = typeof obsolete_debuggerLinesAndColumnsStartAt1 === 'boolean' ? obsolete_debuggerLinesAndColumnsStartAt1 : false;\n        this._debuggerLinesStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerColumnsStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerPathsAreURIs = false;\n        this._clientLinesStartAt1 = true;\n        this._clientColumnsStartAt1 = true;\n        this._clientPathsAreURIs = false;\n        this._isServer = typeof obsolete_isServer === 'boolean' ? obsolete_isServer : false;\n        this.on('close', () => {\n            this.shutdown();\n        });\n        this.on('error', (error) => {\n            this.shutdown();\n        });\n    }\n    setDebuggerPathFormat(format) {\n        this._debuggerPathsAreURIs = format !== 'path';\n    }\n    setDebuggerLinesStartAt1(enable) {\n        this._debuggerLinesStartAt1 = enable;\n    }\n    setDebuggerColumnsStartAt1(enable) {\n        this._debuggerColumnsStartAt1 = enable;\n    }\n    setRunAsServer(enable) {\n        this._isServer = enable;\n    }\n    /**\n     * A virtual constructor...\n     */\n    static run(debugSession) {\n        // parse arguments\n        let port = 0;\n        const args = process.argv.slice(2);\n        args.forEach(function (val, index, array) {\n            const portMatch = /^--server=(\\d{4,5})$/.exec(val);\n            if (portMatch) {\n                port = parseInt(portMatch[1], 10);\n            }\n        });\n        if (port > 0) {\n            // start as a server\n            console.error(`waiting for debug protocol on port ${port}`);\n            Net.createServer((socket) => {\n                console.error('>> accepted connection from client');\n                socket.on('end', () => {\n                    console.error('>> client connection closed\\n');\n                });\n                const session = new debugSession(false, true);\n                session.setRunAsServer(true);\n                session.start(socket, socket);\n            }).listen(port);\n        }\n        else {\n            // start a session\n            //console.error('waiting for debug protocol on stdin/stdout');\n            const session = new debugSession(false);\n            process.on('SIGTERM', () => {\n                session.shutdown();\n            });\n            session.start(process.stdin, process.stdout);\n        }\n    }\n    shutdown() {\n        if (this._isServer) {\n            // shutdown ignored in server mode\n        }\n        else {\n            // wait a bit before shutting down\n            setTimeout(() => {\n                process.exit(0);\n            }, 100);\n        }\n    }\n    sendErrorResponse(response, codeOrMessage, format, variables, dest = ErrorDestination.User) {\n        let msg;\n        if (typeof codeOrMessage === 'number') {\n            msg = {\n                id: codeOrMessage,\n                format: format\n            };\n            if (variables) {\n                msg.variables = variables;\n            }\n            if (dest & ErrorDestination.User) {\n                msg.showUser = true;\n            }\n            if (dest & ErrorDestination.Telemetry) {\n                msg.sendTelemetry = true;\n            }\n        }\n        else {\n            msg = codeOrMessage;\n        }\n        response.success = false;\n        response.message = DebugSession.formatPII(msg.format, true, msg.variables);\n        if (!response.body) {\n            response.body = {};\n        }\n        response.body.error = msg;\n        this.sendResponse(response);\n    }\n    runInTerminalRequest(args, timeout, cb) {\n        this.sendRequest('runInTerminal', args, timeout, cb);\n    }\n    dispatchRequest(request) {\n        const response = new messages_1.Response(request);\n        try {\n            if (request.command === 'initialize') {\n                var args = request.arguments;\n                if (typeof args.linesStartAt1 === 'boolean') {\n                    this._clientLinesStartAt1 = args.linesStartAt1;\n                }\n                if (typeof args.columnsStartAt1 === 'boolean') {\n                    this._clientColumnsStartAt1 = args.columnsStartAt1;\n                }\n                if (args.pathFormat !== 'path') {\n                    this.sendErrorResponse(response, 2018, 'debug adapter only supports native paths', null, ErrorDestination.Telemetry);\n                }\n                else {\n                    const initializeResponse = response;\n                    initializeResponse.body = {};\n                    this.initializeRequest(initializeResponse, args);\n                }\n            }\n            else if (request.command === 'launch') {\n                this.launchRequest(response, request.arguments);\n            }\n            else if (request.command === 'attach') {\n                this.attachRequest(response, request.arguments);\n            }\n            else if (request.command === 'disconnect') {\n                this.disconnectRequest(response, request.arguments);\n            }\n            else if (request.command === 'terminate') {\n                this.terminateRequest(response, request.arguments);\n            }\n            else if (request.command === 'restart') {\n                this.restartRequest(response, request.arguments);\n            }\n            else if (request.command === 'setBreakpoints') {\n                this.setBreakPointsRequest(response, request.arguments);\n            }\n            else if (request.command === 'setFunctionBreakpoints') {\n                this.setFunctionBreakPointsRequest(response, request.arguments);\n            }\n            else if (request.command === 'setExceptionBreakpoints') {\n                this.setExceptionBreakPointsRequest(response, request.arguments);\n            }\n            else if (request.command === 'configurationDone') {\n                this.configurationDoneRequest(response, request.arguments);\n            }\n            else if (request.command === 'continue') {\n                this.continueRequest(response, request.arguments);\n            }\n            else if (request.command === 'next') {\n                this.nextRequest(response, request.arguments);\n            }\n            else if (request.command === 'stepIn') {\n                this.stepInRequest(response, request.arguments);\n            }\n            else if (request.command === 'stepOut') {\n                this.stepOutRequest(response, request.arguments);\n            }\n            else if (request.command === 'stepBack') {\n                this.stepBackRequest(response, request.arguments);\n            }\n            else if (request.command === 'reverseContinue') {\n                this.reverseContinueRequest(response, request.arguments);\n            }\n            else if (request.command === 'restartFrame') {\n                this.restartFrameRequest(response, request.arguments);\n            }\n            else if (request.command === 'goto') {\n                this.gotoRequest(response, request.arguments);\n            }\n            else if (request.command === 'pause') {\n                this.pauseRequest(response, request.arguments);\n            }\n            else if (request.command === 'stackTrace') {\n                this.stackTraceRequest(response, request.arguments);\n            }\n            else if (request.command === 'scopes') {\n                this.scopesRequest(response, request.arguments);\n            }\n            else if (request.command === 'variables') {\n                this.variablesRequest(response, request.arguments);\n            }\n            else if (request.command === 'setVariable') {\n                this.setVariableRequest(response, request.arguments);\n            }\n            else if (request.command === 'setExpression') {\n                this.setExpressionRequest(response, request.arguments);\n            }\n            else if (request.command === 'source') {\n                this.sourceRequest(response, request.arguments);\n            }\n            else if (request.command === 'threads') {\n                this.threadsRequest(response);\n            }\n            else if (request.command === 'terminateThreads') {\n                this.terminateThreadsRequest(response, request.arguments);\n            }\n            else if (request.command === 'evaluate') {\n                this.evaluateRequest(response, request.arguments);\n            }\n            else if (request.command === 'stepInTargets') {\n                this.stepInTargetsRequest(response, request.arguments);\n            }\n            else if (request.command === 'gotoTargets') {\n                this.gotoTargetsRequest(response, request.arguments);\n            }\n            else if (request.command === 'completions') {\n                this.completionsRequest(response, request.arguments);\n            }\n            else if (request.command === 'exceptionInfo') {\n                this.exceptionInfoRequest(response, request.arguments);\n            }\n            else if (request.command === 'loadedSources') {\n                this.loadedSourcesRequest(response, request.arguments);\n            }\n            else if (request.command === 'dataBreakpointInfo') {\n                this.dataBreakpointInfoRequest(response, request.arguments);\n            }\n            else if (request.command === 'setDataBreakpoints') {\n                this.setDataBreakpointsRequest(response, request.arguments);\n            }\n            else if (request.command === 'readMemory') {\n                this.readMemoryRequest(response, request.arguments);\n            }\n            else if (request.command === 'disassemble') {\n                this.disassembleRequest(response, request.arguments);\n            }\n            else {\n                this.customRequest(request.command, response, request.arguments);\n            }\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1104, '{_stack}', { _exception: e.message, _stack: e.stack }, ErrorDestination.Telemetry);\n        }\n    }\n    initializeRequest(response, args) {\n        // This default debug adapter does not support conditional breakpoints.\n        response.body.supportsConditionalBreakpoints = false;\n        // This default debug adapter does not support hit conditional breakpoints.\n        response.body.supportsHitConditionalBreakpoints = false;\n        // This default debug adapter does not support function breakpoints.\n        response.body.supportsFunctionBreakpoints = false;\n        // This default debug adapter implements the 'configurationDone' request.\n        response.body.supportsConfigurationDoneRequest = true;\n        // This default debug adapter does not support hovers based on the 'evaluate' request.\n        response.body.supportsEvaluateForHovers = false;\n        // This default debug adapter does not support the 'stepBack' request.\n        response.body.supportsStepBack = false;\n        // This default debug adapter does not support the 'setVariable' request.\n        response.body.supportsSetVariable = false;\n        // This default debug adapter does not support the 'restartFrame' request.\n        response.body.supportsRestartFrame = false;\n        // This default debug adapter does not support the 'stepInTargets' request.\n        response.body.supportsStepInTargetsRequest = false;\n        // This default debug adapter does not support the 'gotoTargets' request.\n        response.body.supportsGotoTargetsRequest = false;\n        // This default debug adapter does not support the 'completions' request.\n        response.body.supportsCompletionsRequest = false;\n        // This default debug adapter does not support the 'restart' request.\n        response.body.supportsRestartRequest = false;\n        // This default debug adapter does not support the 'exceptionOptions' attribute on the 'setExceptionBreakpoints' request.\n        response.body.supportsExceptionOptions = false;\n        // This default debug adapter does not support the 'format' attribute on the 'variables', 'evaluate', and 'stackTrace' request.\n        response.body.supportsValueFormattingOptions = false;\n        // This debug adapter does not support the 'exceptionInfo' request.\n        response.body.supportsExceptionInfoRequest = false;\n        // This debug adapter does not support the 'TerminateDebuggee' attribute on the 'disconnect' request.\n        response.body.supportTerminateDebuggee = false;\n        // This debug adapter does not support delayed loading of stack frames.\n        response.body.supportsDelayedStackTraceLoading = false;\n        // This debug adapter does not support the 'loadedSources' request.\n        response.body.supportsLoadedSourcesRequest = false;\n        // This debug adapter does not support the 'logMessage' attribute of the SourceBreakpoint.\n        response.body.supportsLogPoints = false;\n        // This debug adapter does not support the 'terminateThreads' request.\n        response.body.supportsTerminateThreadsRequest = false;\n        // This debug adapter does not support the 'setExpression' request.\n        response.body.supportsSetExpression = false;\n        // This debug adapter does not support the 'terminate' request.\n        response.body.supportsTerminateRequest = false;\n        // This debug adapter does not support data breakpoints.\n        response.body.supportsDataBreakpoints = false;\n        /** This debug adapter does not support the 'readMemory' request. */\n        response.body.supportsReadMemoryRequest = false;\n        /** The debug adapter does not support the 'disassemble' request. */\n        response.body.supportsDisassembleRequest = false;\n        this.sendResponse(response);\n    }\n    disconnectRequest(response, args) {\n        this.sendResponse(response);\n        this.shutdown();\n    }\n    launchRequest(response, args) {\n        this.sendResponse(response);\n    }\n    attachRequest(response, args) {\n        this.sendResponse(response);\n    }\n    terminateRequest(response, args) {\n        this.sendResponse(response);\n    }\n    restartRequest(response, args) {\n        this.sendResponse(response);\n    }\n    setBreakPointsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    setFunctionBreakPointsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    setExceptionBreakPointsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    configurationDoneRequest(response, args) {\n        this.sendResponse(response);\n    }\n    continueRequest(response, args) {\n        this.sendResponse(response);\n    }\n    nextRequest(response, args) {\n        this.sendResponse(response);\n    }\n    stepInRequest(response, args) {\n        this.sendResponse(response);\n    }\n    stepOutRequest(response, args) {\n        this.sendResponse(response);\n    }\n    stepBackRequest(response, args) {\n        this.sendResponse(response);\n    }\n    reverseContinueRequest(response, args) {\n        this.sendResponse(response);\n    }\n    restartFrameRequest(response, args) {\n        this.sendResponse(response);\n    }\n    gotoRequest(response, args) {\n        this.sendResponse(response);\n    }\n    pauseRequest(response, args) {\n        this.sendResponse(response);\n    }\n    sourceRequest(response, args) {\n        this.sendResponse(response);\n    }\n    threadsRequest(response) {\n        this.sendResponse(response);\n    }\n    terminateThreadsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    stackTraceRequest(response, args) {\n        this.sendResponse(response);\n    }\n    scopesRequest(response, args) {\n        this.sendResponse(response);\n    }\n    variablesRequest(response, args) {\n        this.sendResponse(response);\n    }\n    setVariableRequest(response, args) {\n        this.sendResponse(response);\n    }\n    setExpressionRequest(response, args) {\n        this.sendResponse(response);\n    }\n    evaluateRequest(response, args) {\n        this.sendResponse(response);\n    }\n    stepInTargetsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    gotoTargetsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    completionsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    exceptionInfoRequest(response, args) {\n        this.sendResponse(response);\n    }\n    loadedSourcesRequest(response, args) {\n        this.sendResponse(response);\n    }\n    dataBreakpointInfoRequest(response, args) {\n        this.sendResponse(response);\n    }\n    setDataBreakpointsRequest(response, args) {\n        this.sendResponse(response);\n    }\n    readMemoryRequest(response, args) {\n        this.sendResponse(response);\n    }\n    disassembleRequest(response, args) {\n        this.sendResponse(response);\n    }\n    /**\n     * Override this hook to implement custom requests.\n     */\n    customRequest(command, response, args) {\n        this.sendErrorResponse(response, 1014, 'unrecognized request', null, ErrorDestination.Telemetry);\n    }\n    //---- protected -------------------------------------------------------------------------------------------------\n    convertClientLineToDebugger(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line + 1;\n        }\n        return this._clientLinesStartAt1 ? line - 1 : line;\n    }\n    convertDebuggerLineToClient(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line - 1;\n        }\n        return this._clientLinesStartAt1 ? line + 1 : line;\n    }\n    convertClientColumnToDebugger(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column + 1;\n        }\n        return this._clientColumnsStartAt1 ? column - 1 : column;\n    }\n    convertDebuggerColumnToClient(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column - 1;\n        }\n        return this._clientColumnsStartAt1 ? column + 1 : column;\n    }\n    convertClientPathToDebugger(clientPath) {\n        if (this._clientPathsAreURIs !== this._debuggerPathsAreURIs) {\n            if (this._clientPathsAreURIs) {\n                return DebugSession.uri2path(clientPath);\n            }\n            else {\n                return DebugSession.path2uri(clientPath);\n            }\n        }\n        return clientPath;\n    }\n    convertDebuggerPathToClient(debuggerPath) {\n        if (this._debuggerPathsAreURIs !== this._clientPathsAreURIs) {\n            if (this._debuggerPathsAreURIs) {\n                return DebugSession.uri2path(debuggerPath);\n            }\n            else {\n                return DebugSession.path2uri(debuggerPath);\n            }\n        }\n        return debuggerPath;\n    }\n    //---- private -------------------------------------------------------------------------------\n    static path2uri(path) {\n        if (process.platform === 'win32') {\n            if (/^[A-Z]:/.test(path)) {\n                path = path[0].toLowerCase() + path.substr(1);\n            }\n            path = path.replace(/\\\\/g, '/');\n        }\n        path = encodeURI(path);\n        let uri = new url_1.URL(`file:`); // ignore 'path' for now\n        uri.pathname = path; // now use 'path' to get the correct percent encoding (see https://url.spec.whatwg.org)\n        return uri.toString();\n    }\n    static uri2path(sourceUri) {\n        let uri = new url_1.URL(sourceUri);\n        let s = decodeURIComponent(uri.pathname);\n        if (process.platform === 'win32') {\n            if (/^\\/[a-zA-Z]:/.test(s)) {\n                s = s[1].toLowerCase() + s.substr(2);\n            }\n            s = s.replace(/\\//g, '\\\\');\n        }\n        return s;\n    }\n    /*\n    * If argument starts with '_' it is OK to send its value to telemetry.\n    */\n    static formatPII(format, excludePII, args) {\n        return format.replace(DebugSession._formatPIIRegexp, function (match, paramName) {\n            if (excludePII && paramName.length > 0 && paramName[0] !== '_') {\n                return match;\n            }\n            return args[paramName] && args.hasOwnProperty(paramName) ?\n                args[paramName] :\n                match;\n        });\n    }\n}\nDebugSession._formatPIIRegexp = /{([^}]+)}/g;\nexports.DebugSession = DebugSession;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Handles {\n    constructor(startHandle) {\n        this.START_HANDLE = 1000;\n        this._handleMap = new Map();\n        this._nextHandle = typeof startHandle === 'number' ? startHandle : this.START_HANDLE;\n    }\n    reset() {\n        this._nextHandle = this.START_HANDLE;\n        this._handleMap = new Map();\n    }\n    create(value) {\n        var handle = this._nextHandle++;\n        this._handleMap.set(handle, value);\n        return handle;\n    }\n    get(handle, dflt) {\n        return this._handleMap.get(handle) || dflt;\n    }\n}\nexports.Handles = Handles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7QUFFaEcsTUFBYSxPQUFPO0lBT25CLFlBQW1CLFdBQW9CO1FBTC9CLGlCQUFZLEdBQUcsSUFBSSxDQUFDO1FBR3BCLGVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBYSxDQUFDO1FBR3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxXQUFXLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDdEYsQ0FBQztJQUVNLEtBQUs7UUFDWCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDckMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBYSxDQUFDO0lBQ3hDLENBQUM7SUFFTSxNQUFNLENBQUMsS0FBUTtRQUNyQixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ25DLE9BQU8sTUFBTSxDQUFDO0lBQ2YsQ0FBQztJQUVNLEdBQUcsQ0FBQyxNQUFjLEVBQUUsSUFBUTtRQUNsQyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQztJQUM1QyxDQUFDO0NBQ0Q7QUF6QkQsMEJBeUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmV4cG9ydCBjbGFzcyBIYW5kbGVzPFQ+IHtcblxuXHRwcml2YXRlIFNUQVJUX0hBTkRMRSA9IDEwMDA7XG5cblx0cHJpdmF0ZSBfbmV4dEhhbmRsZSA6IG51bWJlcjtcblx0cHJpdmF0ZSBfaGFuZGxlTWFwID0gbmV3IE1hcDxudW1iZXIsIFQ+KCk7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHN0YXJ0SGFuZGxlPzogbnVtYmVyKSB7XG5cdFx0dGhpcy5fbmV4dEhhbmRsZSA9IHR5cGVvZiBzdGFydEhhbmRsZSA9PT0gJ251bWJlcicgPyBzdGFydEhhbmRsZSA6IHRoaXMuU1RBUlRfSEFORExFO1xuXHR9XG5cblx0cHVibGljIHJlc2V0KCk6IHZvaWQge1xuXHRcdHRoaXMuX25leHRIYW5kbGUgPSB0aGlzLlNUQVJUX0hBTkRMRTtcblx0XHR0aGlzLl9oYW5kbGVNYXAgPSBuZXcgTWFwPG51bWJlciwgVD4oKTtcblx0fVxuXG5cdHB1YmxpYyBjcmVhdGUodmFsdWU6IFQpOiBudW1iZXIge1xuXHRcdHZhciBoYW5kbGUgPSB0aGlzLl9uZXh0SGFuZGxlKys7XG5cdFx0dGhpcy5faGFuZGxlTWFwLnNldChoYW5kbGUsIHZhbHVlKTtcblx0XHRyZXR1cm4gaGFuZGxlO1xuXHR9XG5cblx0cHVibGljIGdldChoYW5kbGU6IG51bWJlciwgZGZsdD86IFQpOiBUIHtcblx0XHRyZXR1cm4gdGhpcy5faGFuZGxlTWFwLmdldChoYW5kbGUpIHx8IGRmbHQ7XG5cdH1cbn1cbiJdfQ==","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst debugSession_1 = require(\"./debugSession\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Stop\"] = 4] = \"Stop\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nclass Logger {\n    constructor() {\n        this._pendingLogQ = [];\n    }\n    log(msg, level = LogLevel.Log) {\n        msg = msg + '\\n';\n        this._write(msg, level);\n    }\n    verbose(msg) {\n        this.log(msg, LogLevel.Verbose);\n    }\n    warn(msg) {\n        this.log(msg, LogLevel.Warn);\n    }\n    error(msg) {\n        this.log(msg, LogLevel.Error);\n    }\n    dispose() {\n        if (this._currentLogger) {\n            const disposeP = this._currentLogger.dispose();\n            this._currentLogger = null;\n            return disposeP;\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * `log` adds a newline, `write` doesn't\n     */\n    _write(msg, level = LogLevel.Log) {\n        // [null, undefined] => string\n        msg = msg + '';\n        if (this._pendingLogQ) {\n            this._pendingLogQ.push({ msg, level });\n        }\n        else if (this._currentLogger) {\n            this._currentLogger.log(msg, level);\n        }\n    }\n    /**\n     * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is\n     * called the first time, because minLogLevel defaults to Warn.\n     */\n    setup(consoleMinLogLevel, _logFilePath, prependTimestamp = true) {\n        const logFilePath = typeof _logFilePath === 'string' ?\n            _logFilePath :\n            (_logFilePath && this._logFilePathFromInit);\n        if (this._currentLogger) {\n            const options = {\n                consoleMinLogLevel,\n                logFilePath,\n                prependTimestamp\n            };\n            this._currentLogger.setup(options).then(() => {\n                // Now that we have a minimum logLevel, we can clear out the queue of pending messages\n                if (this._pendingLogQ) {\n                    const logQ = this._pendingLogQ;\n                    this._pendingLogQ = null;\n                    logQ.forEach(item => this._write(item.msg, item.level));\n                }\n            });\n        }\n    }\n    init(logCallback, logFilePath, logToConsole) {\n        // Re-init, create new global Logger\n        this._pendingLogQ = this._pendingLogQ || [];\n        this._currentLogger = new InternalLogger(logCallback, logToConsole);\n        this._logFilePathFromInit = logFilePath;\n    }\n}\nexports.Logger = Logger;\nexports.logger = new Logger();\n/**\n * Manages logging, whether to console.log, file, or VS Code console.\n * Encapsulates the state specific to each logging session\n */\nclass InternalLogger {\n    constructor(logCallback, isServer) {\n        /** Dispose and allow exit to continue normally */\n        this.beforeExitCallback = () => this.dispose();\n        this._logCallback = logCallback;\n        this._logToConsole = isServer;\n        this._minLogLevel = LogLevel.Warn;\n        this.disposeCallback = (signal, code) => {\n            this.dispose();\n            // Exit with 128 + value of the signal code.\n            // https://nodejs.org/api/process.html#process_exit_codes\n            code = code || 2; // SIGINT\n            code += 128;\n            process.exit(code);\n        };\n    }\n    setup(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._minLogLevel = options.consoleMinLogLevel;\n            this._prependTimestamp = options.prependTimestamp;\n            // Open a log file in the specified location. Overwritten on each run.\n            if (options.logFilePath) {\n                if (!path.isAbsolute(options.logFilePath)) {\n                    this.log(`logFilePath must be an absolute path: ${options.logFilePath}`, LogLevel.Error);\n                }\n                else {\n                    const handleError = err => this.sendLog(`Error creating log file at path: ${options.logFilePath}. Error: ${err.toString()}\\n`, LogLevel.Error);\n                    try {\n                        yield mkdirpPromise(path.dirname(options.logFilePath));\n                        this.log(`Verbose logs are written to:\\n`, LogLevel.Warn);\n                        this.log(options.logFilePath + '\\n', LogLevel.Warn);\n                        this._logFileStream = fs.createWriteStream(options.logFilePath);\n                        this.logDateTime();\n                        this.setupShutdownListeners();\n                        this._logFileStream.on('error', err => {\n                            handleError(err);\n                        });\n                    }\n                    catch (err) {\n                        handleError(err);\n                    }\n                }\n            }\n        });\n    }\n    logDateTime() {\n        let d = new Date();\n        let dateString = d.getUTCFullYear() + '-' + `${d.getUTCMonth() + 1}` + '-' + d.getUTCDate();\n        const timeAndDateStamp = dateString + ', ' + getFormattedTimeString();\n        this.log(timeAndDateStamp + '\\n', LogLevel.Verbose, false);\n    }\n    setupShutdownListeners() {\n        process.addListener('beforeExit', this.beforeExitCallback);\n        process.addListener('SIGTERM', this.disposeCallback);\n        process.addListener('SIGINT', this.disposeCallback);\n    }\n    removeShutdownListeners() {\n        process.removeListener('beforeExit', this.beforeExitCallback);\n        process.removeListener('SIGTERM', this.disposeCallback);\n        process.removeListener('SIGINT', this.disposeCallback);\n    }\n    dispose() {\n        return new Promise(resolve => {\n            this.removeShutdownListeners();\n            if (this._logFileStream) {\n                this._logFileStream.end(resolve);\n                this._logFileStream = null;\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    log(msg, level, prependTimestamp = true) {\n        if (this._minLogLevel === LogLevel.Stop) {\n            return;\n        }\n        if (level >= this._minLogLevel) {\n            this.sendLog(msg, level);\n        }\n        if (this._logToConsole) {\n            const logFn = level === LogLevel.Error ? console.error :\n                level === LogLevel.Warn ? console.warn :\n                    null;\n            if (logFn) {\n                logFn(trimLastNewline(msg));\n            }\n        }\n        // If an error, prepend with '[Error]'\n        if (level === LogLevel.Error) {\n            msg = `[${LogLevel[level]}] ${msg}`;\n        }\n        if (this._prependTimestamp && prependTimestamp) {\n            msg = '[' + getFormattedTimeString() + '] ' + msg;\n        }\n        if (this._logFileStream) {\n            this._logFileStream.write(msg);\n        }\n    }\n    sendLog(msg, level) {\n        // Truncate long messages, they can hang VS Code\n        if (msg.length > 1500) {\n            const endsInNewline = !!msg.match(/(\\n|\\r\\n)$/);\n            msg = msg.substr(0, 1500) + '[...]';\n            if (endsInNewline) {\n                msg = msg + '\\n';\n            }\n        }\n        if (this._logCallback) {\n            const event = new LogOutputEvent(msg, level);\n            this._logCallback(event);\n        }\n    }\n}\nfunction mkdirpPromise(folder) {\n    return new Promise((resolve, reject) => {\n        mkdirp(folder, err => {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve();\n            }\n        });\n    });\n}\nclass LogOutputEvent extends debugSession_1.OutputEvent {\n    constructor(msg, level) {\n        const category = level === LogLevel.Error ? 'stderr' :\n            level === LogLevel.Warn ? 'console' :\n                'stdout';\n        super(msg, category);\n    }\n}\nexports.LogOutputEvent = LogOutputEvent;\nfunction trimLastNewline(str) {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\nexports.trimLastNewline = trimLastNewline;\nfunction getFormattedTimeString() {\n    let d = new Date();\n    let hourString = _padZeroes(2, String(d.getUTCHours()));\n    let minuteString = _padZeroes(2, String(d.getUTCMinutes()));\n    let secondString = _padZeroes(2, String(d.getUTCSeconds()));\n    let millisecondString = _padZeroes(3, String(d.getUTCMilliseconds()));\n    return hourString + ':' + minuteString + ':' + secondString + '.' + millisecondString + ' UTC';\n}\nfunction _padZeroes(minDesiredLength, numberToPad) {\n    if (numberToPad.length >= minDesiredLength) {\n        return numberToPad;\n    }\n    else {\n        return String('0'.repeat(minDesiredLength) + numberToPad).slice(-minDesiredLength);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OzREQUU0RDs7Ozs7Ozs7OztBQUU1RCx5QkFBeUI7QUFDekIsNkJBQTZCO0FBQzdCLGlDQUFpQztBQUNqQyxpREFBMkM7QUFFM0MsSUFBWSxRQU1YO0FBTkQsV0FBWSxRQUFRO0lBQ25CLDZDQUFXLENBQUE7SUFDWCxxQ0FBTyxDQUFBO0lBQ1AsdUNBQVEsQ0FBQTtJQUNSLHlDQUFTLENBQUE7SUFDVCx1Q0FBUSxDQUFBO0FBQ1QsQ0FBQyxFQU5XLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBTW5CO0FBZ0JELE1BQWEsTUFBTTtJQUFuQjtRQUlTLGlCQUFZLEdBQWUsRUFBRSxDQUFDO0lBMkV2QyxDQUFDO0lBekVBLEdBQUcsQ0FBQyxHQUFXLEVBQUUsS0FBSyxHQUFHLFFBQVEsQ0FBQyxHQUFHO1FBQ3BDLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxPQUFPLENBQUMsR0FBVztRQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFXO1FBQ2YsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCxLQUFLLENBQUMsR0FBVztRQUNoQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELE9BQU87UUFDTixJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDeEIsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FB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QUcsR0FBRyxHQUFHLFlBQVksR0FBRyxHQUFHLEdBQUcsaUJBQWlCLEdBQUcsTUFBTSxDQUFDO0FBQ2hHLENBQUM7QUFFRCxTQUFTLFVBQVUsQ0FBQyxnQkFBd0IsRUFBRSxXQUFtQjtJQUNoRSxJQUFJLFdBQVcsQ0FBQyxNQUFNLElBQUksZ0JBQWdCLEVBQUU7UUFDM0MsT0FBTyxXQUFXLENBQUM7S0FDbkI7U0FBTTtRQUNOLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0tBQ25GO0FBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBDb3B5cmlnaHQgKEMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0ICogYXMgbWtkaXJwIGZyb20gJ21rZGlycCc7XG5pbXBvcnQge091dHB1dEV2ZW50fSBmcm9tICcuL2RlYnVnU2Vzc2lvbic7XG5cbmV4cG9ydCBlbnVtIExvZ0xldmVsIHtcblx0VmVyYm9zZSA9IDAsXG5cdExvZyA9IDEsXG5cdFdhcm4gPSAyLFxuXHRFcnJvciA9IDMsXG5cdFN0b3AgPSA0XG59XG5cbmV4cG9ydCB0eXBlIElMb2dDYWxsYmFjayA9IChvdXRwdXRFdmVudDogT3V0cHV0RXZlbnQpID0+IHZvaWQ7XG5cbmludGVyZmFjZSBJTG9nSXRlbSB7XG5cdG1zZzogc3RyaW5nO1xuXHRsZXZlbDogTG9nTGV2ZWw7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUxvZ2dlciB7XG5cdGxvZyhtc2c6IHN0cmluZywgbGV2ZWw/OiBMb2dMZXZlbCk6IHZvaWQ7XG5cdHZlcmJvc2UobXNnOiBzdHJpbmcpOiB2b2lkO1xuXHR3YXJuKG1zZzogc3RyaW5nKTogdm9pZDtcblx0ZXJyb3IobXNnOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgTG9nZ2VyIHtcblx0cHJpdmF0ZSBfbG9nRmlsZVBhdGhGcm9tSW5pdDogc3RyaW5nO1xuXG5cdHByaXZhdGUgX2N1cnJlbnRMb2dnZXI6IEludGVybmFsTG9nZ2VyO1xuXHRwcml2YXRlIF9wZW5kaW5nTG9nUTogSUxvZ0l0ZW1bXSA9IFtdO1xuXG5cdGxvZyhtc2c6IHN0cmluZywgbGV2ZWwgPSBMb2dMZXZlbC5Mb2cpOiB2b2lkIHtcblx0XHRtc2cgPSBtc2cgKyAnXFxuJztcblx0XHR0aGlzLl93cml0ZShtc2csIGxldmVsKTtcblx0fVxuXG5cdHZlcmJvc2UobXNnOiBzdHJpbmcpOiB2b2lkIHtcblx0XHR0aGlzLmxvZyhtc2csIExvZ0xldmVsLlZlcmJvc2UpO1xuXHR9XG5cblx0d2Fybihtc2c6IHN0cmluZyk6IHZvaWQge1xuXHRcdHRoaXMubG9nKG1zZywgTG9nTGV2ZWwuV2Fybik7XG5cdH1cblxuXHRlcnJvcihtc2c6IHN0cmluZyk6IHZvaWQge1xuXHRcdHRoaXMubG9nKG1zZywgTG9nTGV2ZWwuRXJyb3IpO1xuXHR9XG5cblx0ZGlzcG9zZSgpOiBQcm9taXNlPHZvaWQ+IHtcblx0XHRpZiAodGhpcy5fY3VycmVudExvZ2dlcikge1xuXHRcdFx0Y29uc3QgZGlzcG9zZVAgPSB0aGlzLl9jdXJyZW50TG9nZ2VyLmRpc3Bvc2UoKTtcblx0XHRcdHRoaXMuX2N1cnJlbnRMb2dnZXIgPSBudWxsO1xuXHRcdFx0cmV0dXJuIGRpc3Bvc2VQO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIGBsb2dgIGFkZHMgYSBuZXdsaW5lLCBgd3JpdGVgIGRvZXNuJ3Rcblx0ICovXG5cdHByaXZhdGUgX3dyaXRlKG1zZzogc3RyaW5nLCBsZXZlbCA9IExvZ0xldmVsLkxvZyk6IHZvaWQge1xuXHRcdC8vIFtudWxsLCB1bmRlZmluZWRdID0+IHN0cmluZ1xuXHRcdG1zZyA9IG1zZyArICcnO1xuXHRcdGlmICh0aGlzLl9wZW5kaW5nTG9nUSkge1xuXHRcdFx0dGhpcy5fcGVuZGluZ0xvZ1EucHVzaCh7IG1zZywgbGV2ZWwgfSk7XG5cdFx0fSBlbHNlIGlmICh0aGlzLl9jdXJyZW50TG9nZ2VyKSB7XG5cdFx0XHR0aGlzLl9jdXJyZW50TG9nZ2VyLmxvZyhtc2csIGxldmVsKTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogU2V0IHRoZSBsb2dnZXIncyBtaW5pbXVtIGxldmVsIHRvIGxvZyBpbiB0aGUgY29uc29sZSwgYW5kIHdoZXRoZXIgdG8gbG9nIHRvIHRoZSBmaWxlLiBMb2cgbWVzc2FnZXMgYXJlIHF1ZXVlZCBiZWZvcmUgdGhpcyBpc1xuXHQgKiBjYWxsZWQgdGhlIGZpcnN0IHRpbWUsIGJlY2F1c2UgbWluTG9nTGV2ZWwgZGVmYXVsdHMgdG8gV2Fybi5cblx0ICovXG5cdHNldHVwKGNvbnNvbGVNaW5Mb2dMZXZlbDogTG9nTGV2ZWwsIF9sb2dGaWxlUGF0aD86IHN0cmluZ3xib29sZWFuLCBwcmVwZW5kVGltZXN0YW1wOiBib29sZWFuID0gdHJ1ZSk6IHZvaWQge1xuXHRcdGNvbnN0IGxvZ0ZpbGVQYXRoID0gdHlwZW9mIF9sb2dGaWxlUGF0aCA9PT0gJ3N0cmluZycgP1xuXHRcdFx0X2xvZ0ZpbGVQYXRoIDpcblx0XHRcdChfbG9nRmlsZVBhdGggJiYgdGhpcy5fbG9nRmlsZVBhdGhGcm9tSW5pdCk7XG5cblx0XHRpZiAodGhpcy5fY3VycmVudExvZ2dlcikge1xuXHRcdFx0Y29uc3Qgb3B0aW9ucyA9IHtcblx0XHRcdFx0Y29uc29sZU1pbkxvZ0xldmVsLFxuXHRcdFx0XHRsb2dGaWxlUGF0aCxcblx0XHRcdFx0cHJlcGVuZFRpbWVzdGFtcFxuXHRcdFx0fTtcblx0XHRcdHRoaXMuX2N1cnJlbnRMb2dnZXIuc2V0dXAob3B0aW9ucykudGhlbigoKSA9PiB7XG5cdFx0XHRcdC8vIE5vdyB0aGF0IHdlIGhhdmUgYSBtaW5pbXVtIGxvZ0xldmVsLCB3ZSBjYW4gY2xlYXIgb3V0IHRoZSBxdWV1ZSBvZiBwZW5kaW5nIG1lc3NhZ2VzXG5cdFx0XHRcdGlmICh0aGlzLl9wZW5kaW5nTG9nUSkge1xuXHRcdFx0XHRcdGNvbnN0IGxvZ1EgPSB0aGlzLl9wZW5kaW5nTG9nUTtcblx0XHRcdFx0XHR0aGlzLl9wZW5kaW5nTG9nUSA9IG51bGw7XG5cdFx0XHRcdFx0bG9nUS5mb3JFYWNoKGl0ZW0gPT4gdGhpcy5fd3JpdGUoaXRlbS5tc2csIGl0ZW0ubGV2ZWwpKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHR9XG5cdH1cblxuXHRpbml0KGxvZ0NhbGxiYWNrOiBJTG9nQ2FsbGJhY2ssIGxvZ0ZpbGVQYXRoPzogc3RyaW5nLCBsb2dUb0NvbnNvbGU/OiBib29sZWFuKTogdm9pZCB7XG5cdFx0Ly8gUmUtaW5pdCwgY3JlYXRlIG5ldyBnbG9iYWwgTG9nZ2VyXG5cdFx0dGhpcy5fcGVuZGluZ0xvZ1EgPSB0aGlzLl9wZW5kaW5nTG9nUSB8fCBbXTtcblx0XHR0aGlzLl9jdXJyZW50TG9nZ2VyID0gbmV3IEludGVybmFsTG9nZ2VyKGxvZ0NhbGxiYWNrLCBsb2dUb0NvbnNvbGUpO1xuXHRcdHRoaXMuX2xvZ0ZpbGVQYXRoRnJvbUluaXQgPSBsb2dGaWxlUGF0aDtcblx0fVxufVxuXG5leHBvcnQgY29uc3QgbG9nZ2VyID0gbmV3IExvZ2dlcigpO1xuXG5pbnRlcmZhY2UgSUludGVybmFsTG9nZ2VyT3B0aW9ucyB7XG5cdGNvbnNvbGVNaW5Mb2dMZXZlbDogTG9nTGV2ZWw7XG5cdGxvZ0ZpbGVQYXRoPzogc3RyaW5nO1xuXHRwcmVwZW5kVGltZXN0YW1wPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBNYW5hZ2VzIGxvZ2dpbmcsIHdoZXRoZXIgdG8gY29uc29sZS5sb2csIGZpbGUsIG9yIFZTIENvZGUgY29uc29sZS5cbiAqIEVuY2Fwc3VsYXRlcyB0aGUgc3RhdGUgc3BlY2lmaWMgdG8gZWFjaCBsb2dnaW5nIHNlc3Npb25cbiAqL1xuY2xhc3MgSW50ZXJuYWxMb2dnZXIge1xuXHRwcml2YXRlIF9taW5Mb2dMZXZlbDogTG9nTGV2ZWw7XG5cdHByaXZhdGUgX2xvZ1RvQ29uc29sZTogYm9vbGVhbjtcblxuXHQvKiogTG9nIGluZm8gdGhhdCBtZWV0cyBtaW5Mb2dMZXZlbCBpcyBzZW50IHRvIHRoaXMgY2FsbGJhY2suICovXG5cdHByaXZhdGUgX2xvZ0NhbGxiYWNrOiBJTG9nQ2FsbGJhY2s7XG5cblx0LyoqIFdyaXRlIHN0ZWFtIGZvciBsb2cgZmlsZSAqL1xuXHRwcml2YXRlIF9sb2dGaWxlU3RyZWFtOiBmcy5Xcml0ZVN0cmVhbTtcblxuXHQvKiogRGlzcG9zZSBhbmQgYWxsb3cgZXhpdCB0byBjb250aW51ZSBub3JtYWxseSAqL1xuXHRwcml2YXRlIGJlZm9yZUV4aXRDYWxsYmFjayA9ICgpID0+IHRoaXMuZGlzcG9zZSgpO1xuXG5cdC8qKiBEaXNwb3NlIGFuZCBleGl0ICovXG5cdHByaXZhdGUgZGlzcG9zZUNhbGxiYWNrO1xuXG5cdC8qKiBXaGV0aGVyIHRvIGFkZCBhIHRpbWVzdGFtcCB0byBtZXNzYWdlcyBpbiB0aGUgbG9nZmlsZSAqL1xuXHRwcml2YXRlIF9wcmVwZW5kVGltZXN0YW1wOiBib29sZWFuO1xuXG5cdGNvbnN0cnVjdG9yKGxvZ0NhbGxiYWNrOiBJTG9nQ2FsbGJhY2ssIGlzU2VydmVyPzogYm9vbGVhbikge1xuXHRcdHRoaXMuX2xvZ0NhbGxiYWNrID0gbG9nQ2FsbGJhY2s7XG5cdFx0dGhpcy5fbG9nVG9Db25zb2xlID0gaXNTZXJ2ZXI7XG5cblx0XHR0aGlzLl9taW5Mb2dMZXZlbCA9IExvZ0xldmVsLldhcm47XG5cblx0XHR0aGlzLmRpc3Bvc2VDYWxsYmFjayA9IChzaWduYWw6IHN0cmluZywgY29kZTogbnVtYmVyKSA9PiB7XG5cdFx0XHR0aGlzLmRpc3Bvc2UoKTtcblxuXHRcdFx0Ly8gRXhpdCB3aXRoIDEyOCArIHZhbHVlIG9mIHRoZSBzaWduYWwgY29kZS5cblx0XHRcdC8vIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvcHJvY2Vzcy5odG1sI3Byb2Nlc3NfZXhpdF9jb2Rlc1xuXHRcdFx0Y29kZSA9IGNvZGUgfHwgMjsgLy8gU0lHSU5UXG5cdFx0XHRjb2RlICs9IDEyODtcblxuXHRcdFx0cHJvY2Vzcy5leGl0KGNvZGUpO1xuXHRcdH07XG5cdH1cblxuXHRwdWJsaWMgYXN5bmMgc2V0dXAob3B0aW9uczogSUludGVybmFsTG9nZ2VyT3B0aW9ucyk6IFByb21pc2U8dm9pZD4ge1xuXHRcdHRoaXMuX21pbkxvZ0xldmVsID0gb3B0aW9ucy5jb25zb2xlTWluTG9nTGV2ZWw7XG5cdFx0dGhpcy5fcHJlcGVuZFRpbWVzdGFtcCA9IG9wdGlvbnMucHJlcGVuZFRpbWVzdGFtcDtcblxuXHRcdC8vIE9wZW4gYSBsb2cgZmlsZSBpbiB0aGUgc3BlY2lmaWVkIGxvY2F0aW9uLiBPdmVyd3JpdHRlbiBvbiBlYWNoIHJ1bi5cblx0XHRpZiAob3B0aW9ucy5sb2dGaWxlUGF0aCkge1xuXHRcdFx0aWYgKCFwYXRoLmlzQWJzb2x1dGUob3B0aW9ucy5sb2dGaWxlUGF0aCkpIHtcblx0XHRcdFx0dGhpcy5sb2coYGxvZ0ZpbGVQYXRoIG11c3QgYmUgYW4gYWJzb2x1dGUgcGF0aDogJHtvcHRpb25zLmxvZ0ZpbGVQYXRofWAsIExvZ0xldmVsLkVycm9yKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNvbnN0IGhhbmRsZUVycm9yID0gZXJyID0+IHRoaXMuc2VuZExvZyhgRXJyb3IgY3JlYXRpbmcgbG9nIGZpbGUgYXQgcGF0aDogJHtvcHRpb25zLmxvZ0ZpbGVQYXRofS4gRXJyb3I6ICR7ZXJyLnRvU3RyaW5nKCl9XFxuYCwgTG9nTGV2ZWwuRXJyb3IpO1xuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0YXdhaXQgbWtkaXJwUHJvbWlzZShwYXRoLmRpcm5hbWUob3B0aW9ucy5sb2dGaWxlUGF0aCkpO1xuXHRcdFx0XHRcdHRoaXMubG9nKGBWZXJib3NlIGxvZ3MgYXJlIHdyaXR0ZW4gdG86XFxuYCwgTG9nTGV2ZWwuV2Fybik7XG5cdFx0XHRcdFx0dGhpcy5sb2cob3B0aW9ucy5sb2dGaWxlUGF0aCArICdcXG4nLCBMb2dMZXZlbC5XYXJuKTtcblxuXHRcdFx0XHRcdHRoaXMuX2xvZ0ZpbGVTdHJlYW0gPSBmcy5jcmVhdGVXcml0ZVN0cmVhbShvcHRpb25zLmxvZ0ZpbGVQYXRoKTtcblx0XHRcdFx0XHR0aGlzLmxvZ0RhdGVUaW1lKCk7XG5cdFx0XHRcdFx0dGhpcy5zZXR1cFNodXRkb3duTGlzdGVuZXJzKCk7XG5cdFx0XHRcdFx0dGhpcy5fbG9nRmlsZVN0cmVhbS5vbignZXJyb3InLCBlcnIgPT4ge1xuXHRcdFx0XHRcdFx0aGFuZGxlRXJyb3IoZXJyKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0aGFuZGxlRXJyb3IoZXJyKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgbG9nRGF0ZVRpbWUoKTogdm9pZCB7XG5cdFx0bGV0IGQgPSBuZXcgRGF0ZSgpO1xuXHRcdGxldCBkYXRlU3RyaW5nID0gZC5nZXRVVENGdWxsWWVhcigpICsgJy0nICsgYCR7ZC5nZXRVVENNb250aCgpICsgMX1gICsgJy0nICsgZC5nZXRVVENEYXRlKCk7XG5cdFx0Y29uc3QgdGltZUFuZERhdGVTdGFtcCA9IGRhdGVTdHJpbmcgKyAnLCAnICsgZ2V0Rm9ybWF0dGVkVGltZVN0cmluZygpO1xuXHRcdHRoaXMubG9nKHRpbWVBbmREYXRlU3RhbXAgKyAnXFxuJywgTG9nTGV2ZWwuVmVyYm9zZSwgZmFsc2UpO1xuXHR9XG5cblx0cHJpdmF0ZSBzZXR1cFNodXRkb3duTGlzdGVuZXJzKCk6IHZvaWQge1xuXHRcdHByb2Nlc3MuYWRkTGlzdGVuZXIoJ2JlZm9yZUV4aXQnLCB0aGlzLmJlZm9yZUV4aXRDYWxsYmFjayk7XG5cdFx0cHJvY2Vzcy5hZGRMaXN0ZW5lcignU0lHVEVSTScsIHRoaXMuZGlzcG9zZUNhbGxiYWNrKTtcblx0XHRwcm9jZXNzLmFkZExpc3RlbmVyKCdTSUdJTlQnLCB0aGlzLmRpc3Bvc2VDYWxsYmFjayk7XG5cdH1cblxuXHRwcml2YXRlIHJlbW92ZVNodXRkb3duTGlzdGVuZXJzKCk6IHZvaWQge1xuXHRcdHByb2Nlc3MucmVtb3ZlTGlzdGVuZXIoJ2JlZm9yZUV4aXQnLCB0aGlzLmJlZm9yZUV4aXRDYWxsYmFjayk7XG5cdFx0cHJvY2Vzcy5yZW1vdmVMaXN0ZW5lcignU0lHVEVSTScsIHRoaXMuZGlzcG9zZUNhbGxiYWNrKTtcblx0XHRwcm9jZXNzLnJlbW92ZUxpc3RlbmVyKCdTSUdJTlQnLCB0aGlzLmRpc3Bvc2VDYWxsYmFjayk7XG5cdH1cblxuXHRwdWJsaWMgZGlzcG9zZSgpOiBQcm9taXNlPHZvaWQ+IHtcblx0XHRyZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG5cdFx0XHR0aGlzLnJlbW92ZVNodXRkb3duTGlzdGVuZXJzKCk7XG5cdFx0XHRpZiAodGhpcy5fbG9nRmlsZVN0cmVhbSkge1xuXHRcdFx0XHR0aGlzLl9sb2dGaWxlU3RyZWFtLmVuZChyZXNvbHZlKTtcblx0XHRcdFx0dGhpcy5fbG9nRmlsZVN0cmVhbSA9IG51bGw7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXNvbHZlKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgbG9nKG1zZzogc3RyaW5nLCBsZXZlbDogTG9nTGV2ZWwsIHByZXBlbmRUaW1lc3RhbXAgPSB0cnVlKTogdm9pZCB7XG5cdFx0aWYgKHRoaXMuX21pbkxvZ0xldmVsID09PSBMb2dMZXZlbC5TdG9wKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKGxldmVsID49IHRoaXMuX21pbkxvZ0xldmVsKSB7XG5cdFx0XHR0aGlzLnNlbmRMb2cobXNnLCBsZXZlbCk7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMuX2xvZ1RvQ29uc29sZSkge1xuXHRcdFx0Y29uc3QgbG9nRm4gPVxuXHRcdFx0XHRsZXZlbCA9PT0gTG9nTGV2ZWwuRXJyb3IgPyBjb25zb2xlLmVycm9yIDpcblx0XHRcdFx0bGV2ZWwgPT09IExvZ0xldmVsLldhcm4gPyBjb25zb2xlLndhcm4gOlxuXHRcdFx0XHRudWxsO1xuXG5cdFx0XHRpZiAobG9nRm4pIHtcblx0XHRcdFx0bG9nRm4odHJpbUxhc3ROZXdsaW5lKG1zZykpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIElmIGFuIGVycm9yLCBwcmVwZW5kIHdpdGggJ1tFcnJvcl0nXG5cdFx0aWYgKGxldmVsID09PSBMb2dMZXZlbC5FcnJvcikge1xuXHRcdFx0bXNnID0gYFske0xvZ0xldmVsW2xldmVsXX1dICR7bXNnfWA7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMuX3ByZXBlbmRUaW1lc3RhbXAgJiYgcHJlcGVuZFRpbWVzdGFtcCkge1xuXHRcdFx0bXNnID0gJ1snICsgZ2V0Rm9ybWF0dGVkVGltZVN0cmluZygpICsgJ10gJyArIG1zZztcblx0XHR9XG5cblx0XHRpZiAodGhpcy5fbG9nRmlsZVN0cmVhbSkge1xuXHRcdFx0dGhpcy5fbG9nRmlsZVN0cmVhbS53cml0ZShtc2cpO1xuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgc2VuZExvZyhtc2c6IHN0cmluZywgbGV2ZWw6IExvZ0xldmVsKTogdm9pZCB7XG5cdFx0Ly8gVHJ1bmNhdGUgbG9uZyBtZXNzYWdlcywgdGhleSBjYW4gaGFuZyBWUyBDb2RlXG5cdFx0aWYgKG1zZy5sZW5ndGggPiAxNTAwKSB7XG5cdFx0XHRjb25zdCBlbmRzSW5OZXdsaW5lID0gISFtc2cubWF0Y2goLyhcXG58XFxyXFxuKSQvKTtcblx0XHRcdG1zZyA9IG1zZy5zdWJzdHIoMCwgMTUwMCkgKyAnWy4uLl0nO1xuXHRcdFx0aWYgKGVuZHNJbk5ld2xpbmUpIHtcblx0XHRcdFx0bXNnID0gbXNnICsgJ1xcbic7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMuX2xvZ0NhbGxiYWNrKSB7XG5cdFx0XHRjb25zdCBldmVudCA9IG5ldyBMb2dPdXRwdXRFdmVudChtc2csIGxldmVsKTtcblx0XHRcdHRoaXMuX2xvZ0NhbGxiYWNrKGV2ZW50KTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbWtkaXJwUHJvbWlzZShmb2xkZXI6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRcdG1rZGlycChmb2xkZXIsIGVyciA9PiB7XG5cdFx0XHRpZiAoZXJyKSB7XG5cdFx0XHRcdHJlamVjdChlcnIpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmVzb2x2ZSgpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuZXhwb3J0IGNsYXNzIExvZ091dHB1dEV2ZW50IGV4dGVuZHMgT3V0cHV0RXZlbnQge1xuXHRjb25zdHJ1Y3Rvcihtc2c6IHN0cmluZywgbGV2ZWw6IExvZ0xldmVsKSB7XG5cdFx0Y29uc3QgY2F0ZWdvcnkgPVxuXHRcdFx0bGV2ZWwgPT09IExvZ0xldmVsLkVycm9yID8gJ3N0ZGVycicgOlxuXHRcdFx0bGV2ZWwgPT09IExvZ0xldmVsLldhcm4gPyAnY29uc29sZScgOlxuXHRcdFx0J3N0ZG91dCc7XG5cdFx0c3VwZXIobXNnLCBjYXRlZ29yeSk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyaW1MYXN0TmV3bGluZShzdHI6IHN0cmluZyk6IHN0cmluZyB7XG5cdHJldHVybiBzdHIucmVwbGFjZSgvKFxcbnxcXHJcXG4pJC8sICcnKTtcbn1cblxuZnVuY3Rpb24gZ2V0Rm9ybWF0dGVkVGltZVN0cmluZygpOiBzdHJpbmcge1xuXHRsZXQgZCA9IG5ldyBEYXRlKCk7XG5cdGxldCBob3VyU3RyaW5nID0gX3BhZFplcm9lcygyLCBTdHJpbmcoZC5nZXRVVENIb3VycygpKSk7XG5cdGxldCBtaW51dGVTdHJpbmcgPSBfcGFkWmVyb2VzKDIsIFN0cmluZyhkLmdldFVUQ01pbnV0ZXMoKSkpO1xuXHRsZXQgc2Vjb25kU3RyaW5nID0gX3BhZFplcm9lcygyLCBTdHJpbmcoZC5nZXRVVENTZWNvbmRzKCkpKTtcblx0bGV0IG1pbGxpc2Vjb25kU3RyaW5nID0gX3BhZFplcm9lcygzLCBTdHJpbmcoZC5nZXRVVENNaWxsaXNlY29uZHMoKSkpO1xuXHRyZXR1cm4gaG91clN0cmluZyArICc6JyArIG1pbnV0ZVN0cmluZyArICc6JyArIHNlY29uZFN0cmluZyArICcuJyArIG1pbGxpc2Vjb25kU3RyaW5nICsgJyBVVEMnO1xufVxuXG5mdW5jdGlvbiBfcGFkWmVyb2VzKG1pbkRlc2lyZWRMZW5ndGg6IG51bWJlciwgbnVtYmVyVG9QYWQ6IHN0cmluZyk6IHN0cmluZyB7XG5cdGlmIChudW1iZXJUb1BhZC5sZW5ndGggPj0gbWluRGVzaXJlZExlbmd0aCkge1xuXHRcdHJldHVybiBudW1iZXJUb1BhZDtcblx0fSBlbHNlIHtcblx0XHRyZXR1cm4gU3RyaW5nKCcwJy5yZXBlYXQobWluRGVzaXJlZExlbmd0aCkgKyBudW1iZXJUb1BhZCkuc2xpY2UoLW1pbkRlc2lyZWRMZW5ndGgpO1xuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Logger = require(\"./logger\");\nconst logger = Logger.logger;\nconst debugSession_1 = require(\"./debugSession\");\nclass LoggingDebugSession extends debugSession_1.DebugSession {\n    constructor(obsolete_logFilePath, obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer);\n        this.obsolete_logFilePath = obsolete_logFilePath;\n        this.on('error', (event) => {\n            logger.error(event.body);\n        });\n    }\n    start(inStream, outStream) {\n        super.start(inStream, outStream);\n        logger.init(e => this.sendEvent(e), this.obsolete_logFilePath, this._isServer);\n    }\n    /**\n     * Overload sendEvent to log\n     */\n    sendEvent(event) {\n        if (!(event instanceof Logger.LogOutputEvent)) {\n            // Don't create an infinite loop...\n            logger.verbose(`To client: ${JSON.stringify(event)}`);\n        }\n        super.sendEvent(event);\n    }\n    /**\n     * Overload sendRequest to log\n     */\n    sendRequest(command, args, timeout, cb) {\n        logger.verbose(`To client: ${JSON.stringify(command)}(${JSON.stringify(args)}), timeout: ${timeout}`);\n        super.sendRequest(command, args, timeout, cb);\n    }\n    /**\n     * Overload sendResponse to log\n     */\n    sendResponse(response) {\n        logger.verbose(`To client: ${JSON.stringify(response)}`);\n        super.sendResponse(response);\n    }\n    dispatchRequest(request) {\n        logger.verbose(`From client: ${request.command}(${JSON.stringify(request.arguments)})`);\n        super.dispatchRequest(request);\n    }\n}\nexports.LoggingDebugSession = LoggingDebugSession;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZ0RlYnVnU2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnaW5nRGVidWdTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7QUFJaEcsbUNBQW1DO0FBQ25DLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDN0IsaURBQTRDO0FBRTVDLE1BQWEsbUJBQW9CLFNBQVEsMkJBQVk7SUFDcEQsWUFBMkIsb0JBQTZCLEVBQUUsd0NBQWtELEVBQUUsaUJBQTJCO1FBQ3hJLEtBQUssQ0FBQyx3Q0FBd0MsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBRHpDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBUztRQUd2RCxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQTBCLEVBQUUsRUFBRTtZQUMvQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFFTSxLQUFLLENBQUMsUUFBK0IsRUFBRSxTQUFnQztRQUM3RSxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFFRDs7T0FFRztJQUNJLFNBQVMsQ0FBQyxLQUEwQjtRQUMxQyxJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQzlDLG1DQUFtQztZQUNuQyxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDdEQ7UUFFRCxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7T0FFRztJQUNJLFdBQVcsQ0FBQyxPQUFlLEVBQUUsSUFBUyxFQUFFLE9BQWUsRUFBRSxFQUE4QztRQUM3RyxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxlQUFlLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDdEcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxZQUFZLENBQUMsUUFBZ0M7UUFDbkQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELEtBQUssQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVTLGVBQWUsQ0FBQyxPQUE4QjtRQUN2RCxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixPQUFPLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBRSxHQUFHLENBQUMsQ0FBQztRQUN6RixLQUFLLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Q0FDRDtBQTlDRCxrREE4Q0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0IHtEZWJ1Z1Byb3RvY29sfSBmcm9tICd2c2NvZGUtZGVidWdwcm90b2NvbCc7XG5cbmltcG9ydCAqIGFzIExvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5jb25zdCBsb2dnZXIgPSBMb2dnZXIubG9nZ2VyO1xuaW1wb3J0IHtEZWJ1Z1Nlc3Npb259IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGNsYXNzIExvZ2dpbmdEZWJ1Z1Nlc3Npb24gZXh0ZW5kcyBEZWJ1Z1Nlc3Npb24ge1xuXHRwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBvYnNvbGV0ZV9sb2dGaWxlUGF0aD86IHN0cmluZywgb2Jzb2xldGVfZGVidWdnZXJMaW5lc0FuZENvbHVtbnNTdGFydEF0MT86IGJvb2xlYW4sIG9ic29sZXRlX2lzU2VydmVyPzogYm9vbGVhbikge1xuXHRcdHN1cGVyKG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEsIG9ic29sZXRlX2lzU2VydmVyKTtcblxuXHRcdHRoaXMub24oJ2Vycm9yJywgKGV2ZW50OiBEZWJ1Z1Byb3RvY29sLkV2ZW50KSA9PiB7XG5cdFx0XHRsb2dnZXIuZXJyb3IoZXZlbnQuYm9keSk7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgc3RhcnQoaW5TdHJlYW06IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSwgb3V0U3RyZWFtOiBOb2RlSlMuV3JpdGFibGVTdHJlYW0pOiB2b2lkIHtcblx0XHRzdXBlci5zdGFydChpblN0cmVhbSwgb3V0U3RyZWFtKTtcblx0XHRsb2dnZXIuaW5pdChlID0+IHRoaXMuc2VuZEV2ZW50KGUpLCB0aGlzLm9ic29sZXRlX2xvZ0ZpbGVQYXRoLCB0aGlzLl9pc1NlcnZlcik7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZEV2ZW50IHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRFdmVudChldmVudDogRGVidWdQcm90b2NvbC5FdmVudCk6IHZvaWQge1xuXHRcdGlmICghKGV2ZW50IGluc3RhbmNlb2YgTG9nZ2VyLkxvZ091dHB1dEV2ZW50KSkge1xuXHRcdFx0Ly8gRG9uJ3QgY3JlYXRlIGFuIGluZmluaXRlIGxvb3AuLi5cblx0XHRcdGxvZ2dlci52ZXJib3NlKGBUbyBjbGllbnQ6ICR7SlNPTi5zdHJpbmdpZnkoZXZlbnQpfWApO1xuXHRcdH1cblxuXHRcdHN1cGVyLnNlbmRFdmVudChldmVudCk7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZFJlcXVlc3QgdG8gbG9nXG5cdCAqL1xuXHRwdWJsaWMgc2VuZFJlcXVlc3QoY29tbWFuZDogc3RyaW5nLCBhcmdzOiBhbnksIHRpbWVvdXQ6IG51bWJlciwgY2I6IChyZXNwb25zZTogRGVidWdQcm90b2NvbC5SZXNwb25zZSkgPT4gdm9pZCk6IHZvaWQge1xuXHRcdGxvZ2dlci52ZXJib3NlKGBUbyBjbGllbnQ6ICR7SlNPTi5zdHJpbmdpZnkoY29tbWFuZCl9KCR7SlNPTi5zdHJpbmdpZnkoYXJncyl9KSwgdGltZW91dDogJHt0aW1lb3V0fWApO1xuXHRcdHN1cGVyLnNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MsIHRpbWVvdXQsIGNiKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVybG9hZCBzZW5kUmVzcG9uc2UgdG8gbG9nXG5cdCAqL1xuXHRwdWJsaWMgc2VuZFJlc3BvbnNlKHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlKTogdm9pZCB7XG5cdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShyZXNwb25zZSl9YCk7XG5cdFx0c3VwZXIuc2VuZFJlc3BvbnNlKHJlc3BvbnNlKTtcblx0fVxuXG5cdHByb3RlY3RlZCBkaXNwYXRjaFJlcXVlc3QocmVxdWVzdDogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0bG9nZ2VyLnZlcmJvc2UoYEZyb20gY2xpZW50OiAke3JlcXVlc3QuY29tbWFuZH0oJHtKU09OLnN0cmluZ2lmeShyZXF1ZXN0LmFyZ3VtZW50cykgfSlgKTtcblx0XHRzdXBlci5kaXNwYXRjaFJlcXVlc3QocmVxdWVzdCk7XG5cdH1cbn1cbiJdfQ==","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debugSession_1 = require(\"./debugSession\");\nexports.DebugSession = debugSession_1.DebugSession;\nexports.InitializedEvent = debugSession_1.InitializedEvent;\nexports.TerminatedEvent = debugSession_1.TerminatedEvent;\nexports.StoppedEvent = debugSession_1.StoppedEvent;\nexports.ContinuedEvent = debugSession_1.ContinuedEvent;\nexports.OutputEvent = debugSession_1.OutputEvent;\nexports.ThreadEvent = debugSession_1.ThreadEvent;\nexports.BreakpointEvent = debugSession_1.BreakpointEvent;\nexports.ModuleEvent = debugSession_1.ModuleEvent;\nexports.LoadedSourceEvent = debugSession_1.LoadedSourceEvent;\nexports.CapabilitiesEvent = debugSession_1.CapabilitiesEvent;\nexports.Thread = debugSession_1.Thread;\nexports.StackFrame = debugSession_1.StackFrame;\nexports.Scope = debugSession_1.Scope;\nexports.Variable = debugSession_1.Variable;\nexports.Breakpoint = debugSession_1.Breakpoint;\nexports.Source = debugSession_1.Source;\nexports.Module = debugSession_1.Module;\nexports.CompletionItem = debugSession_1.CompletionItem;\nexports.ErrorDestination = debugSession_1.ErrorDestination;\nconst loggingDebugSession_1 = require(\"./loggingDebugSession\");\nexports.LoggingDebugSession = loggingDebugSession_1.LoggingDebugSession;\nconst Logger = require(\"./logger\");\nexports.Logger = Logger;\nconst messages_1 = require(\"./messages\");\nexports.Event = messages_1.Event;\nexports.Response = messages_1.Response;\nconst handles_1 = require(\"./handles\");\nexports.Handles = handles_1.Handles;\nconst logger = Logger.logger;\nexports.logger = logger;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBQ2hHLFlBQVksQ0FBQzs7QUFFYixpREFNd0I7QUFTdkIsdUJBZEEsMkJBQVksQ0FjQTtBQUlaLDJCQWpCQSwrQkFBZ0IsQ0FpQkE7QUFBRSwwQkFqQkEsOEJBQWUsQ0FpQkE7QUFBRSx1QkFqQkEsMkJBQVksQ0FpQkE7QUFBRSx5QkFqQkEsNkJBQWMsQ0FpQkE7QUFBRSxzQkFqQkEsMEJBQVcsQ0FpQkE7QUFBRSxzQkFqQkEsMEJBQVcsQ0FpQkE7QUFBRSwwQkFqQkEsOEJBQWUsQ0FpQkE7QUFBRSxzQkFqQkEsMEJBQVcsQ0FpQkE7QUFBRSw0QkFqQkEsZ0NBQWlCLENBaUJBO0FBQUUsNEJBakJBLGdDQUFpQixDQWlCQTtBQUM3SixpQkFqQkEscUJBQU0sQ0FpQkE7QUFBRSxxQkFqQkEseUJBQVUsQ0FpQkE7QUFBRSxnQkFqQkEsb0JBQUssQ0FpQkE7QUFBRSxtQkFqQkEsdUJBQVEsQ0FpQkE7QUFDbkMscUJBakJBLHlCQUFVLENBaUJBO0FBQUUsaUJBakJBLHFCQUFNLENBaUJBO0FBQUUsaUJBakJBLHFCQUFNLENBaUJBO0FBQUUseUJBakJBLDZCQUFjLENBaUJBO0FBQzFDLDJCQWpCQSwrQkFBZ0IsQ0FpQkE7QUFmakIsK0RBQTBEO0FBU3pELDhCQVRPLHlDQUFtQixDQVNQO0FBUnBCLG1DQUFtQztBQVNsQyx3QkFBTTtBQVJQLHlDQUE2QztBQWM1QyxnQkFkUSxnQkFBSyxDQWNSO0FBQUUsbUJBZFEsbUJBQVEsQ0FjUjtBQWJoQix1Q0FBb0M7QUFjbkMsa0JBZFEsaUJBQU8sQ0FjUjtBQVpSLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFNNUIsd0JBQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7XG5cdERlYnVnU2Vzc2lvbixcblx0SW5pdGlhbGl6ZWRFdmVudCwgVGVybWluYXRlZEV2ZW50LCBTdG9wcGVkRXZlbnQsIENvbnRpbnVlZEV2ZW50LCBPdXRwdXRFdmVudCwgVGhyZWFkRXZlbnQsIEJyZWFrcG9pbnRFdmVudCwgTW9kdWxlRXZlbnQsIExvYWRlZFNvdXJjZUV2ZW50LCBDYXBhYmlsaXRpZXNFdmVudCxcblx0VGhyZWFkLCBTdGFja0ZyYW1lLCBTY29wZSwgVmFyaWFibGUsXG5cdEJyZWFrcG9pbnQsIFNvdXJjZSwgTW9kdWxlLCBDb21wbGV0aW9uSXRlbSxcblx0RXJyb3JEZXN0aW5hdGlvblxufSBmcm9tICcuL2RlYnVnU2Vzc2lvbic7XG5pbXBvcnQge0xvZ2dpbmdEZWJ1Z1Nlc3Npb259IGZyb20gJy4vbG9nZ2luZ0RlYnVnU2Vzc2lvbic7XG5pbXBvcnQgKiBhcyBMb2dnZXIgZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IHsgRXZlbnQsIFJlc3BvbnNlIH0gZnJvbSAnLi9tZXNzYWdlcyc7XG5pbXBvcnQgeyBIYW5kbGVzIH0gZnJvbSAnLi9oYW5kbGVzJztcblxuY29uc3QgbG9nZ2VyID0gTG9nZ2VyLmxvZ2dlcjtcblxuZXhwb3J0IHtcblx0RGVidWdTZXNzaW9uLFxuXHRMb2dnaW5nRGVidWdTZXNzaW9uLFxuXHRMb2dnZXIsXG5cdGxvZ2dlcixcblx0SW5pdGlhbGl6ZWRFdmVudCwgVGVybWluYXRlZEV2ZW50LCBTdG9wcGVkRXZlbnQsIENvbnRpbnVlZEV2ZW50LCBPdXRwdXRFdmVudCwgVGhyZWFkRXZlbnQsIEJyZWFrcG9pbnRFdmVudCwgTW9kdWxlRXZlbnQsIExvYWRlZFNvdXJjZUV2ZW50LCBDYXBhYmlsaXRpZXNFdmVudCxcblx0VGhyZWFkLCBTdGFja0ZyYW1lLCBTY29wZSwgVmFyaWFibGUsXG5cdEJyZWFrcG9pbnQsIFNvdXJjZSwgTW9kdWxlLCBDb21wbGV0aW9uSXRlbSxcblx0RXJyb3JEZXN0aW5hdGlvbixcblx0RXZlbnQsIFJlc3BvbnNlLFxuXHRIYW5kbGVzXG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Message {\n    constructor(type) {\n        this.seq = 0;\n        this.type = type;\n    }\n}\nexports.Message = Message;\nclass Response extends Message {\n    constructor(request, message) {\n        super('response');\n        this.request_seq = request.seq;\n        this.command = request.command;\n        if (message) {\n            this.success = false;\n            this.message = message;\n        }\n        else {\n            this.success = true;\n        }\n    }\n}\nexports.Response = Response;\nclass Event extends Message {\n    constructor(event, body) {\n        super('event');\n        this.event = event;\n        if (body) {\n            this.body = body;\n        }\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVzc2FnZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Z0dBR2dHOztBQUtoRyxNQUFhLE9BQU87SUFJbkIsWUFBbUIsSUFBWTtRQUM5QixJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ2xCLENBQUM7Q0FDRDtBQVJELDBCQVFDO0FBRUQsTUFBYSxRQUFTLFNBQVEsT0FBTztJQUtwQyxZQUFtQixPQUE4QixFQUFFLE9BQWdCO1FBQ2xFLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDL0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQy9CLElBQUksT0FBTyxFQUFFO1lBQ1osSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDZixJQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztTQUM5QjthQUFNO1lBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7U0FDcEI7SUFDRixDQUFDO0NBQ0Q7QUFoQkQsNEJBZ0JDO0FBRUQsTUFBYSxLQUFNLFNBQVEsT0FBTztJQUdqQyxZQUFtQixLQUFhLEVBQUUsSUFBVTtRQUMzQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLElBQUksRUFBRTtZQUNILElBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ3hCO0lBQ0YsQ0FBQztDQUNEO0FBVkQsc0JBVUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0IHsgRGVidWdQcm90b2NvbCB9IGZyb20gJ3ZzY29kZS1kZWJ1Z3Byb3RvY29sJztcblxuXG5leHBvcnQgY2xhc3MgTWVzc2FnZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuUHJvdG9jb2xNZXNzYWdlIHtcblx0c2VxOiBudW1iZXI7XG5cdHR5cGU6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IodHlwZTogc3RyaW5nKSB7XG5cdFx0dGhpcy5zZXEgPSAwO1xuXHRcdHRoaXMudHlwZSA9IHR5cGU7XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIFJlc3BvbnNlIGV4dGVuZHMgTWVzc2FnZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuUmVzcG9uc2Uge1xuXHRyZXF1ZXN0X3NlcTogbnVtYmVyO1xuXHRzdWNjZXNzOiBib29sZWFuO1xuXHRjb21tYW5kOiBzdHJpbmc7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHJlcXVlc3Q6IERlYnVnUHJvdG9jb2wuUmVxdWVzdCwgbWVzc2FnZT86IHN0cmluZykge1xuXHRcdHN1cGVyKCdyZXNwb25zZScpO1xuXHRcdHRoaXMucmVxdWVzdF9zZXEgPSByZXF1ZXN0LnNlcTtcblx0XHR0aGlzLmNvbW1hbmQgPSByZXF1ZXN0LmNvbW1hbmQ7XG5cdFx0aWYgKG1lc3NhZ2UpIHtcblx0XHRcdHRoaXMuc3VjY2VzcyA9IGZhbHNlO1xuXHRcdFx0KDxhbnk+dGhpcykubWVzc2FnZSA9IG1lc3NhZ2U7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuc3VjY2VzcyA9IHRydWU7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBFdmVudCBleHRlbmRzIE1lc3NhZ2UgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLkV2ZW50IHtcblx0ZXZlbnQ6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoZXZlbnQ6IHN0cmluZywgYm9keT86IGFueSkge1xuXHRcdHN1cGVyKCdldmVudCcpO1xuXHRcdHRoaXMuZXZlbnQgPSBldmVudDtcblx0XHRpZiAoYm9keSkge1xuXHRcdFx0KDxhbnk+dGhpcykuYm9keSA9IGJvZHk7XG5cdFx0fVxuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ee = require(\"events\");\nconst messages_1 = require(\"./messages\");\nclass ProtocolServer extends ee.EventEmitter {\n    constructor() {\n        super();\n        this._pendingRequests = new Map();\n    }\n    start(inStream, outStream) {\n        this._sequence = 1;\n        this._writableStream = outStream;\n        this._rawData = new Buffer(0);\n        inStream.on('data', (data) => this._handleData(data));\n        inStream.on('close', () => {\n            this._emitEvent(new messages_1.Event('close'));\n        });\n        inStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'inStream error: ' + (error && error.message)));\n        });\n        outStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'outStream error: ' + (error && error.message)));\n        });\n        inStream.resume();\n    }\n    stop() {\n        if (this._writableStream) {\n            this._writableStream.end();\n        }\n    }\n    sendEvent(event) {\n        this._send('event', event);\n    }\n    sendResponse(response) {\n        if (response.seq > 0) {\n            console.error(`attempt to send more than one response for command ${response.command}`);\n        }\n        else {\n            this._send('response', response);\n        }\n    }\n    sendRequest(command, args, timeout, cb) {\n        const request = {\n            command: command\n        };\n        if (args && Object.keys(args).length > 0) {\n            request.arguments = args;\n        }\n        if (!this._writableStream) {\n            this._emitEvent(new messages_1.Event('error', 'sendRequest: No writableStream'));\n            return;\n        }\n        this._send('request', request);\n        if (cb) {\n            this._pendingRequests.set(request.seq, cb);\n            const timer = setTimeout(() => {\n                clearTimeout(timer);\n                const clb = this._pendingRequests.get(request.seq);\n                if (clb) {\n                    this._pendingRequests.delete(request.seq);\n                    clb(new messages_1.Response(request, 'timeout'));\n                }\n            }, timeout);\n        }\n    }\n    // ---- protected ----------------------------------------------------------\n    dispatchRequest(request) {\n    }\n    // ---- private ------------------------------------------------------------\n    _emitEvent(event) {\n        this.emit(event.event, event);\n    }\n    _send(typ, message) {\n        message.type = typ;\n        message.seq = this._sequence++;\n        if (this._writableStream) {\n            const json = JSON.stringify(message);\n            this._writableStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}\\r\\n\\r\\n${json}`, 'utf8');\n        }\n    }\n    _handleData(data) {\n        this._rawData = Buffer.concat([this._rawData, data]);\n        while (true) {\n            if (this._contentLength >= 0) {\n                if (this._rawData.length >= this._contentLength) {\n                    const message = this._rawData.toString('utf8', 0, this._contentLength);\n                    this._rawData = this._rawData.slice(this._contentLength);\n                    this._contentLength = -1;\n                    if (message.length > 0) {\n                        try {\n                            let msg = JSON.parse(message);\n                            if (msg.type === 'request') {\n                                this.dispatchRequest(msg);\n                            }\n                            else if (msg.type === 'response') {\n                                const response = msg;\n                                const clb = this._pendingRequests.get(response.request_seq);\n                                if (clb) {\n                                    this._pendingRequests.delete(response.request_seq);\n                                    clb(response);\n                                }\n                            }\n                        }\n                        catch (e) {\n                            this._emitEvent(new messages_1.Event('error', 'Error handling data: ' + (e && e.message)));\n                        }\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            }\n            else {\n                const idx = this._rawData.indexOf(ProtocolServer.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this._rawData.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] == 'Content-Length') {\n                            this._contentLength = +pair[1];\n                        }\n                    }\n                    this._rawData = this._rawData.slice(idx + ProtocolServer.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\nProtocolServer.TWO_CRLF = '\\r\\n\\r\\n';\nexports.ProtocolServer = ProtocolServer;\n//# sourceMappingURL=data:application/json;base64,","import { MINode } from './mi_parse';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\n\nexport interface Breakpoint {\n    file?: string;\n    line?: number;\n    raw?: string;\n    condition: string;\n    countCondition?: string;\n    number?: number;\n}\n\nexport interface Stack {\n    level: number;\n    address: string;\n    function: string;\n    fileName: string;\n    file: string;\n    line: number;\n}\n\nexport interface Variable {\n    name: string;\n    valueStr: string;\n    type: string;\n    raw?: any;\n}\n\nexport interface IBackend {\n    connect(cwd: string, executable: string, target: string[]): Thenable<any>;\n    stop();\n    detach();\n    interrupt(arg: string): Thenable<boolean>;\n    continue(threadId: number): Thenable<boolean>;\n    next(threadId: number, instruction: boolean): Thenable<boolean>;\n    step(threadId: number, instruction: boolean): Thenable<boolean>;\n    stepOut(threadId: number): Thenable<boolean>;\n    addBreakPoint(breakpoint: Breakpoint): Promise<Breakpoint>;\n    removeBreakpoints(breakpoints: number[]): Promise<boolean>;\n    getStack(threadId: number, startLevel: number, maxLevels: number): Thenable<Stack[]>;\n    getStackVariables(thread: number, frame: number): Thenable<Variable[]>;\n    evalExpression(name: string, threadId: number, frameId: number): Thenable<any>;\n    isReady(): boolean;\n    changeVariable(name: string, rawValue: string): Thenable<any>;\n    examineMemory(from: number, to: number): Thenable<any>;\n}\n\nexport class VariableObject {\n    public name: string;\n    public exp: string;\n    public numchild: number;\n    public type: string;\n    public value: string;\n    public threadId: string;\n    public frozen: boolean;\n    public dynamic: boolean;\n    public displayhint: string;\n    public hasMore: boolean;\n    public id: number;\n    public fullExp: string;\n    public children: {[name: string]: string};\n    constructor(node: any) {\n        this.name = MINode.valueOf(node, 'name');\n        this.exp = MINode.valueOf(node, 'exp');\n        this.numchild = parseInt(MINode.valueOf(node, 'numchild'));\n        this.type = MINode.valueOf(node, 'type');\n        this.value = MINode.valueOf(node, 'value');\n        this.threadId = MINode.valueOf(node, 'thread-id');\n        this.frozen = !!MINode.valueOf(node, 'frozen');\n        this.dynamic = !!MINode.valueOf(node, 'dynamic');\n        this.displayhint = MINode.valueOf(node, 'displayhint');\n        this.children = {};\n        // TODO: use has_more when it's > 0\n        this.hasMore = !!MINode.valueOf(node, 'has_more');\n    }\n\n    public applyChanges(node: MINode) {\n        this.value = MINode.valueOf(node, 'value');\n        if (!!MINode.valueOf(node, 'type_changed')) {\n            this.type = MINode.valueOf(node, 'new_type');\n        }\n        this.dynamic = !!MINode.valueOf(node, 'dynamic');\n        this.displayhint = MINode.valueOf(node, 'displayhint');\n        this.hasMore = !!MINode.valueOf(node, 'has_more');\n    }\n\n    public isCompound(): boolean {\n        return this.numchild > 0 ||\n            this.value === '{...}' ||\n            (this.dynamic && (this.displayhint === 'array' || this.displayhint === 'map'));\n    }\n\n    public toProtocolVariable(): DebugProtocol.Variable {\n        const res: DebugProtocol.Variable = {\n            name: this.exp,\n            evaluateName: this.fullExp || this.exp,\n            value: (this.value === void 0) ? '<unknown>' : this.value,\n            type: this.type,\n            presentationHint: {\n                kind: this.displayhint\n            },\n            variablesReference: this.id\n        };\n        if (this.displayhint) {\n            // res.kind = this.displayhint;\n        }\n        return res;\n    }\n}\n\n// from https://gist.github.com/justmoon/15511f92e5216fa2624b#gistcomment-1928632\nexport interface MIError extends Error {\n    readonly name: string;\n    readonly message: string;\n    readonly source: string;\n}\n\nexport interface MIErrorConstructor {\n    readonly prototype: MIError;\n    new (message: string, source: string): MIError;\n}\n\nexport const MIError: MIErrorConstructor = class MIError {\n    public readonly name: string;\n    public readonly message: string;\n    public readonly source: string;\n    public constructor(message: string, source: string) {\n        Object.defineProperty(this, 'name', {\n            get: () => (this.constructor as any).name\n        });\n        Object.defineProperty(this, 'message', {\n            get: () => message\n        });\n        Object.defineProperty(this, 'source', {\n            get: () => source\n        });\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n    public toString() {\n        return `${this.message} (from ${this.source})`;\n    }\n} as any;\nObject.setPrototypeOf(MIError as any, Object.create(Error.prototype));\nMIError.prototype.constructor = MIError;\n","import { MINode } from './mi_parse';\n\nconst resultRegex = /^([a-zA-Z_\\-][a-zA-Z0-9_\\-]*|\\[\\d+\\])\\s*=\\s*/;\nconst variableRegex = /^[a-zA-Z_\\-][a-zA-Z0-9_\\-]*/;\nconst errorRegex = /^\\<.+?\\>/;\nconst referenceStringRegex = /^(0x[0-9a-fA-F]+\\s*)\"/;\nconst referenceRegex = /^0x[0-9a-fA-F]+/;\nconst nullpointerRegex = /^0x0+\\b/;\nconst charRegex = /^(\\d+) ['\"]/;\nconst numberRegex = /^\\d+(\\.\\d+)?/;\nconst pointerCombineChar = '.';\n\nexport function isExpandable(value: string): number {\n    let match;\n    value = value.trim();\n    if (value.length === 0) { return 0; }\n    else if (value.startsWith('{...}')) { return 2; } // lldb string/array\n    else if (value[0] === '{') { return 1; } // object\n    else if (value.startsWith('true')) { return 0; }\n    else if (value.startsWith('false')) { return 0; }\n    else if (match = nullpointerRegex.exec(value)) { return 0; }\n    else if (match = referenceStringRegex.exec(value)) { return 0; }\n    else if (match = referenceRegex.exec(value)) { return 2; } // reference\n    else if (match = charRegex.exec(value)) { return 0; }\n    else if (match = numberRegex.exec(value)) { return 0; }\n    else if (match = variableRegex.exec(value)) { return 0; }\n    else if (match = errorRegex.exec(value)) { return 0; }\n    else { return 0; }\n}\n\n// tslint:disable-next-line:ban-types\nexport function expandValue(variableCreate: Function, value: string, root: string = '', extra?: any): any {\n    const parseCString = () => {\n        value = value.trim();\n        if (value[0] !== '\"' && value[0] !== '\\'') {\n            return '';\n        }\n        let stringEnd = 1;\n        let inString = true;\n        const charStr = value[0];\n        let remaining = value.substr(1);\n        let escaped = false;\n        while (inString) {\n            if (escaped) {\n                escaped = false;\n            }\n            else if (remaining[0] === '\\\\') {\n                escaped = true;\n            }\n            else if (remaining[0] === charStr) {\n                inString = false;\n            }\n\n            remaining = remaining.substr(1);\n            stringEnd++;\n        }\n        const str = value.substr(0, stringEnd).trim();\n        value = value.substr(stringEnd).trim();\n        return str;\n    };\n\n    const stack = [root];\n    let parseValue;\n    let parseCommaResult;\n    let parseCommaValue;\n    let parseResult;\n    let createValue;\n    let variable = '';\n\n    const getNamespace = (variable) => {\n        let namespace = '';\n        let prefix = '';\n        stack.push(variable);\n        stack.forEach((name) => {\n            prefix = '';\n            if (name !== '') {\n                if (name.startsWith('[')) {\n                    namespace = namespace + name;\n                }\n                else {\n                    if (namespace) {\n                        while (name.startsWith('*')) {\n                            prefix += '*';\n                            name = name.substr(1);\n                        }\n                        namespace = namespace + pointerCombineChar + name;\n                    }\n                    else {\n                        namespace = name;\n                    }\n                }\n            }\n        });\n        stack.pop();\n        return prefix + namespace;\n    };\n\n    const parseTupleOrList = () => {\n        value = value.trim();\n        if (value[0] !== '{') {\n            return undefined;\n        }\n        const oldContent = value;\n        value = value.substr(1).trim();\n        if (value[0] === '}') {\n            value = value.substr(1).trim();\n            return [];\n        }\n        if (value.startsWith('...')) {\n            value = value.substr(3).trim();\n            if (value[0] === '}') {\n                value = value.substr(1).trim();\n                return '<...>' as any;\n            }\n        }\n        const eqPos = value.indexOf('=');\n        const newValPos1 = value.indexOf('{');\n        const newValPos2 = value.indexOf(',');\n        let newValPos = newValPos1;\n        if (newValPos2 !== -1 && newValPos2 < newValPos1) {\n            newValPos = newValPos2;\n        }\n        if (newValPos !== -1 && eqPos > newValPos || eqPos === -1) { // is value list\n            const values = [];\n            stack.push('[0]');\n            let val = parseValue();\n            stack.pop();\n            values.push(createValue('[0]', val));\n            const remaining = value;\n            let i = 0;\n            while (true) {\n                stack.push('[' + (++i) + ']');\n                if (!(val = parseCommaValue())) {\n                    stack.pop();\n                    break;\n                }\n                stack.pop();\n                values.push(createValue('[' + i + ']', val));\n            }\n            value = value.substr(1).trim(); // }\n            return values;\n        }\n\n        let result = parseResult(true);\n        if (result) {\n            const results = [];\n            results.push(result);\n            while (result = parseCommaResult(true)) {\n                results.push(result);\n            }\n            value = value.substr(1).trim(); // }\n            return results;\n        }\n\n        return undefined;\n    };\n\n    const parsePrimitive = () => {\n        let primitive: any;\n        let match;\n        value = value.trim();\n        if (value.length === 0) {\n            primitive = undefined;\n        }\n        else if (value.startsWith('true')) {\n            primitive = 'true';\n            value = value.substr(4).trim();\n        }\n        else if (value.startsWith('false')) {\n            primitive = 'false';\n            value = value.substr(5).trim();\n        }\n        else if (match = nullpointerRegex.exec(value)) {\n            primitive = '<nullptr>';\n            value = value.substr(match[0].length).trim();\n        }\n        else if (match = referenceStringRegex.exec(value)) {\n            value = value.substr(match[1].length).trim();\n            primitive = parseCString();\n        }\n        else if (match = referenceRegex.exec(value)) {\n            primitive = '*' + match[0];\n            value = value.substr(match[0].length).trim();\n        }\n        else if (match = charRegex.exec(value)) {\n            primitive = match[1];\n            value = value.substr(match[0].length - 1);\n            primitive += ' ' + parseCString();\n        }\n        else if (match = numberRegex.exec(value)) {\n            primitive = match[0];\n            value = value.substr(match[0].length).trim();\n        }\n        else if (match = variableRegex.exec(value)) {\n            primitive = match[0];\n            value = value.substr(match[0].length).trim();\n        }\n        else if (match = errorRegex.exec(value)) {\n            primitive = match[0];\n            value = value.substr(match[0].length).trim();\n        }\n        else {\n            primitive = value;\n        }\n        return primitive;\n    };\n\n    parseValue = () => {\n        value = value.trim();\n        if (value[0] === '\"') {\n            return parseCString();\n        }\n        else if (value[0] === '{') {\n            return parseTupleOrList();\n        }\n        else {\n            return parsePrimitive();\n        }\n    };\n\n    parseResult = (pushToStack: boolean = false) => {\n        value = value.trim();\n        const variableMatch = resultRegex.exec(value);\n        if (!variableMatch) {\n            return undefined;\n        }\n        value = value.substr(variableMatch[0].length).trim();\n        const name = variable = variableMatch[1];\n        if (pushToStack) {\n            stack.push(variable);\n        }\n        const val = parseValue();\n        if (pushToStack) {\n            stack.pop();\n        }\n        return createValue(name, val);\n    };\n\n    createValue = (name, val) => {\n        let ref = 0;\n        if (typeof val === 'object') {\n            ref = variableCreate(val);\n            val = 'Object';\n        }\n        if (typeof val === 'string' && val.startsWith('*0x')) {\n            if (extra && MINode.valueOf(extra, 'arg') === '1')\n            {\n                ref = variableCreate(getNamespace('*(' + name), { arg: true });\n                val = '<args>';\n            }\n            else\n            {\n                ref = variableCreate(getNamespace('*' + name));\n                val = 'Object@' + val;\n            }\n        }\n        if (typeof val === 'string' && val.startsWith('<...>')) {\n            ref = variableCreate(getNamespace(name));\n            val = '...';\n        }\n        return {\n            name: name,\n            value: val,\n            variablesReference: ref\n        };\n    };\n\n    parseCommaValue = () => {\n        value = value.trim();\n        if (value[0] !== ',') {\n            return undefined;\n        }\n        value = value.substr(1).trim();\n        return parseValue();\n    };\n\n    parseCommaResult = (pushToStack: boolean = false) => {\n        value = value.trim();\n        if (value[0] !== ',') {\n            return undefined;\n        }\n        value = value.substr(1).trim();\n        return parseResult(pushToStack);\n    };\n\n    value = value.trim();\n    return parseValue();\n}\n","import { Breakpoint, IBackend, Stack, Variable, VariableObject, MIError } from '../backend';\nimport * as ChildProcess from 'child_process';\nimport { EventEmitter } from 'events';\nimport { parseMI, MINode } from '../mi_parse';\nimport * as linuxTerm from '../linux/console';\nimport * as net from 'net';\nimport * as fs from 'fs';\nimport { posix } from 'path';\nimport * as nativePath from 'path';\nconst path = posix;\n\nexport function escape(str: string) {\n    return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n}\n\nconst nonOutput = /^(?:\\d*|undefined)[\\*\\+\\=]|[\\~\\@\\&\\^]/;\nconst gdbMatch = /(?:\\d*|undefined)\\(gdb\\)/;\nconst numRegex = /\\d+/;\n\nfunction couldBeOutput(line: string) {\n    if (nonOutput.exec(line)) {\n        return false;\n    }\n    return true;\n}\n\nconst trace = false;\n\nexport class MI2 extends EventEmitter implements IBackend {\n    public printCalls: boolean;\n    public debugOutput: boolean;\n    public procEnv: any;\n    protected currentToken: number = 1;\n    protected handlers: { [index: number]: (info: MINode) => any } = {};\n    protected buffer: string;\n    protected errbuf: string;\n    protected process: ChildProcess.ChildProcess;\n    protected stream;\n    \n    constructor(public application: string, public args: string[]) {\n        super();\n    }\n\n    public connect(cwd: string, executable: string, commands: string[]): Thenable<any> {\n        if (!nativePath.isAbsolute(executable)) {\n            executable = nativePath.join(cwd, executable);\n        }\n            \n        return new Promise((resolve, reject) => {\n            const args = [...this.args, executable];\n            this.process = ChildProcess.spawn(this.application, args, { cwd: cwd, env: this.procEnv });\n            this.process.stdout.on('data', this.stdout.bind(this));\n            this.process.stderr.on('data', this.stderr.bind(this));\n            this.process.on('exit', (() => { this.emit('quit'); }).bind(this));\n            this.process.on('error', ((err) => { this.emit('launcherror', err); }).bind(this));\n\n            const asyncPromise = this.sendCommand('gdb-set target-async on', true);\n            const promises = commands.map((c) => this.sendCommand(c));\n            promises.push(asyncPromise);\n            \n            Promise.all(promises).then(() => {\n                this.emit('debug-ready');\n                resolve();\n            }, reject);\n        });\n    }\n\n    private stdout(data) {\n        if (trace) {\n            this.log('stderr', 'stdout: ' + data);\n        }\n        if (typeof data === 'string') {\n            this.buffer += data;\n        }\n        else {\n            this.buffer += data.toString('utf8');\n        }\n        const end = this.buffer.lastIndexOf('\\n');\n        if (end !== -1) {\n            this.onOutput(this.buffer.substr(0, end));\n            this.buffer = this.buffer.substr(end + 1);\n        }\n        if (this.buffer.length) {\n            if (this.onOutputPartial(this.buffer)) {\n                this.buffer = '';\n            }\n        }\n    }\n\n    private stderr(data) {\n        if (typeof data === 'string') {\n            this.errbuf += data;\n        }\n        else {\n            this.errbuf += data.toString('utf8');\n        }\n        const end = this.errbuf.lastIndexOf('\\n');\n        if (end !== -1) {\n            this.onOutputStderr(this.errbuf.substr(0, end));\n            this.errbuf = this.errbuf.substr(end + 1);\n        }\n        if (this.errbuf.length) {\n            this.logNoNewLine('stderr', this.errbuf);\n            this.errbuf = '';\n        }\n    }\n\n    private onOutputStderr(lines) {\n        lines = lines.split('\\n') as string[];\n        lines.forEach((line) => {\n            this.log('stderr', line);\n        });\n    }\n\n    private onOutputPartial(line) {\n        if (couldBeOutput(line)) {\n            this.logNoNewLine('stdout', line);\n            return true;\n        }\n        return false;\n    }\n\n    private onOutput(lines) {\n        lines = lines.split('\\n') as string[];\n        lines.forEach((line) => {\n            if (couldBeOutput(line)) {\n                if (!gdbMatch.exec(line)) {\n                    this.log('stdout', line);\n                }\n            }\n            else {\n                const parsed = parseMI(line);\n                if (this.debugOutput) {\n                    this.log('log', 'GDB -> App: ' + JSON.stringify(parsed));\n                }\n                let handled = false;\n                if (parsed.token !== undefined) {\n                    if (this.handlers[parsed.token]) {\n                        this.handlers[parsed.token](parsed);\n                        delete this.handlers[parsed.token];\n                        handled = true;\n                    }\n                }\n                if (!handled && parsed.resultRecords && parsed.resultRecords.resultClass === 'error') {\n                    this.log('stderr', parsed.result('msg') || line);\n                }\n                if (parsed.outOfBandRecord) {\n                    parsed.outOfBandRecord.forEach((record) => {\n                        if (record.isStream) {\n                            this.log(record.type, record.content);\n                        }\n                        else {\n                            if (record.type === 'exec') {\n                                this.emit('exec-async-output', parsed);\n                                if (record.asyncClass === 'running') {\n                                    this.emit('running', parsed);\n                                }\n                                else if (record.asyncClass === 'stopped') {\n                                    const reason = parsed.record('reason');\n                                    if (trace) {\n                                        this.log('stderr', 'stop: ' + reason);\n                                    }\n                                    if (reason === 'breakpoint-hit') {\n                                        this.emit('breakpoint', parsed);\n                                    }\n                                    else if (reason === 'end-stepping-range') {\n                                        this.emit('step-end', parsed);\n                                    }\n                                    else if (reason === 'function-finished') {\n                                        this.emit('step-out-end', parsed);\n                                    }\n                                    else if (reason === 'signal-received') {\n                                        this.emit('signal-stop', parsed);\n                                    }\n                                    else if (reason === 'exited-normally') {\n                                        this.emit('exited-normally', parsed);\n                                    }\n                                    else if (reason === 'exited') { // exit with error code != 0\n                                        this.log('stderr', 'Program exited with code ' + parsed.record('exit-code'));\n                                        this.emit('exited-normally', parsed);\n                                    }\n                                    else {\n                                        this.log('console', 'Not implemented stop reason (assuming exception): ' + reason);\n                                        this.emit('stopped', parsed);\n                                    }\n                                    this.emit('generic-stopped', parsed);\n                                }\n                                else {\n                                    this.log('log', JSON.stringify(parsed));\n                                }\n                            }\n                            else if (record.type === 'notify') {\n                                let tid: undefined | string;\n                                let gid: undefined | string;\n                                for (const item of record.output) {\n                                    if (item[0] === 'id') {\n                                        tid = item[1];\n                                    } else if (item[0] === 'group-id') {\n                                        gid = item[1];\n                                    }\n                                }\n                                if (record.asyncClass === 'thread-created') {\n                                    this.emit('thread-created', { threadId: parseInt(tid), threadGroupId: gid });\n                                }\n                                else if (record.asyncClass === 'thread-exited') {\n                                    this.emit('thread-exited', { threadId: parseInt(tid), threadGroupId: gid });\n                                }\n                                else if (record.asyncClass === 'thread-selected') {\n                                    this.emit('thread-selected', { threadId: parseInt(tid) });\n                                }\n                                else if (record.asyncClass === 'thread-group-exited') {\n                                    this.emit('thread-group-exited', { threadGroupId: tid });\n                                }\n                            }\n                        }\n                    });\n                    handled = true;\n                }\n                if (parsed.token === undefined && parsed.resultRecords === undefined && parsed.outOfBandRecord.length === 0) {\n                    handled = true;\n                }\n                if (!handled) {\n                    this.log('log', 'Unhandled: ' + JSON.stringify(parsed));\n                }\n            }\n        });\n    }\n\n    private tryKill() {\n        const proc = this.process;\n        try {\n            process.kill(-proc.pid);\n        }\n        catch (e) {\n            this.log('log', `kill failed for ${-proc.pid}` + e);\n        }\n    }\n    \n    public async stop() {\n        if (trace) {\n            this.log('stderr', 'stop');\n        }\n        const proc = this.process;\n        const to = setTimeout(() => { this.tryKill(); }, 1000);\n        this.process.on('exit', (code) => { clearTimeout(to); });\n        // Disconnect first. Not doing so and exiting will cause an unwanted detach if the\n        // program is in paused state\n        await this.sendCommand('target-disconnect');\n        this.sendRaw('-gdb-exit');\n    }\n\n    public async detach() {\n        if (trace) {\n            this.log('stderr', 'detach');\n        }\n        await this.sendCommand('target-detach');\n        this.stop();\n    }\n\n    public interrupt(arg: string = ''): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'interrupt ' + arg);\n        }\n        return new Promise((resolve, reject) => {\n            this.sendCommand(`exec-interrupt ${arg}`).then((info) => {\n                resolve(info.resultRecords.resultClass === 'done');\n            }, reject);\n        });\n    }\n\n    public continue(threadId: number): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'continue');\n        }\n        return new Promise((resolve, reject) => {\n            this.sendCommand(`exec-continue --thread ${threadId}`).then((info) => {\n                resolve(info.resultRecords.resultClass === 'running');\n            }, reject);\n        });\n    }\n\n    public next(threadId: number, instruction?: boolean): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'next');\n        }\n        return new Promise((resolve, reject) => {\n            const baseCmd = instruction ? 'exec-next-instruction' : 'exec-next';\n            this.sendCommand(`${baseCmd} --thread ${threadId}`).then((info) => {\n                resolve(info.resultRecords.resultClass === 'running');\n            }, reject);\n        });\n    }\n\n    public step(threadId: number, instruction?: boolean): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'step');\n        }\n        return new Promise((resolve, reject) => {\n            const baseCmd = instruction ? 'exec-step-instruction' : 'exec-step';\n            this.sendCommand(`${baseCmd} --thread ${threadId}`).then((info) => {\n                resolve(info.resultRecords.resultClass === 'running');\n            }, reject);\n        });\n    }\n\n    public stepOut(threadId: number): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'stepOut');\n        }\n        return new Promise((resolve, reject) => {\n            this.sendCommand(`exec-finish --thread ${threadId}`).then((info) => {\n                resolve(info.resultRecords.resultClass === 'running');\n            }, reject);\n        });\n    }\n\n    public restart(commands: string[]): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'restart');\n        }\n        return this._sendCommandSequence(commands);\n    }\n\n    public postStart(commands: string[]): Thenable<boolean> {\n        if (trace) {\n            this.log('stderr', 'post-start');\n        }\n        return this._sendCommandSequence(commands);\n    }\n\n    private _sendCommandSequence(commands: string[]): Thenable<boolean> {\n        return new Promise((resolve, reject) => {\n            const nextCommand = ((commands: string[]) => {\n                if (commands.length === 0) {\n                    resolve(true);\n                } else {\n                    const command = commands[0];\n                    this.sendCommand(command).then((r) => { nextCommand(commands.slice(1)); }, reject);\n                }\n            }).bind(this);\n\n            nextCommand(commands);\n        });\n    }\n\n    public changeVariable(name: string, rawValue: string): Thenable<any> {\n        if (trace) {\n            this.log('stderr', 'changeVariable');\n        }\n        return this.sendCommand('gdb-set var ' + name + '=' + rawValue);\n    }\n\n    public setBreakPointCondition(bkptNum, condition): Thenable<any> {\n        if (trace) {\n            this.log('stderr', 'setBreakPointCondition');\n        }\n        return this.sendCommand('break-condition ' + bkptNum + ' ' + condition);\n    }\n\n    public addBreakPoint(breakpoint: Breakpoint): Promise<Breakpoint> {\n        if (trace) {\n            this.log('stderr', 'addBreakPoint');\n        }\n        return new Promise((resolve, reject) => {\n            let location = '';\n            if (breakpoint.countCondition) {\n                if (breakpoint.countCondition[0] === '>') {\n                    location += '-i ' + numRegex.exec(breakpoint.countCondition.substr(1))[0] + ' ';\n                }\n                else {\n                    const match = numRegex.exec(breakpoint.countCondition)[0];\n                    if (match.length !== breakpoint.countCondition.length) {\n                        // tslint:disable-next-line:max-line-length\n                        this.log('stderr', 'Unsupported break count expression: \\'' + breakpoint.countCondition + '\\'. Only supports \\'X\\' for breaking once after X times or \\'>X\\' for ignoring the first X breaks');\n                        location += '-t ';\n                    }\n                    else if (parseInt(match) !== 0) {\n                        location += '-t -i ' + parseInt(match) + ' ';\n                         }\n                }\n            }\n\n            if (breakpoint.raw) {\n                location += '*' + escape(breakpoint.raw);\n            }\n            else {\n                location += '\"' + escape(breakpoint.file) + ':' + breakpoint.line + '\"';\n            }\n            \n            this.sendCommand(`break-insert ${location}`).then((result) => {\n                if (result.resultRecords.resultClass === 'done') {\n                    const bkptNum = parseInt(result.result('bkpt.number'));\n                    breakpoint.number = bkptNum;\n\n                    if (breakpoint.condition) {\n                        this.setBreakPointCondition(bkptNum, breakpoint.condition).then((result) => {\n                            if (result.resultRecords.resultClass === 'done') {\n                                resolve(breakpoint);\n                            } else {\n                                resolve(null);\n                            }\n                        }, reject);\n                    }\n                    else {\n                        resolve(breakpoint);\n                    }\n                }\n                else {\n                    resolve(null);\n                }\n            }, reject);\n        });\n    }\n\n    public removeBreakpoints(breakpoints: number[]): Promise<boolean> {\n        if (trace) {\n            this.log('stderr', 'removeBreakPoint');\n        }\n        return new Promise((resolve, reject) => {\n            if (breakpoints.length === 0) {\n                resolve(true);\n            }\n            else {\n                const cmd = 'break-delete ' + breakpoints.join(' ');\n                this.sendCommand(cmd).then((result) => {\n                    resolve(result.resultRecords.resultClass === 'done');\n                }, reject);\n            }\n        });\n    }\n\n    public getFrame(thread: number, frame: number): Thenable<Stack> {\n        return new Promise((resolve, reject) => {\n            const command = `stack-info-frame --thread ${thread} --frame ${frame}`;\n\n            this.sendCommand(command).then((result) => {\n                const frame = result.result('frame');\n                const level = MINode.valueOf(frame, 'level');\n                const addr = MINode.valueOf(frame, 'addr');\n                const func = MINode.valueOf(frame, 'func');\n                const file = MINode.valueOf(frame, 'file');\n                const fullname = MINode.valueOf(frame, 'fullname');\n                let line = 0;\n                const linestr = MINode.valueOf(frame, 'line');\n                if (linestr) { line = parseInt(linestr); }\n\n                resolve({\n                    address: addr,\n                    fileName: file,\n                    file: fullname,\n                    function: func,\n                    level: level,\n                    line: line\n                });\n            }, reject);\n        });\n    }\n\n    public getStack(threadId: number, startLevel: number, maxLevels: number): Thenable<Stack[]> {\n        if (trace) {\n            this.log('stderr', 'getStack');\n        }\n        return new Promise((resolve, reject) => {\n            this.sendCommand(`stack-list-frames --thread ${threadId} ${startLevel} ${maxLevels}`).then((result) => {\n                const stack = result.result('stack');\n                const ret: Stack[] = [];\n                stack.forEach((element) => {\n                    const level = MINode.valueOf(element, '@frame.level');\n                    const addr = MINode.valueOf(element, '@frame.addr');\n                    const func = MINode.valueOf(element, '@frame.func');\n                    const filename = MINode.valueOf(element, '@frame.file');\n                    const file = MINode.valueOf(element, '@frame.fullname');\n                    let line = 0;\n                    const lnstr = MINode.valueOf(element, '@frame.line');\n                    if (lnstr) { line = parseInt(lnstr); }\n                    const from = parseInt(MINode.valueOf(element, '@frame.from'));\n                    ret.push({\n                        address: addr,\n                        fileName: filename,\n                        file: file,\n                        function: func || from,\n                        level: level,\n                        line: line\n                    });\n                });\n                resolve(ret);\n            }, reject);\n        });\n    }\n\n    public async getStackVariables(thread: number, frame: number): Promise<Variable[]> {\n        if (trace) {\n            this.log('stderr', 'getStackVariables');\n        }\n\n        const result = await this.sendCommand(`stack-list-variables --thread ${thread} --frame ${frame} --simple-values`);\n        const variables = result.result('variables');\n        const ret: Variable[] = [];\n        for (const element of variables) {\n            const key = MINode.valueOf(element, 'name');\n            const value = MINode.valueOf(element, 'value');\n            const type = MINode.valueOf(element, 'type');\n            ret.push({\n                name: key,\n                valueStr: value,\n                type: type,\n                raw: element\n            });\n        }\n        return ret;\n    }\n\n    public examineMemory(from: number, length: number): Thenable<any> {\n        if (trace) {\n            this.log('stderr', 'examineMemory');\n        }\n        return new Promise((resolve, reject) => {\n            this.sendCommand('data-read-memory-bytes 0x' + from.toString(16) + ' ' + length).then((result) => {\n                resolve(result.result('memory[0].contents'));\n            }, reject);\n        });\n    }\n\n    // Pass negative threadId/frameId to specify no context or current context\n    public evalExpression(name: string, threadId: number, frameId: number): Thenable<any> {\n        if (trace) {\n            this.log('stderr', 'evalExpression');\n        }\n        return new Promise((resolve, reject) => {\n            const thFr = MI2.getThreadFrameStr(threadId, frameId);\n            this.sendCommand(`data-evaluate-expression ${thFr} ` + name).then((result) => {\n                resolve(result);\n            }, reject);\n        });\n    }\n\n    public static FORMAT_SPEC_MAP = {\n        b: 'binary',\n        d: 'decimal',\n        h: 'hexadecimal',\n        o: 'octal',\n        n: 'natural',\n        x: 'hexadecimal'\n    };\n\n    public async varCreate(expression: string, name: string = '-', scope: string = '@'): Promise<VariableObject> {\n        if (trace) {\n            this.log('stderr', 'varCreate');\n        }\n        let fmt = null;\n        expression = expression.trim();\n        if (/,[bdhonx]$/i.test(expression)) {\n            fmt = expression.substring(expression.length - 1).toLocaleLowerCase();\n            expression = expression.substring(0, expression.length - 2);\n        }\n        expression = expression.replace(/\"/g, '\\\\\"');\n\n        const createResp = await this.sendCommand(`var-create ${name} ${scope} \"${expression}\"`);\n        let overrideVal = null;\n        if (fmt && name !== '-') {\n            const formatResp = await this.sendCommand(`var-set-format ${name} ${MI2.FORMAT_SPEC_MAP[fmt]}`);\n            overrideVal = formatResp.result('value');\n        }\n\n        let result = createResp.result('');\n        if (overrideVal) {\n            result = result.map((r: string[]) => r[0] === 'value' ?  ['value', overrideVal] : r);\n        }\n        return new VariableObject(result);\n    }\n\n    public async varEvalExpression(name: string): Promise<MINode> {\n        if (trace) {\n            this.log('stderr', 'varEvalExpression');\n        }\n        return this.sendCommand(`var-evaluate-expression ${name}`);\n    }\n\n    public async varListChildren(name: string, flattenAnonymous: boolean): Promise<VariableObject[]> {\n        if (trace) {\n            this.log('stderr', 'varListChildren');\n        }\n        // TODO: add `from` and `to` arguments\n        const res = await this.sendCommand(`var-list-children --all-values ${name}`);\n        const children = res.result('children') || [];\n        const omg: VariableObject[] = [];\n        for (const item of children) {\n            const child = new VariableObject(item[1]);\n            if (flattenAnonymous && child.exp.startsWith('<anonymous ')) {\n                omg.push(... await this.varListChildren(child.name, flattenAnonymous));\n            } else {\n                omg.push(child);\n            }\n        }\n        return omg;\n    }\n\n    public static getThreadFrameStr(threadId: number, frameId: number): string {\n        const th = threadId > 0 ? `--thread ${threadId} ` : '';\n        const fr = frameId >= 0 ? `--frame ${frameId}` : '';\n        return th + fr;\n    }\n\n    // Pass negative threadId/frameId to specify no context or current context\n    public async varUpdate(name: string = '*', threadId: number, frameId: number): Promise<MINode> {\n        if (trace) {\n            this.log('stderr', 'varUpdate');\n        }\n        return this.sendCommand(`var-update ${MI2.getThreadFrameStr(threadId, frameId)} --all-values ${name}`);\n    }\n\n    // Pass negative threadId/frameId to specify no context or current context\n    public async varAssign(name: string, rawValue: string, threadId: number, frameId: number): Promise<MINode> {\n        if (trace) {\n            this.log('stderr', 'varAssign');\n        }\n        return this.sendCommand(`var-assign ${MI2.getThreadFrameStr(threadId, frameId)} ${name} ${rawValue}`);\n    }\n\n    public logNoNewLine(type: string, msg: string) {\n        this.emit('msg', type, msg);\n    }\n\n    public log(type: string, msg: string) {\n        this.emit('msg', type, msg[msg.length - 1] === '\\n' ? msg : (msg + '\\n'));\n    }\n\n    public sendUserInput(command: string): Thenable<any> {\n        if (command.startsWith('-')) {\n            return this.sendCommand(command.substr(1));\n        }\n        else {\n            return this.sendCommand(`interpreter-exec console \"${command}\"`);\n        }\n    }\n\n    public sendRaw(raw: string) {\n        if (this.printCalls || trace) {\n            this.log('log', raw);\n        }\n        if (raw.includes('undefined')) {\n            console.log(raw);\n        }\n        this.process.stdin.write(raw + '\\n');\n    }\n\n    public getCurrentToken(): number {\n        return this.currentToken;\n    }\n\n    public sendCommand(command: string, suppressFailure: boolean = false): Thenable<MINode> {\n        const sel = this.currentToken++;\n        return new Promise((resolve, reject) => {\n            this.handlers[sel] = (node: MINode) => {\n                if (node && node.resultRecords && node.resultRecords.resultClass === 'error') {\n                    if (suppressFailure) {\n                        this.log('stderr', `WARNING: Error executing command '${command}'`);\n                        resolve(node);\n                    }\n                    else {\n                        reject(new MIError(node.result('msg') || 'Internal error', command));\n                    }\n                }\n                else {\n                    resolve(node);\n                }\n            };\n            this.sendRaw(sel + '-' + command);\n        });\n    }\n\n    public isReady(): boolean {\n        return !!this.process;\n    }\n}\n","export interface MIInfo {\n    token: number;\n    outOfBandRecord: Array<{ isStream: boolean, type: string, asyncClass: string, output: Array<[string, any]>, content: string }>;\n    resultRecords: { resultClass: string, results: Array<[string, any]> };\n}\n\nconst octalMatch = /^[0-7]{3}/;\nfunction parseString(str: string): string {\n    const ret = Buffer.alloc(str.length * 4);\n    let bufIndex = 0;\n\n    if (str[0] !== '\"' || str[str.length - 1] !== '\"') {\n        throw new Error('Not a valid string');\n    }\n    str = str.slice(1, -1);\n    let escaped = false;\n    for (let i = 0; i < str.length; i++) {\n        if (escaped) {\n            let m;\n            if (str[i] === '\\\\') {\n                bufIndex += ret.write('\\\\', bufIndex);\n            }\n            else if (str[i] === '\"') {\n                bufIndex += ret.write('\"', bufIndex);\n            }\n            else if (str[i] === '\\'') {\n                bufIndex += ret.write('\\'', bufIndex);\n            }\n            else if (str[i] === 'n') {\n                bufIndex += ret.write('\\n', bufIndex);\n            }\n            else if (str[i] === 'r') {\n                bufIndex += ret.write('\\r', bufIndex);\n            }\n            else if (str[i] === 't') {\n                bufIndex += ret.write('\\t', bufIndex);\n            }\n            else if (str[i] === 'b') {\n                bufIndex += ret.write('\\b', bufIndex);\n            }\n            else if (str[i] === 'f') {\n                bufIndex += ret.write('\\f', bufIndex);\n            }\n            else if (str[i] === 'v') {\n                bufIndex += ret.write('\\v', bufIndex);\n            }\n            else if (str[i] === '0') {\n                bufIndex += ret.write('\\0', bufIndex);\n            }\n            else if (m = octalMatch.exec(str.substr(i))) {\n                ret.writeUInt8(parseInt(m[0], 8), bufIndex++);\n                i += 2;\n            }\n            else {\n                bufIndex += ret.write(str[i], bufIndex);\n            }\n            escaped = false;\n        } else {\n            if (str[i] === '\\\\') {\n                escaped = true;\n            }\n            else if (str[i] === '\"') {\n                throw new Error('Not a valid string');\n            }\n            else {\n                bufIndex += ret.write(str[i], bufIndex);\n            }\n        }\n    }\n    return ret.slice(0, bufIndex).toString('utf8');\n}\n\nexport class MINode implements MIInfo {\n    public token: number;\n    public outOfBandRecord: Array<{ isStream: boolean, type: string, asyncClass: string, output: Array<[string, any]>, content: string }>;\n    public resultRecords: { resultClass: string, results: Array<[string, any]> };\n\n    public static valueOf(start: any, path: string): any {\n        if (!start) {\n            return undefined;\n        }\n        const pathRegex = /^\\.?([a-zA-Z_\\-][a-zA-Z0-9_\\-]*)/;\n        const indexRegex = /^\\[(\\d+)\\](?:$|\\.)/;\n        path = path.trim();\n        if (!path) { return start; }\n        let current = start;\n        do {\n            let target = pathRegex.exec(path);\n            if (target) {\n                path = path.substr(target[0].length);\n                if (current.length && typeof current !== 'string') {\n                    const found = [];\n                    for (const element of current) {\n                        if (element[0] === target[1]) {\n                            found.push(element[1]);\n                        }\n                    }\n                    if (found.length > 1) {\n                        current = found;\n                    }\n                    else if (found.length === 1) {\n                        current = found[0];\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return undefined;\n                }\n            }\n            else if (path[0] === '@') {\n                current = [current];\n                path = path.substr(1);\n            }\n            else {\n                target = indexRegex.exec(path);\n                if (target) {\n                    path = path.substr(target[0].length);\n                    const i = parseInt(target[1]);\n                    if (current.length && typeof current !== 'string' && i >= 0 && i < current.length) {\n                        current = current[i];\n                    }\n                    else if (i === 0) {\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return undefined;\n                }\n            }\n            path = path.trim();\n        } while (path);\n        return current;\n    }\n\n    constructor(\n        token: number,\n        info: Array<{ isStream: boolean, type: string, asyncClass: string, output: Array<[string, any]>, content: string }>,\n        result: { resultClass: string, results: Array<[string, any]> }\n    ) {\n        this.token = token;\n        this.outOfBandRecord = info;\n        this.resultRecords = result;\n    }\n\n    public record(path: string): any {\n        if (!this.outOfBandRecord) {\n            return undefined;\n        }\n        return MINode.valueOf(this.outOfBandRecord[0].output, path);\n    }\n\n    public result(path: string): any {\n        if (!this.resultRecords) {\n            return undefined;\n        }\n        return MINode.valueOf(this.resultRecords.results, path);\n    }\n}\n\nconst tokenRegex = /^\\d+/;\nconst outOfBandRecordRegex = /^(?:(\\d*|undefined)([\\*\\+\\=])|([\\~\\@\\&]))/;\nconst resultRecordRegex = /^(\\d*)\\^(done|running|connected|error|exit)/;\nconst newlineRegex = /^\\r\\n?/;\nconst endRegex = /^\\(gdb\\)\\r\\n?/;\nconst variableRegex = /^([a-zA-Z_\\-][a-zA-Z0-9_\\-]*)/;\nconst asyncClassRegex = /^(.*?),/;\n\nexport function parseMI(output: string): MINode {\n    /*\n        output ==>\n            (\n                exec-async-output     = [ token ] \"*\" (\"stopped\" | others) ( \",\" variable \"=\" (const | tuple | list) )* \\n\n                status-async-output   = [ token ] \"+\" (\"stopped\" | others) ( \",\" variable \"=\" (const | tuple | list) )* \\n\n                notify-async-output   = [ token ] \"=\" (\"stopped\" | others) ( \",\" variable \"=\" (const | tuple | list) )* \\n\n                console-stream-output = \"~\" c-string \\n\n                target-stream-output  = \"@\" c-string \\n\n                log-stream-output     = \"&\" c-string \\n\n            )*\n            [\n                [ token ] \"^\" (\"done\" | \"running\" | \"connected\" | \"error\" | \"exit\") ( \",\" variable \"=\" (const | tuple | list) )* \\n\n            ]\n            \"(gdb)\" \\n\n    */\n\n    let token;\n    const outOfBandRecord = [];\n    let resultRecords;\n\n    const asyncRecordType = {\n        '*': 'exec',\n        '+': 'status',\n        '=': 'notify'\n    };\n    const streamRecordType = {\n        '~': 'console',\n        '@': 'target',\n        '&': 'log'\n    };\n\n    const parseCString = () => {\n        if (output[0] !== '\"') {\n            return '';\n        }\n        let stringEnd = 1;\n        let inString = true;\n        let remaining = output.substr(1);\n        let escaped = false;\n        while (inString) {\n            if (escaped) {\n                escaped = false;\n            }\n            else if (remaining[0] === '\\\\') {\n                escaped = true;\n            }\n            else if (remaining[0] === '\"') {\n                inString = false;\n            }\n\n            remaining = remaining.substr(1);\n            stringEnd++;\n        }\n        let str;\n        try {\n            str = parseString(output.substr(0, stringEnd));\n        }\n        catch (e) {\n            str = output.substr(0, stringEnd);\n        }\n        output = output.substr(stringEnd);\n        return str;\n    };\n\n    let parseValue;\n    let parseCommaResult;\n    let parseCommaValue;\n    let parseResult;\n\n    const parseTupleOrList = () => {\n        if (output[0] !== '{' && output[0] !== '[') {\n            return undefined;\n        }\n        const oldContent = output;\n        const canBeValueList = output[0] === '[';\n        output = output.substr(1);\n        if (output[0] === '}' || output[0] === ']') {\n            output = output.substr(1);\n            return [];\n        }\n        if (canBeValueList) {\n            let value = parseValue();\n            if (value) { // is value list\n                const values = [];\n                values.push(value);\n                const remaining = output;\n                while ((value = parseCommaValue()) !== undefined) {\n                    values.push(value);\n                }\n                output = output.substr(1); // ]\n                return values;\n            }\n        }\n        let result = parseResult();\n        if (result) {\n            const results = [];\n            results.push(result);\n            while (result = parseCommaResult()) {\n                results.push(result);\n            }\n            output = output.substr(1); // }\n            return results;\n        }\n        output = (canBeValueList ? '[' : '{') + output;\n        return undefined;\n    };\n\n    parseValue = () => {\n        if (output[0] === '\"') {\n            return parseCString();\n        }\n        else if (output[0] === '{' || output[0] === '[') {\n            return parseTupleOrList();\n        }\n        else {\n            return undefined;\n        }\n    };\n\n    parseResult = () => {\n        const variableMatch = variableRegex.exec(output);\n        if (!variableMatch) {\n            return undefined;\n        }\n        output = output.substr(variableMatch[0].length + 1);\n        const variable = variableMatch[1];\n        return [variable, parseValue()];\n    };\n\n    parseCommaValue = () => {\n        if (output[0] !== ',') {\n            return undefined;\n        }\n        output = output.substr(1);\n        return parseValue();\n    };\n\n    parseCommaResult = () => {\n        if (output[0] !== ',') {\n            return undefined;\n        }\n        output = output.substr(1);\n        return parseResult();\n    };\n\n    let match;\n\n    while (match = outOfBandRecordRegex.exec(output)) {\n        output = output.substr(match[0].length);\n        if (match[1] && token === undefined && match[1] !== 'undefined') {\n            token = parseInt(match[1]);\n        }\n\n        if (match[2]) {\n            const classMatch = asyncClassRegex.exec(output);\n            output = output.substr(classMatch[1].length);\n            const asyncRecord = {\n                isStream: false,\n                type: asyncRecordType[match[2]],\n                asyncClass: classMatch[1],\n                output: []\n            };\n            let result;\n            while (result = parseCommaResult()) {\n                asyncRecord.output.push(result);\n            }\n            outOfBandRecord.push(asyncRecord);\n        }\n        else if (match[3]) {\n            const streamRecord = {\n                isStream: true,\n                type: streamRecordType[match[3]],\n                content: parseCString()\n            };\n            outOfBandRecord.push(streamRecord);\n        }\n\n        output = output.replace(newlineRegex, '');\n    }\n\n    if (match = resultRecordRegex.exec(output)) {\n        output = output.substr(match[0].length);\n        if (match[1] && token === undefined) {\n            token = parseInt(match[1]);\n        }\n        resultRecords = {\n            resultClass: match[2],\n            results: []\n        };\n        let result;\n        while (result = parseCommaResult()) {\n            resultRecords.results.push(result);\n        }\n\n        output = output.replace(newlineRegex, '');\n    }\n\n    return new MINode(token, outOfBandRecord as any || [], resultRecords);\n}\n","import * as ChildProcess from 'child_process';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\nimport { setTimeout } from 'timers';\nimport { TcpPortScanner } from '../tcpportscanner';\n\nexport class GDBServer extends EventEmitter {\n    private process: any;\n    private outBuffer: string = '';\n    private errBuffer: string = '';\n    private initResolve: (result: boolean) => void;\n    private initReject: (error: any) => void;\n    public static readonly SERVER_TIMEOUT = 10000;\n    public static readonly LOCALHOST = '0.0.0.0';\n\n    constructor(\n        private cwd: string, private application: string, private args: string[],\n        private initMatch: RegExp, private port: number|undefined) {\n        super();\n    }\n\n    public init(): Thenable<any> {\n        return new Promise((resolve, reject) => {\n            if (this.application !== null) {\n                this.initResolve = resolve;\n                this.initReject = reject;\n\n                this.process = ChildProcess.spawn(this.application, this.args, { cwd: this.cwd });\n                this.process.stdout.on('data', this.onStdout.bind(this));\n                this.process.stderr.on('data', this.onStderr.bind(this));\n                this.process.on('exit', this.onExit.bind(this));\n                this.process.on('error', this.onError.bind(this));\n\n                if ((typeof this.port === 'number') && (this.port > 0)) {\n                    // We monitor for port getting into Listening mode. This is a backup for initMatch\n                    // TcpPortScanner.waitForPortOpenOSUtil(this.port, 250, GDBServer.SERVER_TIMEOUT - 1000, true, false)\n                    TcpPortScanner.waitForPortOpen(this.port, GDBServer.LOCALHOST, true, 50, GDBServer.SERVER_TIMEOUT - 1000)\n                    .then(() => {\n                        if (this.initResolve) {\n                            this.initResolve(true);\n                            this.initReject = null;\n                            this.initResolve = null;\n                        }\n                    }).catch((e) => {\n                        // We could reject here if it is truly a timeout and not something else, caller already has a timeout\n                        // ALso, waitForPortOpenOSUtil is not bullet proof if it fails, we don't know why because of differences\n                        // in OSes, upgrades, etc. But, when it works, we know for sure it worked.\n                    });\n                }\n\n                if (this.application.indexOf('st-util') !== -1 && os.platform() === 'win32') {\n                    // For some reason we are not able to capture the st-util output on Windows\n                    // For now assume that it will launch properly within 1/2 second and resolve the init\n                    setTimeout(() => {\n                        if (this.initResolve) {\n                            this.initResolve(true);\n                            this.initReject = null;\n                            this.initResolve = null;\n                        }\n                    }, 500);\n                }\n                if (this.initMatch == null) {\n                    // If there is no init match string (e.g. QEMU) assume launch in 1/2 second and resolve\n                    setTimeout(() => {\n                        if (this.initResolve) {\n                            this.initResolve(true);\n                            this.initReject = null;\n                            this.initResolve = null;\n                        }\n                    }, 1000);\n                }\n            }\n            else { // For servers like BMP that are always running directly on the probe\n                resolve();\n            }\n        });\n    }\n\n    public exit(): void {\n        if (this.process) {\n            this.process.kill();\n            this.process = null;\n        }\n    }\n\n    private onExit(code, signal) {\n        this.emit('exit', code, signal);\n    }\n\n    private onError(err) {\n        if (this.initReject) {\n            this.initReject(err);\n            this.initReject = null;\n            this.initResolve = null;\n        }\n\n        this.emit('launcherror', err);\n    }\n\n    private onStdout(data) {\n        if (typeof data === 'string') { this.outBuffer += data; }\n        else { this.outBuffer += data.toString('utf8'); }\n\n        if (this.initResolve && this.initMatch.test(this.outBuffer)) {\n            // console.log(`********* Got initmatch on stdout ${Date.now() - this.startTime}ms`);\n            this.initResolve(true);\n            this.initResolve = null;\n            this.initReject = null;\n        }\n\n        const end = this.outBuffer.lastIndexOf('\\n');\n        if (end !== -1) {\n            this.emit('output', this.outBuffer.substring(0, end));\n            this.outBuffer = this.outBuffer.substring(end + 1);\n        }\n    }\n\n    private onStderr(data) {\n        if (typeof data === 'string') { this.errBuffer += data; }\n        else { this.errBuffer += data.toString('utf8'); }\n\n        if (this.initResolve && this.initMatch.test(this.errBuffer)) {\n            // console.log(`********* Got initmatch on stderr ${Date.now() - this.startTime}ms`);\n            this.initResolve(true);\n            this.initResolve = null;\n            this.initReject = null;\n        }\n\n        const end = this.errBuffer.lastIndexOf('\\n');\n        if (end !== -1) {\n            this.emit('output', this.errBuffer.substring(0, end));\n            this.errBuffer = this.errBuffer.substring(end + 1);\n        }\n    }\n}\n","import * as childProcess from 'child_process';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport { SymbolType, SymbolScope, SymbolInformation } from '../symbols';\n\nconst SYMBOL_REGEX = /^([0-9a-f]{8})\\s([lg\\ !])([w\\ ])([C\\ ])([W\\ ])([I\\ ])([dD\\ ])([FfO\\ ])\\s([^\\s]+)\\s([0-9a-f]+)\\s(.*)$/;\n\nconst TYPE_MAP: { [id: string]: SymbolType } = {\n    'F': SymbolType.Function,\n    'f': SymbolType.File,\n    'O': SymbolType.Object,\n    ' ': SymbolType.Normal\n};\n\nconst SCOPE_MAP: { [id: string]: SymbolScope } = {\n    'l': SymbolScope.Local,\n    'g': SymbolScope.Global,\n    ' ': SymbolScope.Neither,\n    '!': SymbolScope.Both\n};\n\nexport class SymbolTable {\n    private allSymbols: SymbolInformation[] = [];\n\n    // The following are caches that are either created on demand or on symbol load. Helps performance\n    // on large executables since most of our searches are linear. Or, to avoid a search entirely if possible\n    // Case sensitivity for path names is an issue: We follow just what gcc records so inherently case-sensitive\n    // or case-preserving. We don't try to re-interpret/massage those path-names. Maybe later\n    //\n    // TODO: Support for source-maps for both gdb and for symbol/file lookups\n    private staticsByFile: {[file: string]: SymbolInformation[]} = {};\n    private globalVars: SymbolInformation[] = [];\n    private globalFuncs: SymbolInformation[] = [];\n    private staticVars: SymbolInformation[] = [];\n    private staticFuncs: SymbolInformation[] = [];\n    private fileMap: {[key: string]: string[]} = {};        // basename of a file to a potential list of aliases we found\n\n    constructor(private toolchainPath: string, private toolchainPrefix: string, private executable: string, private demangle: boolean) {\n    }\n\n    public loadSymbols() {\n        try {\n            let objdumpExePath = os.platform() !== 'win32' ? `${this.toolchainPrefix}-objdump` : `${this.toolchainPrefix}-objdump.exe`;\n            if (this.toolchainPath) {\n                objdumpExePath = path.normalize(path.join(this.toolchainPath, objdumpExePath));\n            }\n\n            const options = ['--syms', '-Wi'];\n            if (this.demangle) {\n                options.push('-C');\n            }\n            const objdump = childProcess.spawnSync(objdumpExePath, [...options, this.executable]);\n            const output = objdump.stdout.toString();\n            const lines = output.split(/[\\r\\n]+/g);\n\n            this.collectCompilationUnits(lines);\n\n            let currentFile: string = null;\n            let currentMapped: string[] = null;\n\n            for (const line of lines) {\n                const match = line.match(SYMBOL_REGEX);\n                if (match) {\n                    if (match[7] === 'd' && match[8] === 'f') {\n                        if (match[11]) {\n                            currentFile = match[11].trim();\n                            currentMapped = this.addToFileMap(currentFile.split('/').pop(), currentFile);\n                        } else {\n                            // This can happen with C++. Inline and template methods/variables/functions/etc. are listed with\n                            // an empty file association. So, symbols after this line can come from multiple compilation\n                            // units with no clear owner. These can be locals, globals or other.\n                            currentFile = null;\n                            currentMapped = null;\n                        }\n                    }\n                    const type = TYPE_MAP[match[8]];\n                    const scope = SCOPE_MAP[match[2]];\n                    let name = match[11].trim();\n                    let hidden = false;\n\n                    if (name.startsWith('.hidden')) {\n                        name = name.substring(7).trim();\n                        hidden = true;\n                    }\n\n                    const sym: SymbolInformation = {\n                        address: parseInt(match[1], 16),\n                        type: type,\n                        origScope: scope,\n                        scope: scope,\n                        section: match[9].trim(),\n                        length: parseInt(match[10], 16),\n                        name: name,\n                        file: scope === SymbolScope.Local ? currentFile : null,\n                        fileMaps: scope === SymbolScope.Local ?  currentMapped : [],\n                        instructions: null,\n                        hidden: hidden\n                    };\n\n                    this.allSymbols.push(sym);\n                    if (scope !== SymbolScope.Local) {\n                        if (type === SymbolType.Function) {\n                            sym.scope = SymbolScope.Global;\n                            this.globalFuncs.push(sym);\n                        } else if (type === SymbolType.Object) {\n                            if (scope === SymbolScope.Global) {\n                                this.globalVars.push(sym);\n                            } else {\n                                // These fail gdb create-vars. So ignoring them. C++ generates them\n                                console.log('SymbolTable: ignoring non local object: ' + name);\n                            }\n                        }\n                    } else if (currentFile) {\n                        // Yes, you can have statics with no file association in C++. They are neither\n                        // truly global or local. Some can be considered but not sure how to filter\n                        if (type === SymbolType.Object) {\n                            this.staticVars.push(sym);\n                        } else if (type === SymbolType.Function) {\n                            this.staticFuncs.push(sym);\n                        }\n                    } else if (type === SymbolType.Function) {\n                        sym.scope = SymbolScope.Global;\n                        this.globalFuncs.push(sym);\n                    } else if (type === SymbolType.Object) {\n                        // We are currently ignoring Local objects with no file association for objects.\n                        // Revisit later with care and decide how to classify them\n                        console.log('SymbolTable: ignoring local object: ' + name);\n                    }\n                }\n            }\n        }\n        catch (e) { }\n    }\n\n    private addToFileMap(key: string, newMap: string): string[] {\n        const value = this.fileMap[key] || [];\n        if (value.indexOf(newMap) === -1) {\n            value.push(newMap);\n        }\n        this.fileMap[key] = value;\n        return value;\n    }\n\n    private collectCompilationUnits(lines: string[]): void {\n        // Loop over and collect the set of compilation units. This is where true file names are stored\n        // Most file names listed by objdump are just the base-name and I am not sure exactly how the base\n        // file-name is supposed to map to an actual compilation unit. Esp. when duplicates exist. This only\n        // matters for static variables/functions\n        let isCompileUnit = false;\n        let curName = '';\n        let curDir = '';\n        let curSimpleName = '';\n        const cUnitRexp = /^ <0>.*Abbrev Number.*\\(DW_TAG_compile_unit\\)/;\n        for (const line of lines) {\n            if (cUnitRexp.test(line)) {\n                isCompileUnit = true;\n            }\n            else if (isCompileUnit) {\n                const match = line.match(/.*DW_AT_([^\\s]*).*\\)\\:\\s(.*)/);\n                if (match) {\n                    if (match[1] === 'name') {\n                        curName = match[2];\n                        curSimpleName = curName.split('/').pop();\n                        this.addToFileMap(curSimpleName, curSimpleName);\n                        this.addToFileMap(curSimpleName, curName);\n                    }\n                    else if (match[1] === 'comp_dir') {\n                        curDir = match[2];\n                        if (curName !== '') {\n                            this.addToFileMap(curSimpleName, curDir + '/' + curName);\n                        }\n                    }\n                } else if (line.startsWith(' <')) {\n                    isCompileUnit = false;\n                    curSimpleName = curName = curDir = '';\n                }\n            }\n        }\n    }\n\n    public getFunctionAtAddress(address: number): SymbolInformation {\n        return this.allSymbols.find((s) => s.type === SymbolType.Function && s.address <= address && (s.address + s.length) > address);\n    }\n\n    public getFunctionSymbols(): SymbolInformation[] {\n        return this.allSymbols.filter((s) => s.type === SymbolType.Function);\n    }\n\n    public getGlobalVariables(): SymbolInformation[] {\n        return this.globalVars;\n    }\n\n    public getStaticVariables(file: string): SymbolInformation[] {\n        let ret = this.staticsByFile[file];\n        if (!ret) {\n            ret = [];\n            for (const s of this.staticVars) {\n                if (s.fileMaps.indexOf(file) !== -1) {\n                    ret.push(s);\n                }\n            }\n            this.staticsByFile[file] = ret;\n        }\n        return ret;\n    }\n\n    public getFunctionByName(name: string, file?: string): SymbolInformation {\n        if (file) {      // Try to find static function first\n            for (const s of this.staticFuncs) {     // Try exact matches first (maybe not needed)\n                if ((s.name === name) && (s.file === file)) {\n                    return s;\n                }\n            }\n            for (const s of this.staticFuncs) {     // Try any match\n                if ((s.name === name) && (s.fileMaps.indexOf(file) !== -1)) {\n                    return s;\n                }\n            }\n        }\n\n        // Fall back to global scope\n        return this.globalFuncs.find((s) => s.name === name);\n    }\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { ConfigurationArguments, GDBServerController, SWOConfigureEvent, calculatePortMask } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nexport class BMPServerController extends EventEmitter implements GDBServerController {\n    public readonly name: string = 'BMP';\n    public readonly portsNeeded: string[] = [];\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n\n    public initCommands(): string[] {\n        const commands: string[] = [\n            `target-select extended-remote ${this.args.BMPGDBSerialPort}`\n        ];\n\n        if (this.args.powerOverBMP === 'enable') {\n            commands.push('interpreter-exec console \"monitor tpwr enable\"');\n            // sleep for 100 ms. MCU need some time to boot up after power up\n            commands.push('interpreter-exec console \"shell sleep 0.1\"');\n        }\n        else if (this.args.powerOverBMP === 'disable'){\n            commands.push('interpreter-exec console \"monitor tpwr disable\"');\n        }\n        else{\n            // keep last power state (do nothing)\n        }\n\n        if (this.args.interface === 'jtag') {\n            commands.push('interpreter-exec console \"monitor jtag_scan\"');\n        }\n        else {\n            commands.push('interpreter-exec console \"monitor swdp_scan\"');\n        }\n\n        commands.push(\n            `interpreter-exec console \"attach ${this.args.targetId}\"`,\n            'interpreter-exec console \"set mem inaccessible-by-default off\"'\n        );\n\n        return commands;\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'target-download',\n            'interpreter-exec console \"SoftwareReset\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"SoftwareReset\"'\n        ];\n        return commands;\n    }\n\n    public swoCommands(): string[]{\n        const commands = [];\n        if (this.args.swoConfig.enabled) {\n            const swocommands = this.SWOConfigurationCommands();\n            commands.push(...swocommands);\n        }\n        return commands;\n    }\n\n    private SWOConfigurationCommands(): string[] {\n        const portMask = '0x' + calculatePortMask(this.args.swoConfig.decoders).toString(16);\n        const swoFrequency = this.args.swoConfig.swoFrequency;\n        const cpuFrequency = this.args.swoConfig.cpuFrequency;\n\n        const ratio = Math.floor(cpuFrequency / swoFrequency) - 1;\n        \n        const commands: string[] = [];\n\n        commands.push(\n            'EnableITMAccess',\n            `BaseSWOSetup ${ratio}`,\n            'SetITMId 1',\n            'ITMDWTTransferEnable',\n            'DisableITMPorts 0xFFFFFFFF',\n            `EnableITMPorts ${portMask}`,\n            'EnableDWTSync',\n            'ITMSyncEnable',\n            'ITMGlobalEnable'\n        );\n\n        commands.push(this.args.swoConfig.profile ? 'EnablePCSample' : 'DisablePCSample');\n        \n        return commands.map((c) => `interpreter-exec console \"${c}\"`);\n    }\n\n    public serverExecutable(): string {\n        return null;\n    }\n\n    public serverArguments(): string[] {\n        return [];\n    }\n\n    public initMatch(): RegExp {\n        return null;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {\n        if (this.args.swoConfig.enabled && this.args.swoConfig.source !== 'probe') {\n            this.emit('event', new SWOConfigureEvent({ type: 'serial', device: this.args.swoConfig.source, baudRate: this.args.swoConfig.swoFrequency }));\n        }\n    }\n    \n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { Event } from 'vscode-debugadapter';\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { EventEmitter } from 'events';\n\nexport enum NumberFormat {\n    Auto = 0,\n    Hexidecimal,\n    Decimal,\n    Binary\n}\n\nexport interface NodeSetting {\n    node: string;\n    expanded?: boolean;\n    format?: NumberFormat;\n}\n\nexport class AdapterOutputEvent extends Event implements DebugProtocol.Event {\n    public body: {\n        type: string,\n        content: string\n    };\n    public event: string;\n\n    constructor(content: string, type: string) {\n        super('adapter-output', { content: content, type: type });\n    }\n}\n\nexport class StoppedEvent extends Event implements DebugProtocol.Event {\n    public readonly body: {\n        reason: string;\n        description?: string;\n        threadId?: number;\n        text?: string;\n        allThreadsStopped?: boolean;\n    };\n\n    constructor(reason: string, threadId: number, allThreadsStopped: boolean) {\n        super('stopped', {\n            reason: reason,\n            threadId: threadId,\n            allThreadsStopped: allThreadsStopped\n        });\n    }\n}\n\nexport class SWOConfigureEvent extends Event implements DebugProtocol.Event {\n    public body: {\n        type: string,\n        port: number,\n        path: string\n    };\n    public event: string;\n\n    constructor(params: any) {\n        const body = params;\n        super('swo-configure', body);\n    }\n}\n\nexport class TelemetryEvent extends Event implements DebugProtocol.Event {\n    public body: {\n        category: string,\n        action: string,\n        label: string,\n        parameters: { [key: string]: string }\n    };\n    public event: string;\n\n    constructor(category: string, action: string, label: string, parameters: { [key: string]: string } = {}) {\n        const body = { category: category, action: action, label: label, parameters: parameters };\n        super('record-event', body);\n    }\n}\n\nexport interface SWOConfiguration {\n    enabled: boolean;\n    cpuFrequency: number;\n    swoFrequency: number;\n    decoders: any[];\n    profile: boolean;\n    source: string;\n}\n\nexport interface ConfigurationArguments extends DebugProtocol.LaunchRequestArguments {\n    toolchainPath: string;\n    toolchainPrefix: string;\n    executable: string;\n    servertype: string;\n    serverpath: string;\n    serverArgs: string[];\n    device: string;\n    debuggerArgs: string[];\n    preLaunchCommands: string[];\n    postLaunchCommands: string[];\n    overrideLaunchCommands: string[];\n    preAttachCommands: string[];\n    postAttachCommands: string[];\n    overrideAttachCommands: string[];\n    preRestartCommands: string[];\n    postRestartCommands: string[];\n    overrideRestartCommands: string[];\n    postStartSessionCommands: string[];\n    postRestartSessionCommands: string[];\n    overrideGDBServerStartedRegex: string;\n    svdFile: string;\n    swoConfig: SWOConfiguration;\n    graphConfig: any[];\n    showDevDebugOutput: boolean;\n    cwd: string;\n    extensionPath: string;\n    rtos: string;\n    interface: string;\n    targetId: string | number;\n    cmsisPack: string;\n    runToMain: boolean;\n    flattenAnonymous: boolean;\n    registerUseNaturalFormat: boolean;\n\n    // C++ specific\n    demangle: boolean;\n\n    // J-Link Specific\n    ipAddress: string;\n    serialNumber: string;\n    jlinkscript: string;\n    \n    // OpenOCD Specific\n    configFiles: string[];\n    searchDir: string[];\n    openOCDLaunchCommands: string[];\n    openOCDPreConfigLaunchCommands: string[];\n\n    // PyOCD Specific\n    boardId: string;\n    \n    // StUtil Specific\n    v1: boolean;\n\n    // BMP Specific\n    BMPGDBSerialPort: string;\n    powerOverBMP: string;\n\n    // QEMU Specific\n    cpu: string;\n    machine: string;\n\n    // External \n    gdbTarget: string;\n\n    // Hidden settings - These settings are for advanced configuration and are not exposed in the package.json file\n    gdbpath: string;\n}\n\nexport interface DisassemblyInstruction {\n    address: string;\n    functionName: string;\n    offset: number;\n    instruction: string;\n    opcodes: string;\n}\n\nexport interface GDBServerController extends EventEmitter {\n    portsNeeded: string[];\n    name: string;\n\n    setPorts(ports: { [name: string]: number }): void;\n    setArguments(args: ConfigurationArguments): void;\n\n    customRequest(command: string, response: DebugProtocol.Response, args: any): boolean;\n    initCommands(): string[];\n    launchCommands(): string[];\n    attachCommands(): string[];\n    restartCommands(): string[];\n    swoCommands(): string[];\n    serverExecutable(): string;\n    serverArguments(): string[];\n    initMatch(): RegExp;\n    serverLaunchStarted(): void;\n    serverLaunchCompleted(): void;\n    debuggerLaunchStarted(): void;\n    debuggerLaunchCompleted(): void;\n}\n\nexport function calculatePortMask(decoders: any[]) {\n    if (!decoders) { return 0; }\n\n    let mask: number = 0;\n    decoders.forEach((d) => {\n        if (d.type === 'advanced') {\n            for (const port of d.ports) {\n                mask = (mask | (1 << port)) >>> 0;\n            }\n        }\n        else {\n            mask = (mask | (1 << d.port)) >>> 0;\n        }\n    });\n    return mask;\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { ConfigurationArguments, GDBServerController, SWOConfigureEvent, calculatePortMask } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nexport class ExternalServerController extends EventEmitter implements GDBServerController {\n    public readonly name: string = 'External';\n    public readonly portsNeeded: string[] = [];\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n\n    public initCommands(): string[] {\n        const target = this.args.gdbTarget;\n        return [\n            `target-select extended-remote ${target}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor reset halt\"',\n            'target-download',\n            'interpreter-exec console \"monitor reset halt\"',\n            'enable-pretty-printing'\n        ];\n\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'enable-pretty-printing'\n        ];\n\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        return [];\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor reset halt\"'\n        ];\n\n        return commands;\n    }\n\n    public serverExecutable(): string {\n        return null;\n    }\n\n    public serverArguments(): string[] {\n        return [];\n    }\n\n    public initMatch(): RegExp {\n        return null;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {}\n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","export function hexFormat(value: number, padding: number = 8, includePrefix: boolean = true): string {\n    let base = value.toString(16);\n    while (base.length < padding) { base = '0' + base; }\n    return includePrefix ? '0x' + base : base;\n}\n\nexport function binaryFormat(value: number, padding: number = 0, includePrefix: boolean = true, group: boolean = false): string {\n    let base = (value >>> 0).toString(2);\n    while (base.length < padding) { base = '0' + base; }\n\n    if (group) {\n        const nibRem = 4 - (base.length % 4);\n        for (let i = 0; i < nibRem; i++) { base = '0' + base; }\n        const groups = base.match(/[01]{4}/g);\n        base = groups.join(' ');\n\n        base = base.substring(nibRem);\n    }\n\n    return includePrefix ? '0b' + base : base;\n}\n\nexport function createMask(offset: number, width: number) {\n    let r = 0;\n    const a = offset;\n    const b = offset + width - 1;\n    for (let i = a; i <= b; i++) { r = (r | (1 << i)) >>> 0; }\n    return r;\n}\n\nexport function extractBits(value: number, offset: number, width: number) {\n    const mask = createMask(offset, width);\n    const bvalue = ((value & mask) >>> offset) >>> 0;\n    return bvalue;\n}\n\nexport function parseInteger(value: string): number {\n    if ((/^0b([01]+)$/i).test(value)) {\n        return parseInt(value.substring(2), 2);\n    }\n    else if ((/^0x([0-9a-f]+)$/i).test(value)) {\n        return parseInt(value.substring(2), 16);\n    }\n    else if ((/^[0-9]+/i).test(value)) {\n        return parseInt(value, 10);\n    }\n    else if ((/^#[0-1]+/i).test(value)) {\n        return parseInt(value.substring(1), 2);\n    }\n    return undefined;\n}\n\nexport function parseDimIndex(spec: string, count: number): string[] {\n    if (spec.indexOf(',') !== -1) {\n        const components = spec.split(',').map((c) => c.trim());\n        if (components.length !== count) {\n            throw new Error('dimIndex Element has invalid specification.');\n        }\n        return components;\n    }\n\n    if (/^([0-9]+)\\-([0-9]+)$/i.test(spec)) {\n        const parts = spec.split('-').map((p) => parseInteger(p));\n        const start = parts[0];\n        const end = parts[1];\n\n        const numElements = end - start + 1;\n        if (numElements < count) {\n            throw new Error('dimIndex Element has invalid specification.');\n        }\n\n        const components = [];\n        for (let i = 0; i < count; i++) {\n            components.push(`${start + i}`);\n        }\n\n        return components;\n    }\n\n    if (/^[a-zA-Z]\\-[a-zA-Z]$/.test(spec)) {\n        const start = spec.charCodeAt(0);\n        const end = spec.charCodeAt(2);\n\n        const numElements = end - start + 1;\n        if (numElements < count) {\n            throw new Error('dimIndex Element has invalid specification.');\n        }\n\n        const components = [];\n        for (let i = 0; i < count; i++) {\n            components.push(String.fromCharCode(start + i));\n        }\n\n        return components;\n    }\n\n    return [];\n}\n","import { DebugSession, InitializedEvent, TerminatedEvent, ContinuedEvent, OutputEvent, Thread, ThreadEvent, StackFrame, Scope, Source, Handles, Event } from 'vscode-debugadapter';\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { MI2 } from './backend/mi2/mi2';\nimport { hexFormat } from './frontend/utils';\nimport { Breakpoint, IBackend, Variable, VariableObject, MIError } from './backend/backend';\nimport { TelemetryEvent, ConfigurationArguments, StoppedEvent, GDBServerController, AdapterOutputEvent, SWOConfigureEvent, DisassemblyInstruction } from './common';\nimport { GDBServer } from './backend/server';\nimport { MINode } from './backend/mi_parse';\nimport { expandValue, isExpandable } from './backend/gdb_expansion';\nimport * as os from 'os';\nimport * as net from 'net';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as hasbin from 'hasbin';\nimport * as crypto from 'crypto';\n\nimport { setTimeout } from 'timers';\nimport { EventEmitter } from 'events';\n\nimport { JLinkServerController } from './jlink';\nimport { OpenOCDServerController } from './openocd';\nimport { STUtilServerController } from './stutil';\nimport { PyOCDServerController } from './pyocd';\nimport { BMPServerController } from './bmp';\nimport { PEServerController } from './pemicro';\nimport { QEMUServerController } from './qemu';\nimport { ExternalServerController } from './external';\nimport { SymbolTable } from './backend/symbols';\nimport { SymbolInformation, SymbolScope, SymbolType } from './symbols';\nimport { TcpPortScanner } from './tcpportscanner';\n\nconst SERVER_TYPE_MAP = {\n    jlink: JLinkServerController,\n    openocd: OpenOCDServerController,\n    stutil: STUtilServerController,\n    pyocd: PyOCDServerController,\n    pe: PEServerController,\n    bmp: BMPServerController,\n    qemu: QEMUServerController,\n    external: ExternalServerController\n};\n\nclass ExtendedVariable {\n    constructor(public name, public options) {\n    }\n}\n\nconst GLOBAL_HANDLE_ID = 0xFE;\nconst STACK_HANDLES_START = 0x100;\nconst STACK_HANDLES_FINISH = 0xFFFF;\nconst STATIC_HANDLES_START = 0x010000;\nconst STATIC_HANDLES_FINISH = 0x01FFFF;\nconst VAR_HANDLES_START = 0x020000;\n\nconst COMMAND_MAP = (c) => c.startsWith('-') ? c.substring(1) : `interpreter-exec console \"${c}\"`;\n\nclass CustomStoppedEvent extends Event implements DebugProtocol.Event {\n    public readonly body: {\n        reason: string,\n        threadID: number\n    };\n    public readonly event: string;\n\n    constructor(reason: string, threadID: number) {\n        super('custom-stop', { reason: reason, threadID: threadID });\n    }\n}\n\nclass CustomContinuedEvent extends Event implements DebugProtocol.Event {\n    public readonly body: {\n        threadID: number;\n        allThreads: boolean;\n    };\n    public readonly event: string;\n\n    constructor(threadID: number, allThreads: boolean = true) {\n        super('custom-continued', { threadID: threadID, allThreads: allThreads });\n    }\n}\n\nconst traceThreads = false;\n\nexport class GDBDebugSession extends DebugSession {\n    private server: GDBServer;\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n    private serverController: GDBServerController;\n    private symbolTable: SymbolTable;\n\n    protected variableHandles = new Handles<string | VariableObject | ExtendedVariable>(VAR_HANDLES_START);\n    protected variableHandlesReverse: { [id: string]: number } = {};\n    protected quit: boolean;\n    protected attached: boolean;\n    protected trimCWD: string;\n    protected switchCWD: string;\n    protected started: boolean;\n    protected crashed: boolean;\n    protected debugReady: boolean;\n    protected miDebugger: MI2;\n    protected commandServer: net.Server;\n    protected forceDisassembly: boolean = false;\n    protected activeEditorPath: string = null;\n    // currentThreadId is the currently selected thread or where execution has stopped. It not very\n    // meaningful since the current thread id in gdb can change in many ways (when you use a --thread\n    // option on certain commands) \n    protected currentThreadId: number = 0;\n    protected activeThreadIds = new Set<number>();      // Used for consistency check\n\n    /**\n     * If we are requested a major switch like restart/disconnect/detach we may have to interrupt the\n     * the target to make it happen. That interrupt can cause a chain reaction of events, responses\n     * and requests -- considerable gdb chatter -- that affects what we are trying to do. We still rely\n     * on our event 'generic-stopped' but not send events to clients like VSCode or our own frontend.\n     * We should always keep our own state valid though\n     */\n    protected disableSendStoppedEvents = false;\n\n    private stopped: boolean = false;\n    private stoppedReason: string = '';\n\n    // stoppedThreadId represents where execution stopped because of a pause, exception, step or breakpoint\n    // Generally continuing execution can only work from that thread for embedded processors. It is bit\n    // different from 'currentThreadId'. This is also the last thread-id used to notify VSCode about\n    // the current thread so the call-stack will initially point to this thread. Maybe currentThreadId\n    // can be made stricter and we can remove this variable\n    private stoppedThreadId: number = 0;\n    private stoppedEventPending = false;\n\n    protected breakpointMap: Map<string, Breakpoint[]> = new Map();\n    protected fileExistsCache: Map<string, boolean> = new Map();\n\n    private currentFile: string;\n    protected onConfigDone: EventEmitter = new EventEmitter();\n\n    public constructor(debuggerLinesStartAt1: boolean, isServer: boolean = false, threadID: number = 1) {\n        super(debuggerLinesStartAt1, isServer);\n    }\n\n    protected initDebugger() {\n        this.miDebugger.on('launcherror', this.launchError.bind(this));\n        this.miDebugger.on('quit', this.quitEvent.bind(this));\n        this.miDebugger.on('exited-normally', this.quitEvent.bind(this));\n        this.miDebugger.on('stopped', this.stopEvent.bind(this));\n        this.miDebugger.on('msg', this.handleMsg.bind(this));\n        this.miDebugger.on('breakpoint', this.handleBreakpoint.bind(this));\n        this.miDebugger.on('step-end', this.handleBreak.bind(this));\n        this.miDebugger.on('step-out-end', this.handleBreak.bind(this));\n        this.miDebugger.on('signal-stop', this.handlePause.bind(this));\n        this.miDebugger.on('running', this.handleRunning.bind(this));\n        this.miDebugger.on('thread-created', this.handleThreadCreated.bind(this));\n        this.miDebugger.on('thread-exited', this.handleThreadExited.bind(this));\n        this.miDebugger.on('thread-selected', this.handleThreadSelected.bind(this));\n        this.miDebugger.on('thread-group-exited', this.handleThreadGroupExited.bind(this));\n        this.sendEvent(new InitializedEvent());\n    }\n\n    protected initializeRequest(response: DebugProtocol.InitializeResponse, args: DebugProtocol.InitializeRequestArguments): void {\n        response.body.supportsHitConditionalBreakpoints = true;\n        response.body.supportsConfigurationDoneRequest = true;\n        response.body.supportsConditionalBreakpoints = true;\n        response.body.supportsFunctionBreakpoints = true;\n        response.body.supportsEvaluateForHovers = true;\n        response.body.supportsSetVariable = true;\n        response.body.supportsRestartRequest = true;\n        this.sendResponse(response);\n    }\n\n    protected launchRequest(response: DebugProtocol.LaunchResponse, args: ConfigurationArguments): void {\n        this.args = this.normalizeArguments(args);\n        this.symbolTable = new SymbolTable(args.toolchainPath, args.toolchainPrefix, args.executable, args.demangle);\n        this.symbolTable.loadSymbols();\n        this.breakpointMap = new Map();\n        this.fileExistsCache = new Map();\n        this.processLaunchAttachRequest(response, false);\n    }\n\n    protected attachRequest(response: DebugProtocol.AttachResponse, args: ConfigurationArguments): void {\n        this.args = this.normalizeArguments(args);\n        this.symbolTable = new SymbolTable(args.toolchainPath, args.toolchainPrefix, args.executable, args.demangle);\n        this.symbolTable.loadSymbols();\n        this.breakpointMap = new Map();\n        this.fileExistsCache = new Map();\n        this.processLaunchAttachRequest(response, true);\n    }\n\n    private normalizeArguments(args: ConfigurationArguments): ConfigurationArguments {\n        args.graphConfig = args.graphConfig || [];\n        \n        if (args.executable && !path.isAbsolute(args.executable)) {\n            args.executable = path.normalize(path.join(args.cwd, args.executable));\n        }\n\n        if (args.svdFile && !path.isAbsolute(args.svdFile)) {\n            args.svdFile = path.normalize(path.join(args.cwd, args.svdFile));\n        }\n\n        if (args.swoConfig && args.swoConfig.decoders) {\n            args.swoConfig.decoders = args.swoConfig.decoders.map((dec) => {\n                if (dec.type === 'advanced' && dec.decoder && !path.isAbsolute(dec.decoder)) {\n                    dec.decoder = path.normalize(path.join(args.cwd, dec.decoder));\n                }\n                return dec;\n            });\n        }\n\n        return args;\n    }\n\n    private processLaunchAttachRequest(response: DebugProtocol.LaunchResponse, attach: boolean) {\n        if (!fs.existsSync(this.args.executable)) {\n            this.sendErrorResponse(\n                response,\n                103,\n                `Unable to find executable file at ${this.args.executable}.`\n            );\n            return;\n        }\n        \n        const ControllerClass = SERVER_TYPE_MAP[this.args.servertype];\n        this.serverController = new ControllerClass();\n        this.serverController.setArguments(this.args);\n        this.serverController.on('event', this.serverControllerEvent.bind(this));\n        \n        this.quit = false;\n        this.attached = false;\n        this.started = false;\n        this.crashed = false;\n        this.debugReady = false;\n        this.stopped = false;\n        this.activeThreadIds.clear();\n\n        const portFinderOpts = { min: 50000, max: 52000, retrieve: this.serverController.portsNeeded.length };\n        TcpPortScanner.findFreePorts(portFinderOpts, GDBServer.LOCALHOST).then((ports) => {\n            this.ports = {};\n            this.serverController.portsNeeded.forEach((val, idx) => {\n                this.ports[val] = ports[idx];\n            });\n\n            this.serverController.setPorts(this.ports);\n\n            const executable = this.serverController.serverExecutable();\n            const args = this.serverController.serverArguments();\n\n            let gdbExePath = os.platform() !== 'win32' ? `${this.args.toolchainPrefix}-gdb` : `${this.args.toolchainPrefix}-gdb.exe`;\n            if (this.args.toolchainPath) {\n                gdbExePath = path.normalize(path.join(this.args.toolchainPath, gdbExePath));\n            }\n            if (this.args.gdbpath) {\n                gdbExePath = this.args.gdbpath;\n            }\n\n            // Check to see if gdb exists.\n            if (path.isAbsolute(gdbExePath)) {\n                if (fs.existsSync(gdbExePath) === false) {\n                    this.sendErrorResponse(\n                        response,\n                        103,\n                        `${this.serverController.name} GDB executable \"${gdbExePath}\" was not found.\\n` +\n                            'Please configure \"cortex-debug.armToolchainPath\" correctly.'\n                    );\n                    return;\n                }\n            }\n            else {\n                if (!hasbin.sync(gdbExePath.replace('.exe', ''))) {\n                    this.sendErrorResponse(\n                        response,\n                        103,\n                        `${this.serverController.name} GDB executable \"${gdbExePath}\" was not found.\\n` +\n                            'Please configure \"cortex-debug.armToolchainPath\" correctly.'\n                    );\n                    return;\n                }\n            }\n\n            if (executable) {\n                this.handleMsg('log', `Please check OUTPUT tab (Adapter Output) for output from ${executable}` + '\\n');\n                const dbgMsg = `Launching server: \"${executable}\" ` + args.map((s) => {\n                    return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n                }).join(' ') + '\\n';\n                this.handleMsg('log', dbgMsg);\n            }\n\n            let initMatch = this.serverController.initMatch();\n            if (this.args.overrideGDBServerStartedRegex) {\n                initMatch = new RegExp(this.args.overrideGDBServerStartedRegex, 'i');\n            }\n\n            this.server = new GDBServer(this.args.cwd, executable, args, initMatch, this.ports['gdbPort']);\n            this.server.on('output', this.handleAdapterOutput.bind(this));\n            this.server.on('quit', () => {\n                if (this.started) {\n                    this.quitEvent();\n                }\n                else {\n                    this.sendErrorResponse(\n                        response,\n                        103,\n                        `${this.serverController.name} GDB Server Quit Unexpectedly. See Adapter Output for more details.`\n                    );\n                }\n            });\n            this.server.on('launcherror', (err) => {\n                this.sendErrorResponse(response, 103, `Failed to launch ${this.serverController.name} GDB Server: ${err.toString()}`);\n            });\n\n            let timeout = setTimeout(() => {\n                this.server.exit();\n                this.sendEvent(new TelemetryEvent(\n                    'Error',\n                    'Launching Server',\n                    `Failed to launch ${this.serverController.name} GDB Server: Timeout.`\n                ));\n                this.sendErrorResponse(response, 103, `Failed to launch ${this.serverController.name} GDB Server: Timeout.`);\n            }, GDBServer.SERVER_TIMEOUT);\n\n            this.serverController.serverLaunchStarted();\n            this.server.init().then((started) => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n\n                this.serverController.serverLaunchCompleted();\n                \n                let gdbargs = ['-q', '--interpreter=mi2'];\n                gdbargs = gdbargs.concat(this.args.debuggerArgs || []);\n\n                this.miDebugger = new MI2(gdbExePath, gdbargs);\n                this.initDebugger();\n\n                this.miDebugger.printCalls = !!this.args.showDevDebugOutput;\n                this.miDebugger.debugOutput = !!this.args.showDevDebugOutput;\n\n                const commands = [`interpreter-exec console \"source ${this.args.extensionPath}/support/gdbsupport.init\"`];\n                if (this.args.demangle) {\n                    commands.push('interpreter-exec console \"set print demangle on\"');\n                    commands.push('interpreter-exec console \"set print asm-demangle on\"');\n                }\n                commands.push(...this.serverController.initCommands());\n                \n                if (attach) {\n                    commands.push(...this.args.preAttachCommands.map(COMMAND_MAP));\n                    const attachCommands = this.args.overrideAttachCommands != null ?\n                        this.args.overrideAttachCommands.map(COMMAND_MAP) : this.serverController.attachCommands();\n                    commands.push(...attachCommands);\n                    commands.push(...this.args.postAttachCommands.map(COMMAND_MAP));\n                    commands.push(...this.serverController.swoCommands());\n                }\n                else {\n                    commands.push(...this.args.preLaunchCommands.map(COMMAND_MAP));\n                    const launchCommands = this.args.overrideLaunchCommands != null ?\n                        this.args.overrideLaunchCommands.map(COMMAND_MAP) : this.serverController.launchCommands();\n                    commands.push(...launchCommands);\n                    commands.push(...this.args.postLaunchCommands.map(COMMAND_MAP));\n                    commands.push(...this.serverController.swoCommands());\n                }\n                \n                this.serverController.debuggerLaunchStarted();\n                this.miDebugger.once('debug-ready', () => {\n                    this.debugReady = true;\n                    this.attached = attach;\n                });\n\n                if (true) {\n                    const dbgMsg = `Launching GDB: \"${gdbExePath}\" ` + gdbargs.map((s) => {\n                        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n                    }).join(' ') + '\\n';\n                    this.handleMsg('log', dbgMsg);\n                }\n\n                this.miDebugger.connect(this.args.cwd, this.args.executable, commands).then(() => {\n                    this.started = true;\n                    this.serverController.debuggerLaunchCompleted();\n                    this.sendResponse(response);\n\n                    const launchComplete = () => {\n                        setTimeout(() => {\n                            this.stopped = true;\n                            this.stoppedReason = 'start';\n                            this.stoppedThreadId = this.currentThreadId;\n                            this.sendEvent(new StoppedEvent('start', this.currentThreadId, true));\n                            this.sendEvent(new CustomStoppedEvent('start', this.currentThreadId));\n                        }, 50);\n                    };\n\n                    if (this.args.runToMain) {\n                        this.miDebugger.sendCommand('break-insert -t --function main').then(() => {\n                            this.miDebugger.once('generic-stopped', launchComplete);\n                            // To avoid race conditions between finishing configuration, we should stay\n                            // in stopped mode. Or, we end up clobbering the stopped event that might come\n                            // during setting of any additional breakpoints.\n                            this.onConfigDone.once('done', () => {\n                                this.miDebugger.sendCommand('exec-continue');\n                            });\n                        });\n                    }\n                    else {\n                        launchComplete();\n                        this.onConfigDone.once('done', () => {\n                            this.runPostStartSessionCommands(false);\n                        });\n                    }\n                }, (err) => {\n                    this.sendErrorResponse(response, 103, `Failed to launch GDB: ${err.toString()}`);\n                    this.sendEvent(new TelemetryEvent('Error', 'Launching GDB', err.toString()));\n                });\n\n            }, (error) => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                this.sendEvent(new TelemetryEvent(\n                    'Error',\n                    'Launching Server',\n                    `Failed to launch ${this.serverController.name} GDB Server: ${error.toString()}`\n                ));\n                this.sendErrorResponse(response, 103, `Failed to launch ${this.serverController.name} GDB Server: ${error.toString()}`);\n            });\n            \n        }, (err) => {\n            this.sendEvent(new TelemetryEvent('Error', 'Launching Server', `Failed to find open ports: ${err.toString()}`));\n            this.sendErrorResponse(response, 103, `Failed to find open ports: ${err.toString()}`);\n        });\n    }\n\n    // Runs a set of commands after a quiet time and is no other gdb transactions are happening\n    protected runPostStartSessionCommands(isRestart: boolean, interval: number = 10): void {\n        let commands = isRestart ? this.args.postRestartSessionCommands : this.args.postStartSessionCommands;\n        if (commands && (commands.length > 0)) {\n            let curToken = this.miDebugger.getCurrentToken();\n            commands = commands.map(COMMAND_MAP);\n            // We want to let things quiet down before we run the next set of commands. Note that while\n            // we are running this command sequence, some results can cause other gdb commands to be generated if\n            // running state changes. Can't help it for now\n            const to = setInterval(() => {\n                const nxtToken = this.miDebugger.getCurrentToken();\n                if (curToken === nxtToken) {\n                    clearInterval(to);\n                    this.miDebugger.postStart(commands);\n                } else {\n                    curToken = nxtToken;\n                }\n            }, interval);\n        }\n    }\n\n    protected customRequest(command: string, response: DebugProtocol.Response, args: any): void {\n        if (this.serverController.customRequest(command, response, args)) {\n            this.sendResponse(response);\n            return;\n        }\n\n        switch (command) {\n            case 'set-force-disassembly':\n                response.body = { success: true };\n                this.forceDisassembly = args.force;\n                if (this.stopped) {\n                    this.activeEditorPath = null;\n                    this.sendEvent(new ContinuedEvent(this.currentThreadId, true));\n                    this.sendEvent(new StoppedEvent(this.stoppedReason, this.currentThreadId, true));\n                }\n                this.sendResponse(response);\n                break;\n            case 'load-function-symbols':\n                response.body = { functionSymbols: this.symbolTable.getFunctionSymbols() };\n                this.sendResponse(response);\n                break;\n            case 'set-active-editor':\n                if (args.path !== this.activeEditorPath) {\n                    this.activeEditorPath = args.path;\n                    // if (this.stopped) {\n                    //     this.sendEvent(new StoppedEvent(this.stoppedReason, this.currentThreadId, true));\n                    // }\n                }\n                response.body = {};\n                this.sendResponse(response);\n                break;\n            case 'get-arguments':\n                response.body = this.args;\n                this.sendResponse(response);\n                break;\n            case 'read-memory':\n                this.readMemoryRequestCustom(response, args['address'], args['length']);\n                break;\n            case 'write-memory':\n                this.writeMemoryRequest(response, args['address'], args['data']);\n                break;\n            case 'read-registers':\n                this.readRegistersRequest(response);\n                break;\n            case 'read-register-list':\n                this.readRegisterListRequest(response);\n                break;\n            case 'disassemble':\n                this.disassembleRequest(response, args);\n                break;\n            case 'execute-command':\n                let cmd = args['command'] as string;\n                if (cmd.startsWith('-')) { cmd = cmd.substring(1); }\n                else { cmd = `interpreter-exec console \"${cmd}\"`; }\n                this.miDebugger.sendCommand(cmd).then((node) => {\n                    response.body = node.resultRecords;\n                    this.sendResponse(response);\n                }, (error) => {\n                    response.body = error;\n                    this.sendErrorResponse(response, 110, 'Unable to execute command');\n                });\n                break;\n            default:\n                response.body = { error: 'Invalid command.' };\n                this.sendResponse(response);\n                break;\n        }\n    }\n\n    protected async disassembleRequest(response: DebugProtocol.Response, args: any): Promise<void> {\n        if (args.function) {\n            try {\n                const funcInfo: SymbolInformation = await this.getDisassemblyForFunction(args.function, args.file);\n                response.body = {\n                    instructions: funcInfo.instructions,\n                    name: funcInfo.name,\n                    file: funcInfo.file,\n                    address: funcInfo.address,\n                    length: funcInfo.length\n                };\n                this.sendResponse(response);\n            }\n            catch (e) {\n                this.sendErrorResponse(response, 1, `Unable to disassemble: ${e.toString()}`);\n            }\n            return;\n        }\n        else if (args.startAddress) {\n            try {\n                let funcInfo = this.symbolTable.getFunctionAtAddress(args.startAddress);\n                if (funcInfo) {\n                    funcInfo = await this.getDisassemblyForFunction(funcInfo.name, funcInfo.file);\n                    response.body = {\n                        instructions: funcInfo.instructions,\n                        name: funcInfo.name,\n                        file: funcInfo.file,\n                        address: funcInfo.address,\n                        length: funcInfo.length\n                    };\n                    this.sendResponse(response);\n                }\n                else {\n                    // tslint:disable-next-line:max-line-length\n                    const instructions: DisassemblyInstruction[] = await this.getDisassemblyForAddresses(args.startAddress, args.length || 256);\n                    response.body = { instructions: instructions };\n                    this.sendResponse(response);\n                }\n            }\n            catch (e) {\n                this.sendErrorResponse(response, 1, `Unable to disassemble: ${e.toString()}`);\n            }\n            return;\n        }\n        else {\n            this.sendErrorResponse(response, 1, 'Unable to disassemble; invalid parameters.');\n        }\n    }\n\n    private async getDisassemblyForFunction(functionName: string, file?: string): Promise<SymbolInformation> {\n        const symbol: SymbolInformation = this.symbolTable.getFunctionByName(functionName, file);\n\n        if (!symbol) { throw new Error(`Unable to find function with name ${functionName}.`); }\n\n        if (symbol.instructions) { return symbol; }\n\n        const startAddress = symbol.address;\n        const endAddress = symbol.address + symbol.length;\n\n        // tslint:disable-next-line:max-line-length\n        const result = await this.miDebugger.sendCommand(`data-disassemble -s ${hexFormat(startAddress, 8)} -e ${hexFormat(endAddress, 8)} -- 2`);\n        const rawInstructions = result.result('asm_insns');\n        const instructions: DisassemblyInstruction[] = rawInstructions.map((ri) => {\n            const address = MINode.valueOf(ri, 'address');\n            const functionName = MINode.valueOf(ri, 'func-name');\n            const offset = parseInt(MINode.valueOf(ri, 'offset'));\n            const inst = MINode.valueOf(ri, 'inst');\n            const opcodes = MINode.valueOf(ri, 'opcodes');\n\n            return {\n                address: address,\n                functionName: functionName,\n                offset: offset,\n                instruction: inst,\n                opcodes: opcodes\n            };\n        });\n        symbol.instructions = instructions;\n        return symbol;\n    }\n\n    private async getDisassemblyForAddresses(startAddress: number, length: number): Promise<DisassemblyInstruction[]> {\n        const endAddress = startAddress + length;\n\n        // tslint:disable-next-line:max-line-length\n        const result = await this.miDebugger.sendCommand(`data-disassemble -s ${hexFormat(startAddress, 8)} -e ${hexFormat(endAddress, 8)} -- 2`);\n        const rawInstructions = result.result('asm_insns');\n        const instructions: DisassemblyInstruction[] = rawInstructions.map((ri) => {\n            const address = MINode.valueOf(ri, 'address');\n            const functionName = MINode.valueOf(ri, 'func-name');\n            const offset = parseInt(MINode.valueOf(ri, 'offset'));\n            const inst = MINode.valueOf(ri, 'inst');\n            const opcodes = MINode.valueOf(ri, 'opcodes');\n\n            return {\n                address: address,\n                functionName: functionName,\n                offset: offset,\n                instruction: inst,\n                opcodes: opcodes\n            };\n        });\n\n        return instructions;\n    }\n\n    protected readMemoryRequestCustom(response: DebugProtocol.Response, startAddress: string, length: number) {\n        this.miDebugger.sendCommand(`data-read-memory-bytes \"${startAddress}\" ${length}`).then((node) => {\n            const startAddress = node.resultRecords.results[0][1][0][0][1];\n            const endAddress = node.resultRecords.results[0][1][0][2][1];\n            const data = node.resultRecords.results[0][1][0][3][1];\n            const bytes = data.match(/[0-9a-f]{2}/g).map((b) => parseInt(b, 16));\n            response.body = {\n                startAddress: startAddress,\n                endAddress: endAddress,\n                bytes: bytes\n            };\n            this.sendResponse(response);\n        }, (error) => {\n            response.body = { error: error };\n            this.sendErrorResponse(response, 114, `Unable to read memory: ${error.toString()}`);\n            this.sendEvent(new TelemetryEvent('Error', 'Reading Memory', `${startAddress}-${length.toString(16)}`));\n        });\n    }\n\n    protected writeMemoryRequest(response: DebugProtocol.Response, startAddress: number, data: string) {\n        const address = hexFormat(startAddress, 8);\n        this.miDebugger.sendCommand(`data-write-memory-bytes ${address} ${data}`).then((node) => {\n            this.sendResponse(response);\n        }, (error) => {\n            response.body = { error: error };\n            this.sendErrorResponse(response, 114, `Unable to write memory: ${error.toString()}`);\n            this.sendEvent(new TelemetryEvent('Error', 'Writing Memory', `${startAddress.toString(16)}-${data.length.toString(16)}`));\n        });\n    }\n\n    protected readRegistersRequest(response: DebugProtocol.Response) {\n        const fmt = this.args.registerUseNaturalFormat ? 'N' : 'x';\n        this.miDebugger.sendCommand(`data-list-register-values ${fmt}`).then((node) => {\n            if (node.resultRecords.resultClass === 'done') {\n                const rv = node.resultRecords.results[0][1];\n                response.body = rv.map((n) => {\n                    const val = {};\n                    n.forEach((x) => {\n                        val[x[0]] = x[1];\n                    });\n                    return val;\n                });\n            }\n            else {\n                response.body = {\n                    error: 'Unable to parse response'\n                };\n            }\n            this.sendResponse(response);\n        }, (error) => {\n            response.body = { error: error };\n            this.sendErrorResponse(response, 115, `Unable to read registers: ${error.toString()}`);\n            this.sendEvent(new TelemetryEvent('Error', 'Reading Registers', ''));\n        });\n    }\n\n    protected readRegisterListRequest(response: DebugProtocol.Response) {\n        this.miDebugger.sendCommand('data-list-register-names').then((node) => {\n            if (node.resultRecords.resultClass === 'done') {\n                let registerNames;\n                node.resultRecords.results.forEach((rr) => {\n                    if (rr[0] === 'register-names') {\n                        registerNames = rr[1];\n                    }\n                });\n                response.body = registerNames;\n            }\n            else {\n                response.body = { error: node.resultRecords.results };\n            }\n            this.sendResponse(response);\n        }, (error) => {\n            response.body = { error: error };\n            this.sendErrorResponse(response, 116, `Unable to read register list: ${error.toString()}`);\n            this.sendEvent(new TelemetryEvent('Error', 'Reading Register List', ''));\n        });\n    }\n\n    protected disconnectRequest(response: DebugProtocol.DisconnectResponse, args: DebugProtocol.DisconnectArguments): void {\n        const doDisconnectProcessing = () => {\n            if (this.attached) {\n                this.attached = false;\n                this.miDebugger.detach();\n            } else {\n                this.miDebugger.stop();\n            }\n            if (this.commandServer) {\n                this.commandServer.close();\n                this.commandServer = undefined;\n            }\n            setTimeout(() => {      // Give gdb a chance to disconnect and exit normally\n                try {\n                    this.disableSendStoppedEvents = false;\n                    this.server.exit();\n                }\n                catch (e) {}\n                finally {\n                    this.sendResponse(response);\n                }\n            }, 50);\n        };\n\n        this.disableSendStoppedEvents = true;\n        if (this.miDebugger) {\n            if (this.attached && !this.stopped) {\n                this.miDebugger.once('generic-stopped', doDisconnectProcessing);\n                this.miDebugger.sendCommand('exec-interrupt');\n            } else {\n                doDisconnectProcessing();\n            }\n        }\n    }\n\n    //\n    // I don't think we are following the protocol here. but the protocol doesn't make sense. I got a\n    // clarification that for an attach session, restart means detach and re-attach. How does this make\n    // any sense? Isn't that like a null operation?\n    //\n    // https://github.com/microsoft/debug-adapter-protocol/issues/73\n    //\n    protected restartRequest(response: DebugProtocol.RestartResponse, args: DebugProtocol.RestartArguments): void {\n        const restartProcessing = async () => {\n            this.disableSendStoppedEvents = false;\n            const commands = [];\n\n            commands.push(...this.args.preRestartCommands.map(COMMAND_MAP));\n            const restartCommands = this.args.overrideRestartCommands != null ?\n                this.args.overrideRestartCommands.map(COMMAND_MAP) : this.serverController.restartCommands();\n            commands.push(...restartCommands);\n            commands.push(...this.args.postRestartCommands.map(COMMAND_MAP));\n            commands.push(...this.serverController.swoCommands());\n\n            this.miDebugger.restart(commands).then((done) => {\n                this.sendResponse(response);\n                setTimeout(() => {\n                    this.stopped = true;        // This should aleady be true??\n                    this.stoppedReason = 'restart';\n                    this.sendEvent(new ContinuedEvent(this.currentThreadId, true));\n                    this.sendEvent(new StoppedEvent('restart', this.currentThreadId, true));\n                    this.sendEvent(new CustomStoppedEvent('restart', this.currentThreadId));\n                    this.runPostStartSessionCommands(true, 50);\n                }, 50);\n            }, (msg) => {\n                this.sendErrorResponse(response, 6, `Could not restart: ${msg}`);\n            });\n        };\n\n        this.disableSendStoppedEvents = true;\n        if (this.stopped) {\n            restartProcessing();\n        }\n        else {\n            this.miDebugger.once('generic-stopped', restartProcessing);\n            this.miDebugger.sendCommand('exec-interrupt');\n        }\n    }\n\n    protected handleAdapterOutput(output) {\n        this.sendEvent(new AdapterOutputEvent(output, 'out'));\n    }\n\n    private serverControllerEvent(event: DebugProtocol.Event) {\n        this.sendEvent(event);\n    }\n\n    protected handleMsg(type: string, msg: string) {\n        if (type === 'target') { type = 'stdout'; }\n        if (type === 'log') { type = 'stderr'; }\n        this.sendEvent(new OutputEvent(msg, type));\n    }\n\n    protected handleRunning(info: MINode) {\n        this.stopped = false;\n        this.sendEvent(new ContinuedEvent(this.currentThreadId, true));\n        this.sendEvent(new CustomContinuedEvent(this.currentThreadId, true));\n    }\n\n    protected findPausedThread(info: MINode) {\n        if (info.outOfBandRecord && info.outOfBandRecord[0] && info.outOfBandRecord[0].output) {\n            for (const item of info.outOfBandRecord[0].output) {\n                if (item[0] === 'thread-id') {\n                    this.currentThreadId = parseInt(item[1]);\n                    this.stoppedThreadId = this.currentThreadId;\n                    if (traceThreads) {\n                        this.handleMsg('stdout', `**** Paused Thread: ${this.stoppedThreadId}\\n`);\n                    }\n                    return;\n                }\n            }\n        }\n        if (traceThreads) {\n            this.handleMsg('stdout', `**** Paused Thread: not found. Using ID ${this.stoppedThreadId}. Not good\\n`);\n        }\n    }\n    \n    protected handleBreakpoint(info: MINode) {\n        this.stopped = true;\n        this.stoppedReason = 'breakpoint';\n        this.findPausedThread(info);\n        if (!this.disableSendStoppedEvents) {\n            this.sendEvent(new StoppedEvent('breakpoint', this.currentThreadId, true));\n            this.sendEvent(new CustomStoppedEvent('breakpoint', this.currentThreadId));\n        } else {\n            this.stoppedEventPending = true;\n        }\n    }\n\n    protected handleBreak(info: MINode) {\n        this.stopped = true;\n        this.stoppedReason = 'step';\n        this.findPausedThread(info);\n        if (!this.disableSendStoppedEvents) {\n            this.sendEvent(new StoppedEvent('step', this.currentThreadId, true));\n            this.sendEvent(new CustomStoppedEvent('step', this.currentThreadId));\n        } else {\n            this.stoppedEventPending = true;\n        }\n    }\n\n    public sendEvent(event: DebugProtocol.Event): void {\n        super.sendEvent(event);\n        if (traceThreads && (event instanceof StoppedEvent || event instanceof ContinuedEvent)) {\n            this.handleMsg('log', '**** Event: ' + JSON.stringify(event) + '\\n');\n        }\n    }\n\n    protected handlePause(info: MINode) {\n        this.stopped = true;\n        this.stoppedReason = 'user request';\n        this.findPausedThread(info);\n        if (!this.disableSendStoppedEvents) {\n            this.sendEvent(new StoppedEvent('user request', this.currentThreadId, true));\n            this.sendEvent(new CustomStoppedEvent('user request', this.currentThreadId));\n        } else {\n            this.stoppedEventPending = true;\n        }\n    }\n\n    protected handleThreadCreated(info: { threadId: number, threadGroupId: string }) {\n        if (!this.activeThreadIds.has(info.threadId)) {\n            if (traceThreads) {\n                this.handleMsg('log', `**** Thread created ${info.threadId}\\n`);\n            }\n            this.activeThreadIds.add(info.threadId);\n            this.sendEvent(new ThreadEvent('started', info.threadId));\n        } else {\n            this.handleMsg('log', `Thread Error: GDB trying to create thread '${info.threadId}' that already exists`);\n        }\n    }\n\n    protected handleThreadExited(info: { threadId: number, threadGroupId: string }) {\n        if (traceThreads) {\n            this.handleMsg('log', `**** Thread exited ${info.threadId}\\n`);\n        }\n        if (this.activeThreadIds.has(info.threadId)) {\n            this.activeThreadIds.delete(info.threadId);\n        } else {\n            this.handleMsg('log', `Thread Error: GDB trying to delete thread '${info.threadId}' that does not exist.\\n`);\n        }\n        if (this.currentThreadId === info.threadId) {\n            this.currentThreadId = 0;\n        }\n        if (this.stoppedThreadId === info.threadId) {\n            this.stoppedThreadId = 0;\n        }\n        this.sendEvent(new ThreadEvent('exited', info.threadId));\n    }\n\n    protected handleThreadSelected(info: { threadId: number }) {\n        if (traceThreads) {\n            this.handleMsg('log', `**** Thread selected ${info.threadId}\\n`);\n        }\n        if (!this.activeThreadIds.has(info.threadId)) {\n            // We are seeing this happen. Not sure why and and can this event be relied upon?\n            this.handleMsg('log', `Thread Error: GDB trying to select thread '${info.threadId}' that does not exist. No harm done\\n`);\n        } else {\n            this.currentThreadId = info.threadId;\n        }\n    }\n\n    protected handleThreadGroupExited(info: { threadGroupId: string }) {\n        if (traceThreads) {\n            this.handleMsg('log', `**** Thread group exited ${info.threadGroupId}\\n`);\n        }\n        // When a thread group exits for whaever reason (especially for a re-start) cleanup\n        // and notify VSCode or it will be in a bad state. This can be distinct from a quitEvent\n        // A crash, hd/tcp disconnect in the gdb-server can also cause this event.\n        this.currentThreadId = 0;\n        for (const thId of this.activeThreadIds.values()) {\n            this.sendEvent(new ThreadEvent('exited', thId));\n        }\n        this.activeThreadIds.clear();\n    }\n\n    protected stopEvent(info: MINode) {\n        if (!this.started) { this.crashed = true; }\n        if (!this.quit) {\n            this.stopped = true;\n            this.stoppedReason = 'exception';\n            this.findPausedThread(info);\n            this.sendEvent(new StoppedEvent('exception', this.currentThreadId, true));\n            this.sendEvent(new CustomStoppedEvent('exception', this.currentThreadId));\n        }\n    }\n\n    protected quitEvent() {\n        if (traceThreads) {\n            this.handleMsg('log', '**** quit event\\n');\n        }\n        this.quit = true;\n        this.sendEvent(new TerminatedEvent());\n    }\n\n    protected launchError(err: any) {\n        this.handleMsg('stderr', 'Could not start debugger process, does the program exist in filesystem?\\n');\n        this.handleMsg('stderr', err.toString() + '\\n');\n        this.quitEvent();\n    }\n\n    // returns [threadId, frameId]\n    protected static decodeReference(varRef: number): number[] {\n        return [(varRef & 0xFF00) >>> 8, varRef & 0xFF];\n    }\n\n    protected static encodeReference(threadId: number, frameId: number): number {\n        return ((threadId << 8) | (frameId & 0xFF)) & 0xFFFF;\n    }\n\n    protected async setVariableRequest(response: DebugProtocol.SetVariableResponse, args: DebugProtocol.SetVariableArguments): Promise<void> {\n        try {\n            let name = args.name;\n            let threadId = -1;\n            let frameId = -1;\n            const varRef = args.variablesReference;\n            const globOrStatic = this.getFloatingVariable(varRef, name);\n            if (globOrStatic) {\n                name = globOrStatic.name;\n            } else if (varRef >= VAR_HANDLES_START) {\n                const parent = this.variableHandles.get(args.variablesReference) as VariableObject;\n                const fullName = parent.children[name];\n                name = fullName ? fullName : `${parent.name}.${name}`;\n            } else if (varRef >= STACK_HANDLES_START && varRef < STACK_HANDLES_FINISH) {\n                const tryName = this.createStackVarName(name, varRef);\n                if (this.variableHandlesReverse.hasOwnProperty(tryName)) {\n                    name = tryName;\n                }\n                [threadId, frameId] = GDBDebugSession.decodeReference(varRef);\n            }\n\n            const res = await this.miDebugger.varAssign(name, args.value, threadId, frameId);\n            response.body = {\n                value: res.result('value')\n            };\n            this.sendResponse(response);\n        }\n        catch (err) {\n            this.sendErrorResponse(response, 11, `Could not set variable: ${err}`);\n        }\n    }\n\n    protected setFunctionBreakPointsRequest(\n        response: DebugProtocol.SetFunctionBreakpointsResponse,\n        args: DebugProtocol.SetFunctionBreakpointsArguments\n    ): void {\n        const createBreakpoints = async (shouldContinue) => {\n            const all = [];\n            args.breakpoints.forEach((brk) => {\n                all.push(this.miDebugger.addBreakPoint({ raw: brk.name, condition: brk.condition, countCondition: brk.hitCondition }));\n            });\n            \n            try {\n                const breakpoints = await Promise.all(all);\n                const finalBrks = [];\n                breakpoints.forEach((brkp) => {\n                    if (brkp[0]) { finalBrks.push({ line: brkp[1].line }); }\n                });\n                response.body = {\n                    breakpoints: finalBrks\n                };\n                this.sendResponse(response);\n            }\n            catch (msg) {\n                this.sendErrorResponse(response, 10, msg.toString());\n            }\n            if (shouldContinue) {\n                await this.miDebugger.sendCommand('exec-continue');\n            }\n        };\n\n        const process = async () => {\n            if (this.stopped) { await createBreakpoints(false); }\n            else {\n                this.miDebugger.sendCommand('exec-interrupt');\n                this.miDebugger.once('generic-stopped', () => { createBreakpoints(true); });\n            }\n        };\n\n        if (this.debugReady) { process(); }\n        else { this.miDebugger.once('debug-ready', process); }\n    }\n\n    protected setBreakPointsRequest(response: DebugProtocol.SetBreakpointsResponse, args: DebugProtocol.SetBreakpointsArguments) {\n        const createBreakpoints = async (shouldContinue) => {\n            this.debugReady = true;\n            const currentBreakpoints = (this.breakpointMap.get(args.source.path) || []).map((bp) => bp.number);\n            \n            try {\n                await this.miDebugger.removeBreakpoints(currentBreakpoints);\n                this.breakpointMap.set(args.source.path, []);\n                \n                const all: Array<Promise<Breakpoint>> = [];\n                const sourcepath = decodeURIComponent(args.source.path);\n\n                if (sourcepath.startsWith('disassembly:/')) {\n                    let sidx = 13;\n                    if (sourcepath.startsWith('disassembly:///')) { sidx = 15; }\n                    const path = sourcepath.substring(sidx, sourcepath.length - 6); // Account for protocol and extension\n                    const parts = path.split(':::');\n                    let func: string;\n                    let file: string;\n\n                    if (parts.length === 2) {\n                        func = parts[1];\n                        file = parts[0];\n                    }\n                    else {\n                        func = parts[0];\n                    }\n\n                    const symbol: SymbolInformation = await this.getDisassemblyForFunction(func, file);\n                    \n                    if (symbol) {\n                        args.breakpoints.forEach((brk) => {\n                            if (brk.line <= symbol.instructions.length) {\n                                const line = symbol.instructions[brk.line - 1];\n                                all.push(this.miDebugger.addBreakPoint({\n                                    file: args.source.path,\n                                    line: brk.line,\n                                    condition: brk.condition,\n                                    countCondition: brk.hitCondition,\n                                    raw: line.address\n                                }));\n                            }\n                        });\n                    }\n                }\n                else {\n                    args.breakpoints.forEach((brk) => {\n                        all.push(this.miDebugger.addBreakPoint({\n                            file: args.source.path,\n                            line: brk.line,\n                            condition: brk.condition,\n                            countCondition: brk.hitCondition\n                        }));\n                    });\n                }\n\n                const brkpoints = await Promise.all(all);\n\n                const finalBrks: Breakpoint[] = brkpoints.filter((bp) => bp !== null);\n\n                response.body = {\n                    breakpoints: finalBrks.map((bp) => {\n                        return {\n                            line: bp.line,\n                            id: bp.number,\n                            verified: true\n                        };\n                    })\n                };\n\n                this.breakpointMap.set(args.source.path, finalBrks);\n                this.sendResponse(response);\n            }\n            catch (msg) {\n                this.sendErrorResponse(response, 9, msg.toString());\n            }\n\n            if (shouldContinue) {\n                await this.miDebugger.sendCommand('exec-continue');\n            }\n        };\n\n        const process = async () => {\n            if (this.stopped) {\n                await createBreakpoints(false);\n            }\n            else {\n                await this.miDebugger.sendCommand('exec-interrupt');\n                this.miDebugger.once('generic-stopped', () => { createBreakpoints(true); });\n            }\n        };\n\n        if (this.debugReady) { process(); }\n        else { this.miDebugger.once('debug-ready', process); }\n    }\n\n    protected async threadsRequest(response: DebugProtocol.ThreadsResponse): Promise<void> {\n        if (!this.stopped || this.disableSendStoppedEvents) {\n            response.body = { threads: [] };\n            this.sendResponse(response);\n            return Promise.resolve();\n        }\n        try {\n            const threadIdNode = await this.miDebugger.sendCommand('thread-list-ids');\n            const threadIds: number[] = threadIdNode.result('thread-ids').map((ti) => parseInt(ti[1]));\n            const currentThread = threadIdNode.result('current-thread-id');\n\n            if (!threadIds || (threadIds.length === 0)) {\n                // Yes, this does happen at the very beginning of an RTOS session\n                response.body = { threads: [] };\n                this.sendResponse(response);\n                return Promise.resolve();\n            }\n\n            for (const thId of threadIds) {\n                // Make sure VSCode knows about all the threads. GDB may still be in the process of notifying\n                // new threads while we already have a thread-list. Technically, this should never happen\n                if (!this.activeThreadIds.has(thId)) {\n                    this.handleThreadCreated({threadId: thId, threadGroupId: 'i1'});\n                }\n            }\n\n            if (!currentThread) {\n                this.currentThreadId = threadIds.findIndex((x) => {\n                    return x === this.stoppedThreadId;\n                }) >= 0 ? this.stoppedThreadId : threadIds[0];\n                if (traceThreads) {\n                    this.handleMsg('log', `**** thread-list-ids: no current thread, setting to ${this.currentThreadId}\\n`);\n                }\n                if (threadIds.length > 1) {    // No confusion when there is only one thread\n                    // thread-select doesn't actually work on most embedded gdb-servers. But we will at least\n                    // be in sync with gdb for querying local variables, etc. Things may rectify themselves like\n                    // they do with OpenOCD bit later. In general, this only happens with buggy gdb-servers\n                    await this.miDebugger.sendCommand(`thread-select ${this.currentThreadId}`);\n                }\n            }\n            else {\n                this.currentThreadId = parseInt(currentThread);\n                if (traceThreads) {\n                    this.handleMsg('log', `**** thread-list-ids: current thread = ${this.currentThreadId}\\n`);\n                }\n            }\n\n            // We have to send this event or else VSCode may have the last/wrong/no thread selected\n            // because when we stopped, we may not have had a valid thread (gdb-server issues). Needed even\n            // where there is is just one thread to make sure call-stack window has proper focus and\n            // selection for the debug buttons to have proper state. Esp. matters on restart with runToMain = false\n            // and on an attach\n            if (this.stoppedEventPending || (this.currentThreadId !== this.stoppedThreadId)) {\n                this.stoppedEventPending = false;\n                this.stoppedThreadId = this.currentThreadId;\n                this.sendEvent(new StoppedEvent(this.stoppedReason, this.currentThreadId, true));\n                this.sendEvent(new CustomStoppedEvent(this.stoppedReason, this.currentThreadId));\n            }\n\n            const nodes = await Promise.all(threadIds.map((id) => this.miDebugger.sendCommand(`thread-info ${id}`)));\n\n            const threads = nodes.map((node: MINode) => {\n                let th = node.result('threads');\n                if (th.length === 1) {\n                    th = th[0];\n                    const id = parseInt(MINode.valueOf(th, 'id'));\n                    const tid = MINode.valueOf(th, 'target-id');\n                    const details = MINode.valueOf(th, 'details');\n\n                    return new Thread(id, details || tid);\n                }\n                else {\n                    return null;\n                }\n            }).filter((t) => t !== null);\n\n            response.body = {\n                threads: threads\n            };\n            this.sendResponse(response);\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1, `Unable to get thread information: ${e}`);\n        }\n    }\n\n    protected async stackTraceRequest(response: DebugProtocol.StackTraceResponse, args: DebugProtocol.StackTraceArguments): Promise<void> {\n        try {\n            const stack = await this.miDebugger.getStack(args.threadId, args.startFrame, args.levels);\n            const ret: StackFrame[] = [];\n            for (const element of stack) {\n                const stackId = GDBDebugSession.encodeReference(args.threadId, element.level);\n                const file = element.file;\n                let disassemble = this.forceDisassembly || !file;\n                if (!disassemble) { disassemble = !(await this.checkFileExists(file)); }\n                if (!disassemble && this.activeEditorPath && this.activeEditorPath.startsWith('disassembly:///')) {\n                    const symbolInfo = this.symbolTable.getFunctionByName(element.function, element.fileName);\n                    let url: string;\n                    if (symbolInfo) {\n                        if (symbolInfo.file && (symbolInfo.scope !== SymbolScope.Global)) {\n                            url = `disassembly:///${symbolInfo.file}:::${symbolInfo.name}.cdasm`;\n                        }\n                        else {\n                            url = `disassembly:///${symbolInfo.name}.cdasm`;\n                        }\n                        if (url === this.activeEditorPath) { disassemble = true; }\n                    }\n                }\n                \n                try {\n                    if (disassemble) {\n                        const symbolInfo = await this.getDisassemblyForFunction(element.function, element.fileName);\n                        let line = -1;\n                        symbolInfo.instructions.forEach((inst, idx) => {\n                            if (inst.address === element.address) { line = idx + 1; }\n                        });\n\n                        if (line !== -1) {\n                            let fname: string;\n                            if (symbolInfo.file && (symbolInfo.scope !== SymbolScope.Global)) {\n                                fname = `${symbolInfo.file}:::${symbolInfo.name}.cdasm`;\n                            }\n                            else {\n                                fname = `${symbolInfo.name}.cdasm`;\n                            }\n                            \n                            const url = 'disassembly:///' + fname;\n                            ret.push(new StackFrame(stackId, `${element.function}@${element.address}`, new Source(fname, url), line, 0));\n                        }\n                        else {\n                            ret.push(new StackFrame(stackId, element.function + '@' + element.address, null, element.line, 0));\n                        }\n                    }\n                    else {\n                        ret.push(new StackFrame(stackId, element.function + '@' + element.address, new Source(element.fileName, file), element.line, 0));\n                    }\n                }\n                catch (e) {\n                    ret.push(new StackFrame(stackId, element.function + '@' + element.address, null, element.line, 0));\n                }\n            }\n\n            response.body = {\n                stackFrames: ret\n            };\n            this.sendResponse(response);\n        }\n        catch (err) {\n            this.sendErrorResponse(response, 12, `Failed to get Stack Trace: ${err.toString()}`);\n        }\n    }\n\n    protected configurationDoneRequest(\n        response: DebugProtocol.ConfigurationDoneResponse,\n        args: DebugProtocol.ConfigurationDoneArguments\n    ): void {\n        this.sendResponse(response);\n        this.onConfigDone.emit('done');\n    }\n\n    protected scopesRequest(response: DebugProtocol.ScopesResponse, args: DebugProtocol.ScopesArguments): void {\n        const scopes = new Array<Scope>();\n        scopes.push(new Scope('Local', parseInt(args.frameId as any), false));\n        scopes.push(new Scope('Global', GLOBAL_HANDLE_ID, false));\n\n        const staticId = STATIC_HANDLES_START + parseInt(args.frameId as any);\n        scopes.push(new Scope('Static', staticId, false));\n        this.floatingVariableMap[staticId] = {};         // Clear any previously stored stuff for this scope\n\n        response.body = {\n            scopes: scopes\n        };\n        this.sendResponse(response);\n    }\n\n    private async globalVariablesRequest(response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments): Promise<void> {\n        const symbolInfo: SymbolInformation[] = this.symbolTable.getGlobalVariables();\n\n        const globals: DebugProtocol.Variable[] = [];\n        try {\n            for (const symbol of symbolInfo) {\n                const varObjName = `global_var_${symbol.name}`;\n                let varObj: VariableObject;\n                try {\n                    const changes = await this.miDebugger.varUpdate(varObjName, -1, -1);\n                    const changelist = changes.result('changelist');\n                    changelist.forEach((change) => {\n                        const name = MINode.valueOf(change, 'name');\n                        const vId = this.variableHandlesReverse[name];\n                        const v = this.variableHandles.get(vId) as any;\n                        v.applyChanges(change);\n                    });\n                    const varId = this.variableHandlesReverse[varObjName];\n                    varObj = this.variableHandles.get(varId) as any;\n                }\n                catch (err) {\n                    try {\n                        if (err instanceof MIError && err.message === 'Variable object not found') {\n                            varObj = await this.miDebugger.varCreate(symbol.name, varObjName);\n                            const varId = this.findOrCreateVariable(varObj);\n                            varObj.exp = symbol.name;\n                            varObj.id = varId;\n                        } else {\n                            throw err;\n                        }\n                    }\n                    catch (err) {\n                        if (this.args.showDevDebugOutput) {\n                            this.handleMsg('stderr', `Could not create global variable ${symbol.name}\\n`);\n                            this.handleMsg('stderr', `Error: ${err}\\n`);\n                        }\n                        varObj = null;\n                    }\n                }\n\n                if (varObj) {\n                    this.putFloatingVariable(args.variablesReference, symbol.name, varObj);\n                    globals.push(varObj.toProtocolVariable());\n                }\n            }\n\n            response.body = { variables: globals };\n            this.sendResponse(response);\n        }\n        catch (err) {\n            this.sendErrorResponse(response, 1, `Could not get global variable information: ${err}`);\n        }\n    }\n\n    private createStaticVarName(fHash: string, name: string): string {\n        const varObjName = `static_var_${name}_${fHash}`;\n        return varObjName;\n    }\n\n    /*\n    // floatingVariableMap is meant for things that are not relevant to the current thread/frame.\n    // It is organized by ths scope reference and then a map is held for each simple name.\n    // Technically, we can put even non global/static variable here, but cleanup can be an issue.\n    //\n    // See also scopesRequest().\n    //\n    // Note that this becomes important in implementing set-variable where not much info is available\n    */\n    private floatingVariableMap: {[scopeId: number]: {[name: string]: VariableObject}} = {};\n\n    private putFloatingVariable(scopeId: number, name: string, varObj: VariableObject): void {\n        const scopeMap = this.floatingVariableMap[scopeId] || {};\n        scopeMap[name] = varObj;\n        this.floatingVariableMap[scopeId] = scopeMap;\n    }\n\n    private getFloatingVariable(scopeId: number, name: string): VariableObject {\n        const scopeMap = this.floatingVariableMap[scopeId];\n        const ret = scopeMap ? scopeMap[name] : null;\n        return ret;\n    }\n\n    private async staticVariablesRequest(\n        threadId: number,\n        frameId: number,\n        response: DebugProtocol.VariablesResponse,\n        args: DebugProtocol.VariablesArguments\n    ): Promise<void> {\n        const statics: DebugProtocol.Variable[] = [];\n\n        try {\n            const frame = await this.miDebugger.getFrame(threadId, frameId);\n            const file = frame.fileName;\n            const staticSymbols = this.symbolTable.getStaticVariables(file);\n\n            const hasher = crypto.createHash('sha256');\n            hasher.update(file);\n            const fHash = hasher.digest('hex');\n\n            for (const symbol of staticSymbols) {\n                const varObjName = this.createStaticVarName(fHash, symbol.name);\n                let varObj: VariableObject;\n                try {\n                    const changes = await this.miDebugger.varUpdate(varObjName, -1, -1);\n                    const changelist = changes.result('changelist');\n                    changelist.forEach((change) => {\n                        const name = MINode.valueOf(change, 'name');\n                        const vId = this.variableHandlesReverse[name];\n                        const v = this.variableHandles.get(vId) as any;\n                        v.applyChanges(change);\n                    });\n                    const varId = this.variableHandlesReverse[varObjName];\n                    varObj = this.variableHandles.get(varId) as any;\n                }\n                catch (err) {\n                    try {\n                        // Not all static variables found via objdump can be found with gdb. Happens\n                        // with function/block scoped static variables (objdump uses one name and gdb uses another)\n                        // Try to report what we can. Others show up under the Locals section hopefully.\n                        if (err instanceof MIError && err.message === 'Variable object not found') {\n                            varObj = await this.miDebugger.varCreate(symbol.name, varObjName);\n                            const varId = this.findOrCreateVariable(varObj);\n                            varObj.exp = symbol.name;\n                            varObj.id = varId;\n                        } else {\n                            throw err;\n                        }\n                    }\n                    catch (err) {\n                        if (this.args.showDevDebugOutput) {\n                            this.handleMsg('stderr', `Could not create static variable ${file}:${symbol.name}\\n`);\n                            this.handleMsg('stderr', `Error: ${err}\\n`);\n                        }\n                        varObj = null;\n                    }\n                }\n\n                if (varObj) {\n                    this.putFloatingVariable(args.variablesReference, symbol.name, varObj);\n                    statics.push(varObj.toProtocolVariable());\n                }\n            }\n\n            response.body = { variables: statics };\n            this.sendResponse(response);\n        }\n        catch (err) {\n            this.sendErrorResponse(response, 1, `Could not get static variable information: ${err}`);\n        }\n    }\n\n    private createVariable(arg, options?): number {\n        if (options) {\n            return this.variableHandles.create(new ExtendedVariable(arg, options));\n        }\n        else {\n            return this.variableHandles.create(arg);\n        }\n    }\n\n    private findOrCreateVariable(varObj: VariableObject): number {\n        let id: number;\n        if (this.variableHandlesReverse.hasOwnProperty(varObj.name)) {\n            id = this.variableHandlesReverse[varObj.name];\n        }\n        else {\n            id = this.createVariable(varObj);\n            this.variableHandlesReverse[varObj.name] = id;\n        }\n        return varObj.isCompound() ? id : 0;\n    }\n\n    protected createStackVarName(name: string, varRef: number) {\n        return `var_${name}_${varRef}`;\n    }\n\n    private async stackVariablesRequest(\n        response: DebugProtocol.VariablesResponse,\n        args: DebugProtocol.VariablesArguments\n    ): Promise<void> {\n        const [threadId, frameId] = GDBDebugSession.decodeReference(args.variablesReference);\n        const variables: DebugProtocol.Variable[] = [];\n        let stack: Variable[];\n        try {\n            stack = await this.miDebugger.getStackVariables(threadId, frameId);\n            for (const variable of stack) {\n                try {\n                    const varObjName = this.createStackVarName(variable.name, args.variablesReference);\n                    let varObj: VariableObject;\n                    try {\n                        const changes = await this.miDebugger.varUpdate(varObjName, threadId, frameId);\n                        const changelist = changes.result('changelist');\n                        changelist.forEach((change) => {\n                            const name = MINode.valueOf(change, 'name');\n                            const vId = this.variableHandlesReverse[name];\n                            const v = this.variableHandles.get(vId) as any;\n                            v.applyChanges(change);\n                        });\n                        const varId = this.variableHandlesReverse[varObjName];\n                        varObj = this.variableHandles.get(varId) as any;\n                    }\n                    catch (err) {\n                        if (err instanceof MIError && err.message === 'Variable object not found') {\n                            // Create variable in current frame/thread context. Matters when we have to set the variable */\n                            varObj = await this.miDebugger.varCreate(variable.name, varObjName, '*');\n                            const varId = this.findOrCreateVariable(varObj);\n                            varObj.exp = variable.name;\n                            varObj.id = varId;\n                        }\n                        else {\n                            throw err;\n                        }\n                    }\n                    variables.push(varObj.toProtocolVariable());\n                }\n                catch (err) {\n                    variables.push({\n                        name: variable.name,\n                        value: `<${err}>`,\n                        variablesReference: 0\n                    });\n                }\n            }\n            response.body = {\n                variables: variables\n            };\n            this.sendResponse(response);\n        }\n        catch (err) {\n            this.sendErrorResponse(response, 1, `Could not expand variable: ${err}`);\n        }\n    }\n\n    private async variableMembersRequest(id: string, response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments): Promise<void> {\n        // Variable members\n        let variable;\n        try {\n            variable = await this.miDebugger.evalExpression(JSON.stringify(id), -1, -1);\n            try {\n                let expanded = expandValue(this.createVariable.bind(this), variable.result('value'), id, variable);\n                if (!expanded) {\n                    this.sendErrorResponse(response, 2, 'Could not expand variable');\n                }\n                else {\n                    if (typeof expanded[0] === 'string') {\n                        expanded = [\n                            {\n                                name: '<value>',\n                                value: prettyStringArray(expanded),\n                                variablesReference: 0\n                            }\n                        ];\n                    }\n                    response.body = {\n                        variables: expanded\n                    };\n                    this.sendResponse(response);\n                }\n            }\n            catch (e) {\n                this.sendErrorResponse(response, 2, `Could not expand variable: ${e}`);\n            }\n        }\n        catch (err) {\n            this.sendErrorResponse(response, 1, `Could not expand variable: ${err}`);\n        }\n    }\n\n    protected async variablesRequest(response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments): Promise<void> {\n        let id: number | string | VariableObject | ExtendedVariable;\n\n        /*\n        // How to deal with multiple anonymous unions/structs in the same scope. gdb uses the same display name for\n        // all of them. VSCode requires that all children have unique display names. So, we make them unique. The next\n        // issue is should we use the programming model which essentially flattens the union/struct or the natural one.\n        // We have three objectives we have to satisfy\n        //\n        // 1. Does it display correctly?\n        // 2. Can I do 'Add to Watch' or 'Copy as Expression' in the Variables Window?\n        // 3. Can I set a value on a field?\n        //\n        // We meet all three objectives, whether we flatten or not. I believe the natural model is better\n        // because it is closely aligned with the source code. Visual Studio and Eclipse use the flattened model.\n        // So, we have a config option to let the user decide. Not many people uae multiple anonymous stuff but\n        // Zephyr OS does and since it is legal C, we have to try our best to support it.\n        //\n        // Note: VSCode has a bug where if a union member is modified by the user, it does not refresh the Variables window\n        // but it will re-evaluate everything in the Watch window. Basically, it has no concept of a union and there is no\n        // way I know of to force a refresh\n        */\n\n        if (args.variablesReference === GLOBAL_HANDLE_ID) {\n            return this.globalVariablesRequest(response, args);\n        }\n        else if (args.variablesReference >= STATIC_HANDLES_START && args.variablesReference <= STATIC_HANDLES_FINISH) {\n            const [threadId, frameId] = GDBDebugSession.decodeReference(args.variablesReference);\n            return this.staticVariablesRequest(threadId, frameId, response, args);\n        }\n        else if (args.variablesReference >= STACK_HANDLES_START && args.variablesReference < STACK_HANDLES_FINISH) {\n            return this.stackVariablesRequest(response, args);\n        }\n        else {\n            id = this.variableHandles.get(args.variablesReference);\n\n            if (typeof id === 'string') {\n                return this.variableMembersRequest(id, response, args);\n            }\n            else if (typeof id === 'object') {\n                if (id instanceof VariableObject) {\n                    const pvar = id as VariableObject;\n\n                    // Variable members\n                    let children: VariableObject[];\n                    const childMap: {[name: string]: number} = {};\n                    try {\n                        children = await this.miDebugger.varListChildren(id.name, this.args.flattenAnonymous);\n                        const vars = children.map((child) => {\n                            const varId = this.findOrCreateVariable(child);\n                            child.id = varId;\n                            if (/^\\d+$/.test(child.exp)) {\n                                child.fullExp = `${pvar.fullExp || pvar.exp}[${child.exp}]`;\n                            }\n                            else {\n                                let suffix = '.' + child.exp;                   // A normal suffix\n                                if (child.exp.startsWith('<anonymous')) {       // We can have duplicates!!\n                                    const prev = childMap[child.exp];\n                                    if (prev) {\n                                        childMap[child.exp] = prev + 1;\n                                        child.exp += '#' + prev.toString(10);\n                                    }\n                                    childMap[child.exp] = 1;\n                                    suffix = '';    // Anonymous ones don't have a suffix. Have to use parent name\n                                } else {\n                                    // The full-name is not always derivable from the parent and child info. Esp. children\n                                    // of anonymous stuff. Might as well store all of them or set-value will not work.\n                                    pvar.children[child.exp] = child.name;\n                                }\n                                child.fullExp = `${pvar.fullExp || pvar.exp}${suffix}`;\n                            }\n                            return child.toProtocolVariable();\n                        });\n\n                        response.body = {\n                            variables: vars\n                        };\n                        this.sendResponse(response);\n                    }\n                    catch (err) {\n                        this.sendErrorResponse(response, 1, `Could not expand variable: ${err}`);\n                    }\n                }\n                else if (id instanceof ExtendedVariable) {\n                    const variables: DebugProtocol.Variable[] = [];\n\n                    const varReq = id;\n                    if (varReq.options.arg) {\n                        const strArr = [];\n                        let argsPart = true;\n                        let arrIndex = 0;\n                        const submit = () => {\n                            response.body = {\n                                variables: strArr\n                            };\n                            this.sendResponse(response);\n                        };\n                        const addOne = async () => {\n                            const variable = await this.miDebugger.evalExpression(JSON.stringify(`${varReq.name}+${arrIndex})`), -1, -1);\n                            try {\n                                const expanded = expandValue(this.createVariable.bind(this), variable.result('value'), varReq.name, variable);\n                                if (!expanded) {\n                                    this.sendErrorResponse(response, 15, 'Could not expand variable');\n                                }\n                                else {\n                                    if (typeof expanded === 'string') {\n                                        if (expanded === '<nullptr>') {\n                                            if (argsPart) { argsPart = false; }\n                                            else { return submit(); }\n                                        }\n                                        else if (expanded[0] !== '\"') {\n                                            strArr.push({\n                                                name: '[err]',\n                                                value: expanded,\n                                                variablesReference: 0\n                                            });\n                                            return submit();\n                                        }\n                                        strArr.push({\n                                            name: `[${(arrIndex++)}]`,\n                                            value: expanded,\n                                            variablesReference: 0\n                                        });\n                                        addOne();\n                                    }\n                                    else {\n                                        strArr.push({\n                                            name: '[err]',\n                                            value: expanded,\n                                            variablesReference: 0\n                                        });\n                                        submit();\n                                    }\n                                }\n                            }\n                            catch (e) {\n                                this.sendErrorResponse(response, 14, `Could not expand variable: ${e}`);\n                            }\n                        };\n                        addOne();\n                    }\n                    else {\n                        this.sendErrorResponse(response, 13, `Unimplemented variable request options: ${JSON.stringify(varReq.options)}`);\n                    }\n                }\n                else {\n                    response.body = {\n                        variables: id\n                    };\n                    this.sendResponse(response);\n                }\n            }\n            else {\n                response.body = {\n                    variables: []\n                };\n                this.sendResponse(response);\n            }\n        }\n    }\n\n    protected pauseRequest(response: DebugProtocol.PauseResponse, args: DebugProtocol.PauseArguments): void {\n        this.miDebugger.interrupt().then((done) => {\n            this.sendResponse(response);\n        }, (msg) => {\n            this.sendErrorResponse(response, 3, `Could not pause: ${msg}`);\n        });\n    }\n\n    protected continueRequest(response: DebugProtocol.ContinueResponse, args: DebugProtocol.ContinueArguments): void {\n        this.miDebugger.continue(args.threadId).then((done) => {\n            response.body = { allThreadsContinued: true };\n            this.sendResponse(response);\n        }, (msg) => {\n            this.sendErrorResponse(response, 2, `Could not continue: ${msg}`);\n        });\n    }\n\n    protected async stepInRequest(response: DebugProtocol.NextResponse, args: DebugProtocol.NextArguments): Promise<void> {\n        try {\n            let assemblyMode = this.forceDisassembly;\n            if (!assemblyMode) {\n                const frame = await this.miDebugger.getFrame(args.threadId, 0);\n                assemblyMode = !(await this.checkFileExists(frame.file));\n\n                if (this.activeEditorPath && this.activeEditorPath.startsWith('disassembly:///')) {\n                    const symbolInfo = this.symbolTable.getFunctionByName(frame.function, frame.fileName);\n                    let url: string;\n                    if (symbolInfo.file && (symbolInfo.scope !== SymbolScope.Global)) {\n                        url = `disassembly:///${symbolInfo.file}:::${symbolInfo.name}.cdasm`;\n                    }\n                    else {\n                        url = `disassembly:///${symbolInfo.name}.cdasm`;\n                    }\n                    if (url === this.activeEditorPath) { assemblyMode = true; }\n                }\n            }\n\n            const done = await this.miDebugger.step(args.threadId, assemblyMode);\n            this.sendResponse(response);\n        }\n        catch (msg) {\n            this.sendErrorResponse(response, 6, `Could not step over: ${msg}`);\n        }\n    }\n\n    protected stepOutRequest(response: DebugProtocol.NextResponse, args: DebugProtocol.NextArguments): void {\n        this.miDebugger.stepOut(args.threadId).then((done) => {\n            this.sendResponse(response);\n        }, (msg) => {\n            this.sendErrorResponse(response, 5, `Could not step out: ${msg}`);\n        });\n    }\n\n    protected async nextRequest(response: DebugProtocol.NextResponse, args: DebugProtocol.NextArguments): Promise<void> {\n        try {\n            let assemblyMode = this.forceDisassembly;\n            if (!assemblyMode) {\n                const frame = await this.miDebugger.getFrame(args.threadId, 0);\n                assemblyMode = !(await this.checkFileExists(frame.file));\n\n                if (this.activeEditorPath && this.activeEditorPath.startsWith('disassembly:///')) {\n                    const symbolInfo = this.symbolTable.getFunctionByName(frame.function, frame.fileName);\n                    let url: string;\n                    if (symbolInfo.file && (symbolInfo.scope !== SymbolScope.Global)) {\n                        url = `disassembly:///${symbolInfo.file}:::${symbolInfo.name}.cdasm`;\n                    }\n                    else {\n                        url = `disassembly:///${symbolInfo.name}.cdasm`;\n                    }\n                    if (url === this.activeEditorPath) { assemblyMode = true; }\n                }\n            }\n\n            const done = await this.miDebugger.next(args.threadId, assemblyMode);\n            this.sendResponse(response);\n        }\n        catch (msg) {\n            this.sendErrorResponse(response, 6, `Could not step over: ${msg}`);\n        }\n    }\n\n    protected checkFileExists(name: string): Promise<boolean> {\n        if (!name) { return Promise.resolve(false); }\n\n        if (this.fileExistsCache.has(name)) { // Check cache\n            return Promise.resolve(this.fileExistsCache.get(name));\n        }\n\n        return new Promise((resolve, reject) => {\n            fs.exists(name, (exists) => {\n                this.fileExistsCache.set(name, exists);\n                resolve(exists);\n            });\n        });\n    }\n\n    protected async evaluateRequest(response: DebugProtocol.EvaluateResponse, args: DebugProtocol.EvaluateArguments): Promise<void> {\n        const createVariable = (arg, options?) => {\n            if (options) {\n                return this.variableHandles.create(new ExtendedVariable(arg, options));\n            }\n            else {\n                return this.variableHandles.create(arg);\n            }\n        };\n\n        const findOrCreateVariable = (varObj: VariableObject): number => {\n            let id: number;\n            if (this.variableHandlesReverse.hasOwnProperty(varObj.name)) {\n                id = this.variableHandlesReverse[varObj.name];\n            }\n            else {\n                id = createVariable(varObj);\n                this.variableHandlesReverse[varObj.name] = id;\n            }\n            return varObj.isCompound() ? id : 0;\n        };\n\n        // Spec says if 'frameId' is specified, evaluate in the scope specified or in the global scope. Well,\n        // we don't have a way to specify global scope ... use current thread then.\n        let threadId = this.currentThreadId;\n        let frameId = 0;\n        if (args.frameId) {     // Should always be valid\n            [threadId, frameId] = GDBDebugSession.decodeReference(args.frameId);\n            if (traceThreads) {\n                this.handleMsg('log', `**** evaluateRequest: ${args.context} '${args.expression}' in thread#${threadId} frame#${frameId}\\n`);\n            }\n        } else {\n            // In practice, never seen this unless it comes from a custom request\n            this.handleMsg('log', `Thread Warning: ${args.context}: eval. expression '${args.expression}' with no thread context. Using default\\n`);\n        }\n\n        if (args.context === 'watch') {\n            try {\n                const exp = args.expression;\n                const hasher = crypto.createHash('sha256');\n                hasher.update(exp);\n                const watchName = hasher.digest('hex');\n                const varObjName = `watch_${watchName}`;\n                let varObj: VariableObject;\n                try {\n                    const changes = await this.miDebugger.varUpdate(varObjName, threadId, frameId);\n                    const changelist = changes.result('changelist');\n                    changelist.forEach((change) => {\n                        const name = MINode.valueOf(change, 'name');\n                        const vId = this.variableHandlesReverse[name];\n                        const v = this.variableHandles.get(vId) as any;\n                        v.applyChanges(change);\n                    });\n                    const varId = this.variableHandlesReverse[varObjName];\n                    varObj = this.variableHandles.get(varId) as any;\n                    response.body = {\n                        result: varObj.value,\n                        variablesReference: varObj.id\n                    };\n                }\n                catch (err) {\n                    if (err instanceof MIError && err.message === 'Variable object not found') {\n                        varObj = await this.miDebugger.varCreate(exp, varObjName, '@');  // Create floating variable\n                        const varId = findOrCreateVariable(varObj);\n                        varObj.exp = exp;\n                        varObj.id = varId;\n                        response.body = {\n                            result: varObj.value,\n                            variablesReference: varObj.id\n                        };\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n                \n                this.sendResponse(response);\n            }\n            catch (err) {\n                response.body = {\n                    result: `<${err.toString()}>`,\n                    variablesReference: 0\n                };\n                this.sendErrorResponse(response, 7, err.toString());\n            }\n        }\n        else if (args.context === 'hover') {\n            try {\n                const res = await this.miDebugger.evalExpression(args.expression, threadId, frameId);\n                response.body = {\n                    variablesReference: 0,\n                    result: res.result('value')\n                };\n                this.sendResponse(response);\n            }\n            catch (e) {\n                this.sendErrorResponse(response, 7, e.toString());\n            }\n        }\n        else {\n            // REPL: Set the proper thread/frame context before sending command to gdb. We don't know\n            // what the command is but it needs to be run in the proper context.\n            this.miDebugger.sendCommand(`thread-select ${threadId}`);\n            this.miDebugger.sendCommand(`stack-select-frame ${frameId}`);\n            this.miDebugger.sendUserInput(args.expression).then((output) => {\n                if (typeof output === 'undefined') {\n                    response.body = {\n                        result: '',\n                        variablesReference: 0\n                    };\n                }\n                else {\n                    response.body = {\n                        result: JSON.stringify(output),\n                        variablesReference: 0\n                    };\n                }\n                this.sendResponse(response);\n            }, (msg) => {\n                this.sendErrorResponse(response, 8, msg.toString());\n            });\n        }\n    }\n}\n\nfunction prettyStringArray(strings) {\n    if (typeof strings === 'object') {\n        if (strings.length !== undefined) {\n            return strings.join(', ');\n        }\n        else {\n            return JSON.stringify(strings);\n        }\n    }\n    else { return strings; }\n}\n\nDebugSession.run(GDBDebugSession);\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { GDBServerController, ConfigurationArguments, calculatePortMask, SWOConfigureEvent } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nconst commandExistsSync = require('command-exists').sync;\nconst EXECUTABLE_NAMES = ['JLinkGDBServerCLExe', 'JLinkGDBServerCL', 'JLinkGDBServer'];\n\nexport class JLinkServerController extends EventEmitter implements GDBServerController {\n    public portsNeeded: string[] = ['gdbPort', 'swoPort', 'consolePort'];\n    public name: 'J-Link';\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n    \n    public initCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        return [\n            `target-select extended-remote localhost:${gdbport}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'interpreter-exec console \"monitor reset\"',\n            'target-download',\n            'interpreter-exec console \"monitor reset\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor halt\"',\n            'interpreter-exec console \"monitor reset\"'\n        ];\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        const commands = [];\n        if (this.args.swoConfig.enabled) {\n            const swocommands = this.SWOConfigurationCommands();\n            commands.push(...swocommands);\n        }\n        return commands;\n    }\n\n    private SWOConfigurationCommands(): string[] {\n        const portMask = '0x' + calculatePortMask(this.args.swoConfig.decoders).toString(16);\n        const swoFrequency = this.args.swoConfig.swoFrequency | 0;\n        const cpuFrequency = this.args.swoConfig.cpuFrequency | 0;\n        \n        const commands: string[] = [\n            `monitor SWO EnableTarget ${cpuFrequency} ${swoFrequency} ${portMask} 0`,\n            'DisableITMPorts 0xFFFFFFFF',\n            `EnableITMPorts ${portMask}`,\n            'EnableDWTSync',\n            'ITMSyncEnable'\n        ];\n\n        commands.push(this.args.swoConfig.profile ? 'EnablePCSample' : 'DisablePCSample');\n        \n        return commands.map((c) => `interpreter-exec console \"${c}\"`);\n    }\n\n    public serverExecutable() {\n        if (this.args.serverpath) { return this.args.serverpath; }\n        else {\n            if (os.platform() === 'win32') {\n                return 'JLinkGDBServerCL.exe';\n            }\n            else {\n                for (const name in EXECUTABLE_NAMES) {\n                    if (commandExistsSync(name)) { return name; }\n                }\n                return 'JLinkGDBServer';\n            }\n        }\n    }\n    \n    public serverArguments(): string[] {\n        const gdbport = this.ports['gdbPort'];\n        const swoport = this.ports['swoPort'];\n        const consoleport = this.ports['consolePort'];\n\n        let cmdargs = [\n            '-if', this.args.interface,\n            '-port', gdbport.toString(),\n            '-swoport', swoport.toString(),\n            '-telnetport', consoleport.toString(),\n            '-device', this.args.device\n        ];\n\n        if (this.args.serialNumber) {\n            cmdargs.push('-select', `usb=${this.args.serialNumber}`);\n        }\n        else if (this.args.ipAddress) {\n            cmdargs.push('-select', `ip=${this.args.ipAddress}`);\n        }\n\n        if (this.args.rtos) {\n            cmdargs.push('-rtos', this.args.rtos);\n        }\n\n        if (this.args.jlinkscript) {\n            cmdargs.push('-jlinkscriptfile', this.args.jlinkscript);\n        }\n\n        if (this.args.serverArgs) {\n            cmdargs = cmdargs.concat(this.args.serverArgs);\n        }\n\n        return cmdargs;\n    }\n\n    public initMatch(): RegExp {\n        return /Waiting for GDB connection\\.\\.\\./g;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {\n        if (this.args.swoConfig.enabled) {\n            if (this.args.swoConfig.source === 'probe') {\n                this.emit('event', new SWOConfigureEvent({ type: 'socket', port: this.ports['swoPort'] }));\n            }\n            else {\n                this.emit('event', new SWOConfigureEvent({\n                    type: 'serial',\n                    device: this.args.swoConfig.source,\n                    baudRate: this.args.swoConfig.swoFrequency\n                }));\n            }\n        }\n    }\n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { GDBServerController, ConfigurationArguments, SWOConfigureEvent, calculatePortMask } from './common';\nimport * as os from 'os';\nimport * as tmp from 'tmp';\nimport * as fs from 'fs';\nimport * as ChildProcess from 'child_process';\nimport { EventEmitter } from 'events';\n\nexport class OpenOCDServerController extends EventEmitter implements GDBServerController {\n    public portsNeeded = ['gdbPort'];\n    public name = 'OpenOCD';\n    private swoPath: string;\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n        this.swoPath = tmp.tmpNameSync();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n\n    public initCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        return [\n            `target-select extended-remote localhost:${gdbport}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor reset halt\"',\n            'target-download',\n            'interpreter-exec console \"monitor reset halt\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor reset halt\"'\n        ];\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        const commands = [];\n        if (this.args.swoConfig.enabled) {\n            const swocommands = this.SWOConfigurationCommands();\n            commands.push(...swocommands);\n        }\n        return commands;\n    }\n\n    private SWOConfigurationCommands(): string[] {\n        const portMask = '0x' + calculatePortMask(this.args.swoConfig.decoders).toString(16);\n        const swoFrequency = this.args.swoConfig.swoFrequency;\n        const cpuFrequency = this.args.swoConfig.cpuFrequency;\n\n        const ratio = Math.floor(cpuFrequency / swoFrequency) - 1;\n        \n        const commands: string[] = [\n            'EnableITMAccess',\n            `BaseSWOSetup ${ratio}`,\n            'SetITMId 1',\n            'ITMDWTTransferEnable',\n            'DisableITMPorts 0xFFFFFFFF',\n            `EnableITMPorts ${portMask}`,\n            'EnableDWTSync',\n            'ITMSyncEnable',\n            'ITMGlobalEnable'\n        ];\n\n        commands.push(this.args.swoConfig.profile ? 'EnablePCSample' : 'DisablePCSample');\n        \n        return commands.map((c) => `interpreter-exec console \"${c}\"`);\n    }\n\n    public serverExecutable(): string {\n        if (this.args.serverpath) { return this.args.serverpath; }\n        else {\n            return os.platform() === 'win32' ? 'openocd.exe' : 'openocd';\n        }\n    }\n\n    public serverArguments(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        let serverargs = [];\n\n        serverargs.push('-c', `gdb_port ${gdbport}`);\n\n        this.args.searchDir.forEach((cs, idx) => {\n            serverargs.push('-s', cs);\n        });\n\n        if (this.args.searchDir.length === 0) {\n            serverargs.push('-s', this.args.cwd);\n        }\n\n        for (const cmd of this.args.openOCDPreConfigLaunchCommands || []) {\n            serverargs.push('-c', cmd);\n        }\n\n        this.args.configFiles.forEach((cf, idx) => {\n            serverargs.push('-f', cf);\n        });\n\n        if (this.args.rtos) {\n            const tmpCfgPath = tmp.tmpNameSync();\n            fs.writeFileSync(tmpCfgPath, `$_TARGETNAME configure -rtos ${this.args.rtos}\\n`, 'utf8');\n            serverargs.push('-f', tmpCfgPath);\n        }\n\n        if (this.args.serverArgs) {\n            serverargs = serverargs.concat(this.args.serverArgs);\n        }\n\n        const commands = [];\n\n        if (this.args.swoConfig.enabled) {\n            let tpiuIntExt;\n            if (os.platform() === 'win32') {\n                this.swoPath = this.swoPath.replace(/\\\\/g, '/');\n            }\n            if (this.args.swoConfig.source === 'probe') {\n                tpiuIntExt = `internal ${this.swoPath}`;\n            }\n            else {\n                tpiuIntExt = 'external';\n            }\n            // tslint:disable-next-line:max-line-length\n            commands.push(`tpiu config ${tpiuIntExt} uart off ${this.args.swoConfig.cpuFrequency} ${this.args.swoConfig.swoFrequency}`);\n        }\n\n        if (commands.length > 0) {\n            serverargs.push('-c', commands.join('; '));\n        }\n\n        for (const cmd of this.args.openOCDLaunchCommands || []) {\n            serverargs.push('-c', cmd);\n        }\n\n        return serverargs;\n    }\n\n    public initMatch(): RegExp {\n        /*\n        // Following will work with or without the -d flag to openocd or using the tcl\n        // command `debug_level 3`; and we are looking specifically for gdb port(s) opening up\n        // When debug is enabled, you get too many matches looking for the cpu. This message\n        // has been there atleast since 2016-12-19\n        */\n        return /Info\\s:[^\\n]*Listening on port \\d+ for gdb connection/i;\n    }\n\n    public serverLaunchStarted(): void {\n        if (this.args.swoConfig.enabled && this.args.swoConfig.source === 'probe' && os.platform() !== 'win32') {\n            const mkfifoReturn = ChildProcess.spawnSync('mkfifo', [this.swoPath]);\n            this.emit('event', new SWOConfigureEvent({ type: 'fifo', path: this.swoPath }));\n        }\n    }\n\n    public serverLaunchCompleted(): void {\n        if (this.args.swoConfig.enabled) {\n            if (this.args.swoConfig.source === 'probe' && os.platform() === 'win32') {\n                this.emit('event', new SWOConfigureEvent({ type: 'file', path: this.swoPath }));\n            }\n            else if (this.args.swoConfig.source !== 'probe') {\n                this.emit('event', new SWOConfigureEvent({\n                    type: 'serial',\n                    device: this.args.swoConfig.source,\n                    baudRate: this.args.swoConfig.swoFrequency\n                }));\n            }\n        }\n    }\n\n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { GDBServerController, ConfigurationArguments, calculatePortMask, SWOConfigureEvent } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nconst commandExistsSync = require('command-exists').sync;\n\nexport class PEServerController extends EventEmitter implements GDBServerController {\n    public portsNeeded: string[] = ['gdbPort', 'swoPort', 'consolePort'];\n    public name: 'PE';\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n    \n    public initCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        return [\n            `target-select extended-remote localhost:${gdbport}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor _reset\"',\n            'target-download',\n            'interpreter-exec console \"monitor _reset\"',\n            'enable-pretty-printing'\n        ];\n\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'enable-pretty-printing'\n        ];\n        \n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor _reset\"'\n        ];\n\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        return [];\n    }\n\n    public serverExecutable() {\n        \n        console.log('Getting Exec');\n        if (this.args.serverpath) { return this.args.serverpath; }\n        else {\n            if (os.platform() === 'win32') {\n                return 'pegdbserver_console.exe';\n            }\n            else {\n                return 'pegdbserver_console';\n            }\n        }\n    }\n\n    public serverArguments(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        let serverargs = [];\n\n        serverargs.push('-startserver');\n        serverargs.push('-singlesession');\n        serverargs.push(`-device=${this.args.device}`);\n        serverargs.push(`-serverport=${gdbport}`);\n        \n        if (this.args.ipAddress) {\n            serverargs.push(`-serverip=${this.args.ipAddress}`);\n        }\n\n        if (this.args.rtos) {\n            serverargs.push(`-kernal=${this.args.rtos}`);\n        }\n\n        if (this.args.interface) {\n            serverargs.push(`-interface=${this.args.interface}`);\n        }\n\n        if (this.args.configFiles) {\n            serverargs.push(`-configfile=${this.args.configFiles[0]}`);\n        }\n\n        if (this.args.serverArgs) {\n            serverargs = serverargs.concat(this.args.serverArgs);\n        }\n\n        return serverargs;\n    }\n\n    public initMatch(): RegExp {\n        return /All Servers Running/g;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {}\n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { ConfigurationArguments, GDBServerController, SWOConfigureEvent, calculatePortMask } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nexport class PyOCDServerController extends EventEmitter implements GDBServerController {\n    public readonly name: string = 'PyOCD';\n    public readonly portsNeeded: string[] = ['gdbPort'];\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n\n    public initCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        return [\n            `target-select extended-remote localhost:${gdbport}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor reset halt\"',\n            'target-download',\n            'interpreter-exec console \"monitor reset halt\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor reset\"'\n        ];\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        const commands = [];\n        if (this.args.swoConfig.enabled && this.args.swoConfig.source !== 'probe') {\n            const swocommands = this.SWOConfigurationCommands();\n            commands.push(...swocommands);\n        }\n        return commands;\n    }\n\n    private SWOConfigurationCommands(): string[] {\n        const portMask = '0x' + calculatePortMask(this.args.swoConfig.decoders).toString(16);\n        const swoFrequency = this.args.swoConfig.swoFrequency;\n        const cpuFrequency = this.args.swoConfig.cpuFrequency;\n\n        const ratio = Math.floor(cpuFrequency / swoFrequency) - 1;\n        \n        const commands: string[] = [\n            'EnableITMAccess',\n            `BaseSWOSetup ${ratio}`,\n            'SetITMId 1',\n            'ITMDWTTransferEnable',\n            'DisableITMPorts 0xFFFFFFFF',\n            `EnableITMPorts ${portMask}`,\n            'EnableDWTSync',\n            'ITMSyncEnable',\n            'ITMGlobalEnable'\n        ];\n\n        commands.push(this.args.swoConfig.profile ? 'EnablePCSample' : 'DisablePCSample');\n        \n        return commands.map((c) => `interpreter-exec console \"${c}\"`);\n    }\n\n    public serverExecutable(): string {\n        return this.args.serverpath ? this.args.serverpath : 'pyocd-gdbserver';\n    }\n\n    public serverArguments(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        let serverargs = ['--persist', '--port', gdbport.toString(), '--reset-break'];\n\n        if (this.args.boardId) {\n            serverargs.push('--board');\n            serverargs.push(this.args.boardId);\n        }\n\n        if (this.args.targetId) {\n            serverargs.push('--target');\n            serverargs.push(this.args.targetId.toString());\n        }\n\n        if (this.args.cmsisPack) {\n            serverargs.push('--pack');\n            serverargs.push(this.args.cmsisPack.toString());\n        }\n\n        if (this.args.serverArgs) {\n            serverargs = serverargs.concat(this.args.serverArgs);\n        }\n        return serverargs;\n    }\n\n    public initMatch(): RegExp {\n        return /GDB server started (at|on) port/;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {\n        if (this.args.swoConfig.enabled && this.args.swoConfig.source !== 'probe') {\n            this.emit('event', new SWOConfigureEvent({\n                type: 'serial',\n                device: this.args.swoConfig.source,\n                baudRate: this.args.swoConfig.swoFrequency\n            }));\n        }\n    }\n    \n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { GDBServerController, ConfigurationArguments, calculatePortMask, SWOConfigureEvent } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nconst commandExistsSync = require('command-exists').sync;\nconst EXECUTABLE_NAMES = ['qemu-system-arm'];\n\nexport class QEMUServerController extends EventEmitter implements GDBServerController {\n    public portsNeeded: string[] = ['gdbPort'];\n    public name: 'QEMU';\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n    \n    public initCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        return [\n            `target-select extended-remote localhost:${gdbport}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'enable-pretty-printing'\n        ];\n\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'enable-pretty-printing'\n        ];\n        \n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor stop\"',\n            'interpreter-exec console \"monitor system_reset\"'\n        ];\n\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        return [];\n    }\n\n    public serverExecutable() {\n        if (this.args.serverpath) { return this.args.serverpath; }\n        else {\n            for (const name in EXECUTABLE_NAMES) {\n                if (commandExistsSync(name)) { return name; }\n            }\n            return 'qemu-system-arm';\n        }\n    }\n    \n    public serverArguments(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        let cmdargs = [\n            '-cpu', this.args.cpu,\n            '-machine', this.args.machine,\n            '-nographic',\n            '-semihosting-config', 'enable=on,target=native',\n            '-gdb', 'tcp::' + gdbport.toString(),\n            '-S',\n            '-kernel', this.args.executable\n        ];\n\n        if (this.args.serverArgs) {\n            cmdargs = cmdargs.concat(this.args.serverArgs);\n        }\n\n        return cmdargs;\n    }\n\n    public initMatch(): RegExp {\n        return null;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {}\n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { DebugProtocol } from 'vscode-debugprotocol';\nimport { GDBServerController, ConfigurationArguments, SWOConfigureEvent, calculatePortMask } from './common';\nimport * as os from 'os';\nimport { EventEmitter } from 'events';\n\nexport class STUtilServerController extends EventEmitter implements GDBServerController {\n    public readonly name: string = 'ST-Util';\n    public readonly portsNeeded: string[] = ['gdbPort'];\n\n    private args: ConfigurationArguments;\n    private ports: { [name: string]: number };\n\n    constructor() {\n        super();\n    }\n\n    public setPorts(ports: { [name: string]: number }): void {\n        this.ports = ports;\n    }\n\n    public setArguments(args: ConfigurationArguments): void {\n        this.args = args;\n    }\n\n    public customRequest(command: string, response: DebugProtocol.Response, args: any): boolean {\n        return false;\n    }\n\n    public initCommands(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        return [\n            `target-select extended-remote localhost:${gdbport}`\n        ];\n    }\n\n    public launchCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'interpreter-exec console \"monitor reset\"',\n            'target-download',\n            'interpreter-exec console \"monitor reset\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public attachCommands(): string[] {\n        const commands = [\n            'interpreter-exec console \"monitor halt\"',\n            'enable-pretty-printing'\n        ];\n        return commands;\n    }\n\n    public restartCommands(): string[] {\n        const commands: string[] = [\n            'interpreter-exec console \"monitor halt\"',\n            'interpreter-exec console \"monitor reset\"'\n        ];\n        return commands;\n    }\n\n    public swoCommands(): string[] {\n        const commands = [];\n        if (this.args.swoConfig.enabled && this.args.swoConfig.source !== 'probe') {\n            const swocommands = this.SWOConfigurationCommands();\n            commands.push(...swocommands);\n        }\n        return commands;\n    }\n\n    private SWOConfigurationCommands(): string[] {\n        const portMask = '0x' + calculatePortMask(this.args.swoConfig.decoders).toString(16);\n        const swoFrequency = this.args.swoConfig.swoFrequency;\n        const cpuFrequency = this.args.swoConfig.cpuFrequency;\n\n        const ratio = Math.floor(cpuFrequency / swoFrequency) - 1;\n        \n        const commands: string[] = [\n            'EnableITMAccess',\n            `BaseSWOSetup ${ratio}`,\n            'SetITMId 1',\n            'ITMDWTTransferEnable',\n            'DisableITMPorts 0xFFFFFFFF',\n            `EnableITMPorts ${portMask}`,\n            'EnableDWTSync',\n            'ITMSyncEnable',\n            'ITMGlobalEnable'\n        ];\n\n        commands.push(this.args.swoConfig.profile ? 'EnablePCSample' : 'DisablePCSample');\n        \n        return commands.map((c) => `interpreter-exec console \"${c}\"`);\n    }\n\n    public serverExecutable(): string {\n        if (this.args.serverpath) { return this.args.serverpath; }\n        else { return os.platform() === 'win32' ? 'st-util.exe' : 'st-util'; }\n    }\n\n    public serverArguments(): string[] {\n        const gdbport = this.ports['gdbPort'];\n\n        let serverargs = ['-p', gdbport.toString(), '-v', '--no-reset'];\n        if (this.args.v1) {\n            serverargs.push('--stlinkv1');\n        }\n\n        if (this.args.serverArgs) {\n            serverargs = serverargs.concat(this.args.serverArgs);\n        }\n\n        return serverargs;\n    }\n\n    public initMatch(): RegExp {\n        return /Listening at \\*/g;\n    }\n\n    public serverLaunchStarted(): void {}\n    public serverLaunchCompleted(): void {\n        if (this.args.swoConfig.enabled && this.args.swoConfig.source !== 'probe') {\n            this.emit('event', new SWOConfigureEvent({\n                type: 'serial',\n                device: this.args.swoConfig.source,\n                baudRate: this.args.swoConfig.swoFrequency\n            }));\n        }\n    }\n    \n    public debuggerLaunchStarted(): void {}\n    public debuggerLaunchCompleted(): void {}\n}\n","import { DisassemblyInstruction } from './common';\n\nexport enum SymbolType {\n    Function,\n    File,\n    Object,\n    Normal\n}\n\nexport enum SymbolScope {\n    Local,\n    Global,\n    Neither,\n    Both\n}\n\nexport interface SymbolInformation {\n    address: number;\n    length: number;\n    name: string;\n    section: string;\n    type: SymbolType;\n    origScope: SymbolScope;     // This was what was parsed\n    scope: SymbolScope;\n    file: string;                // The official file name\n    fileMaps: string[];          // Set of files this symbol could match\n    instructions: DisassemblyInstruction[];\n    hidden: boolean;\n}\n","// Author to Blame: haneefdm on github\n\nimport * as tcpPortUsed from 'tcp-port-used';\nimport os = require('os');\nimport net = require('net');\nimport child_process = require('child_process');\nimport command_exists = require('command-exists');\n\nexport class TcpPortScanner {\n    //\n    // Strategies: There are two ways we can check/look for open ports or get status\n    //\n    // 1. Client: Try to see if we can connect to that port. This is the preferred method\n    //    because you can probe for remote hosts as well but on Windows each probe on an free\n    //    port takes 1 second even on localhost\n    //\n    // 2. Server: See if we can create a server on that port. It is super fast on all platforms,\n    //    but, we can only do this on a localhost. We use this method is we can quickly determine\n    //    if it is a localhost. We also look for ports on its aliases because, you can\n    //    run servers on some aliases\n    //\n    //    CAVEAT: First time you use it, you might get a dialog box warning user that a program\n    //    is creating a server you will have to allow it. Firewall rules. Connection still succeeds\n    //    unless there is a compony policy\n    //\n\n    public static ForceClientMethod = false;\n    public static readonly DefaultHost = '0.0.0.0';\n\n    /**\n     * Checks to see if the port is in use by creating a server on that port. You should use the function\n     * `isPortInUseEx()` if you want to do a more exhaustive check or a general purpose use for any host\n     * \n     * @param port port to use. Must be > 0 and <= 65535\n     * @param host host ip address to use. This should be an alias to a localhost. Can be null or empty string\n     * in which case the Node.js default rules apply.\n     */\n    public static isPortInUse(port: number, host: string): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const server = net.createServer((c) => {\n            });\n            server.once('error', (e) => {\n                const code: string = (e as any).code;\n                if (code && (code === 'EADDRINUSE') || (code === 'EACCES')) {\n                    // console.log(`port ${host}:${port} is used`, code);\n                    if (code === 'EACCES') {\n                        // Technically, EACCES means permission denied, so we consider it as used\n                        console.log(`port ${host}:${port} returned code EACCES?`);\n                    }\n                    resolve(true);\t\t\t\t// Port in use\n                } else {\n                    // This should never happen so, log it always\n                    console.log(`port ${host}:${port} unexpected error `, e);\n                    reject(e);\t\t\t\t\t// some other failure\n                }\n                server.close();\n            });\n\n            server.listen(port, host, () => {\n                // Port not in use\n                // console.log(`port ${host}:${port} is in free`);\n                resolve(false);\n                server.close();\n            });\n        });\n    }\n\n    /**\n     * Checks to see if the port is in use by creating a server on that port if a localhost or alias\n     * or try to connect to an existing server.\n     * \n     * If we think it is a localhost, It tries to make sure it and its aliases are all free. For\n     * instance 0.0.0.0, 127.0.0.1, ::1 are true aliases on some systems and distinct ones on others.\n     * \n     * @param port port to use. Must be > 0 and <= 65535\n     * @param host host ip address to use.\n     */\n    public static isPortInUseEx(port: number, host: string): Promise<boolean> {\n        if (TcpPortScanner.shouldUseServerMethod(host)) {\n            const tries = TcpPortScanner.getLocalHostAliases();\n            let ix = 0;\n            // We don't use Promise.all method because we are trying to create a bunch of\n            // servers on the same machine/port, they could interfere with each other if you\n            // do it asynchronously/parallel.\n            // There is also a slight benefit that we can bail early if a port is in use\n            return new Promise((resolve, reject) => {\n                function next(port: number, host: string) {\n                    TcpPortScanner.isPortInUse(port, host).then((inUse) => {\n                        if (inUse) {\n                            resolve(inUse);\n                        } else if (++ix === tries.length) {\n                            resolve(false);\n                        } else {\n                            next(port, tries[ix]);\n                        }\n                    }).catch((err) => {\n                        reject(err);\n                    });\n                }\n                next(port, tries[ix]);\n            });\n        } else {\n            // This function is too slow on windows when checking on an open port.\n            return tcpPortUsed.check(port, host);\n        }\n    }\n\n    /**\n     * Scan for free ports (no one listening) on the specified host.\n     * Don't like the interface but trying to keep compatibility with `portastic.find()`. Unlike\n     * `portastic` the default ports to retrieve is 1 and we also have the option of returning\n     * consecutive ports\n     * \n     * Detail: While this function is async, promises are chained to find open ports recursively\n     * \n     * @param0 \n     * @param host Use any string that is a valid host name or ip address\n     * @return a Promise with an array of ports or null when cb is used\n     */\n    public static findFreePorts(\n        { min, max, retrieve = 1, consecutive = false, doLog = false }:\n            {\n                min: number;\t\t\t// Starting port number\n                max: number;\t\t\t// Ending port number (inclusive)\n                retrieve?: number;\t\t// Number of ports needed\n                consecutive?: boolean;\n                doLog?: boolean;\n            },\n        host = TcpPortScanner.DefaultHost): Promise<number[]> | null {\n        let freePorts = [];\n        const busyPorts = [];           // Mostly for debug\n        const needed = retrieve;\n        const functor = TcpPortScanner.shouldUseServerMethod(host) ? TcpPortScanner.isPortInUseEx : tcpPortUsed.tcpPortUsed;\n        return new Promise((resolve, reject) => {\n            if (needed <= 0) {\n                resolve(freePorts);\n                return;\n            }\n            function next(port: number, host: string) {\n                const startTine = process.hrtime();\n                functor(port, host).then((inUse) => {\n                    const endTime = process.hrtime(startTine);\n                    if (inUse) {\n                        busyPorts.push(port);\n                    } else {\n                        if (consecutive && (freePorts.length > 0) &&\n                            (port !== (1 + freePorts[freePorts.length - 1]))) {\n                            if (doLog) {\n                                console.log('TcpPortHelper.find: Oops, reset for consecutive ports requirement');\n                            }\n                            freePorts = [];\n                        }\n                        freePorts.push(port);\n                    }\n                    if (doLog) {\n                        const ms = (endTime[1] / 1e6).toFixed(2);\n                        const t = `${endTime[0]}s ${ms}ms`;\n                        console.log(`TcpPortHelper.find Port ${host}:${port} ` +\n                            (inUse ? 'busy' : 'free') + `, Found: ${freePorts.length} of ${needed} needed ${t}`);\n                    }\n                    if (freePorts.length === needed) {\n                        resolve(freePorts);\n                    } else if (port < max) {\n                        next(port + 1, host);\n                    } else {\n                        reject(new Error(`Only found ${freePorts.length} of ${needed} ports`));\n                    }\n                }).catch((err) => {\n                    reject(err);\n                });\n            }\n            next(min, host);\t\t// Start the hunt\n        });\n    }\n\n    /**\n     * @deprecated This a synchronous version of `findFreePorts()`. Use it instead. This function\n     * maybe slightly faster but will not play nice in a truely async. system.\n     */\n    public static async findFreePortsSync(\n        { min, max, retrieve = 1, consecutive = false, doLog = false }:\n            {\n                min: number;\t\t\t// Starting port number\n                max: number;\t\t\t// Ending port number (inclusive)\n                retrieve?: number;\t\t// Number of ports needed\n                consecutive?: boolean;\n                doLog?: boolean;\n            },\n        host = TcpPortScanner.DefaultHost, cb = null): Promise<number[]> {\n        let freePorts = [];\n        const busyPorts = [];\n        const needed = retrieve;\n        let error = null;\n        if (needed <= 0) {\n            return new Promise((resolve) => { resolve(freePorts); });\n        }\n        const functor = TcpPortScanner.shouldUseServerMethod(host) ? TcpPortScanner.isPortInUseEx : tcpPortUsed.tcpPortUsed;\n        for (let port = min; port <= max; port++) {\n            if (needed <= 0) {\n                return;\n            }\n            const startTime = process.hrtime();\n            await functor(port, host)\n                .then((inUse) => {\n                    const endTime = process.hrtime(startTime);\n                    if (inUse) {\n                        busyPorts.push(port);\n                    } else {\n                        if (consecutive && (freePorts.length > 0) &&\n                            (port !== (1 + freePorts[freePorts.length - 1]))) {\n                            if (doLog) {\n                                console.log('TcpPortHelper.finnd: Oops, reset for consecutive requirement');\n                            }\n                            freePorts = [];\n                        }\n                        freePorts.push(port);\n                    }\n                    if (doLog) {\n                        const ms = (endTime[1] / 1e6).toFixed(2);\n                        const t = `${endTime[0]}s ${ms}ms`;\n                        console.log(`TcpPortHelper.find Port ${host}:${port} ` +\n                            (inUse ? 'busy' : 'free') + `, Found: ${freePorts.length} of ${needed} needed ` + t);\n                    }\n                }, (err) => {\n                    if (doLog) {\n                        console.error('Error on check:', err.message);\n                    }\n                    error = err;\n                });\n            if (error || (freePorts.length === needed)) {\n                break;\n            }\n        }\n        if (!cb) {\n            return new Promise((resolve, reject) => {\n                if (!error && (freePorts.length === needed)) {\n                    resolve(freePorts);\n                } else {\n                    reject(error ? error : `Only found ${freePorts.length} of ${needed} ports`);\n                }\n            });\n        } else {\n            if (!error && (freePorts.length === needed)) {\n                cb(freePorts);\n            }\n            return null;\n        }\n    }\n\n    protected static OSNetProbeCmd = '';\n    protected static OSNetProbeCmdRegexpStr = '';\n    protected static getOsNetProbeCmd(): string {\n        /**\n         * Notes:\n         * `netstat` does not exist on Linux by default. Replacement is `ss`\n         * `netstat` and `ss` are faster than lsof. netstat on mac is super fast.\n         * what program to use is baed of platform and availability\n         */\n        if (TcpPortScanner.OSNetProbeCmd === '') {\n            const commandExistsSync = command_exists.sync;\n            const platform = os.platform();\n            const isWin = platform === 'win32';\n            const isMac = platform === 'darwin';\n            /**\n             * for `netstat` and `ss` We are looking for things that are in the 'local address' field for\n             * ports that are listening. Technically, you can have multiple matches because the local machine\n             * can have multiple addresses\n             */\n            if (!isWin && !isMac && commandExistsSync('ss')) {\n                TcpPortScanner.OSNetProbeCmd = 'ss -nlt';\n                TcpPortScanner.OSNetProbeCmdRegexpStr = 'LISTEN\\\\s+[^\\\\n]*:XYZZY\\\\s+[^\\\\s]+[^\\\\n]*\\\\n';\n            } else if (commandExistsSync('netstat')) {\n                // On windows, if you ask for tcp it will only give you ipv4. On Mac, it gives both, so we have to\n                // use the -f on Mac\n                TcpPortScanner.OSNetProbeCmd = isWin ? 'netstat -nap tcp' : 'netstat -nap tcp -f inet';\n                // netstat output varies wildly, so be careful\n                TcpPortScanner.OSNetProbeCmdRegexpStr = '[tT][cC][pP][^\\\\n]*[:\\\\.]XYZZY\\\\s+[^\\\\s]+\\\\s+LISTEN[^\\\\n]*\\\\n';\n            } else if (isMac && commandExistsSync('lsof')) {\n                // This is the slowest of all but probably the most consistent\n                TcpPortScanner.OSNetProbeCmd = 'lsof -n -iTCP:XYZZY -sTCP:LISTEN';\n                TcpPortScanner.OSNetProbeCmdRegexpStr = 'IPv4[^\\\\n]+:XYZZY\\\\s[^\\\\n]*\\\\(LISTEN\\\\)[^\\\\n]*\\\\n';\n            } else {\n                TcpPortScanner.OSNetProbeCmd = '?';\n            }\n        }\n        return TcpPortScanner.OSNetProbeCmd;\n    }\n\n    /**\n     * This is the most unobtrusive way of figuring out if a port is open. It does not try\n     * to create servers or clients but use system commands to figure out if a port is open\n     * On Mac, the runtime is not bad 1.5 to 2X of the time take to do it the other ways.\n     * On windows, surprise!, it is an order of magnititude slower.\n     * \n     * But, it is also not bulletproof. depends on version of the OS and if some things do\n     * not get installed by default. This is limited to looking for IPv4 addresses\n     * \n     * @param port look for port to be open. don't matter what\n     * @param retryTimeMs retry after that many milliseconds.\n     * @param timeOutMs max timeout\n     * @param fallback Fallback to using the intrusive method if proper OS command is not available\n     */\n    public static waitForPortOpenOSUtl(port: number, retryTimeMs = 100, timeOutMs = 5000, fallback = true, doLog = true): Promise<void> {\n        const cmd = TcpPortScanner.getOsNetProbeCmd().replace('XYZZY', port.toString());\n        if (doLog) { console.log(cmd); }\n        if (fallback && (cmd === '?')) {\n            return TcpPortScanner.waitForPortOpen(port, TcpPortScanner.DefaultHost, true, retryTimeMs, timeOutMs);\n        }\n\n        const rexStr = TcpPortScanner.OSNetProbeCmdRegexpStr.replace('XYZZY', port.toString());\n        if (doLog) { console.log(rexStr); }\n        const rex = new RegExp(rexStr);\n        const startTimeMs = Date.now();\n        let first = true;\n        retryTimeMs = Math.max(retryTimeMs, 1);\n        return new Promise(function tryAgain(resolve, reject) {\n            if (cmd === '?') {\n                return reject(new Error('failed'));\n            }\n            child_process.exec(cmd, (error, stdout) => {\n                if (error && !cmd.startsWith('lsof')) {\n                    // lsof returns an error code if nothing matches. May match later\n                    return reject(error);\n                } else if (rex.test(stdout)) {\n                    if (doLog) { console.log(stdout.match(rex).join('\\n')); }\n                    return resolve();\n                } else {\n                    if (first) {\n                        // if (doLog) { console.log(stdout); }\n                        first = false;\n                    }\n                    const t = Date.now() - startTimeMs;\n                    if (t < timeOutMs) {\n                        if (doLog) { console.log(`waitForPortOpenOSUtl: Setting timeout for ${retryTimeMs}ms, curTime = ${t}ms`); }\n                        setTimeout(() => {\n                            tryAgain(resolve, reject);\n                        }, retryTimeMs);\n                    } else {\n                        return reject(new Error('timeout'));\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * This is the workhorse function for all kinds of status queries on port:localhost\n     * \n     * @param opts \n     */\n    protected static waitForPortStatusEx(opts: PortStatusArgs): Promise<void> {\n        opts.startTimeMs = Date.now();\n        const functor = opts.checkLocalHostAliases ? TcpPortScanner.isPortInUseEx : TcpPortScanner.isPortInUse;\n        return new Promise(function tryAgain(resolve, reject) {\n            functor(opts.port, opts.host)\n                .then((inUse) => {\n                    // console.log(`${functor.name} returned ${inUse}`)\n                    if (inUse === opts.desiredStatus) {\t// status match\n                        return resolve();\n                    } else {\n                        throw new Error('tryagain');\n                    }\n                }).catch((e) => {\n                    if (e.message !== 'tryagain') {\n                        return reject(e);\n                    } else {\n                        const t = Date.now() - opts.startTimeMs;\n                        if (t < opts.timeOutMs) {\n                            // console.log(`Setting timeout for ${opts.retryTimeMs}ms, curTime = ${t}ms`);\n                            setTimeout(() => {\n                                tryAgain(resolve, reject);\n                            }, opts.retryTimeMs);\n                        } else {\n                            return reject(new Error('timeout'));\n                        }\n                    }\n                });\n        });\n    }\n\n    /**\n     * Wait for particular port status. We always do a minium of one try regardless of timeouts, so setting a timeout\n     * of 0 means only one try\n     * \n     * @param inUse true means wait for port to be ready to use. False means wait for port to close\n     * @return a promise. On failure, the error is Error('timeout') for a true timeout or something else\n     * for other failures\n     */\n    public static waitForPortStatus(\n        port, host = TcpPortScanner.DefaultHost, inUse = true,\n        checkLocalHostAliaes = true, retryTimeMs = 100, timeOutMs = 5000): Promise<void> {\n        retryTimeMs = Math.max(retryTimeMs, 1);\n        if (!TcpPortScanner.shouldUseServerMethod(host)) {\n            return tcpPortUsed.waitForStatus(port, host, inUse, retryTimeMs, timeOutMs);\n        } else {\n            const opts = new PortStatusArgs(inUse, port, host, checkLocalHostAliaes, retryTimeMs, timeOutMs);\n            return TcpPortScanner.waitForPortStatusEx(opts);\n        }\n    }\n\n    /**\n     * Wait for port to open. We always do a minium of one try regardless of timeouts, so setting a timeout\n     * of 0 means only one try\n     * \n     * @return a promise. On failure, the error is Error('timeout') for a true timeout or something else\n     * for other failures\n     */\n    public static waitForPortOpen(\n        port, host = TcpPortScanner.DefaultHost, checkLocalHostAliaes = true,\n        retryTimeMs = 100, timeOutMs = 5000): Promise<void> {\n        retryTimeMs = Math.max(retryTimeMs, 1);\n        if (!TcpPortScanner.shouldUseServerMethod(host)) {\n            return tcpPortUsed.waitUntilUsedOnHost(port, host, retryTimeMs, timeOutMs);\n        } else {\n            const opts = new PortStatusArgs(true, port, host, checkLocalHostAliaes, retryTimeMs, timeOutMs);\n            return TcpPortScanner.waitForPortStatusEx(opts);\n        }\n    }\n\n    /**\n     * Wait for port to close. We always do a minium of one try regardless of timeouts, so setting a timeout\n     * of 0 means only one try\n     * \n     * @return a promise. On failure, the error is Error('timeout') for a true timeout or something else\n     * for other failures\n     */\n    public static waitForPortClosed(\n        port, host = TcpPortScanner.DefaultHost, checkLocalHostAliaes = true,\n        retryTimeMs = 100, timeOutMs = 5000): Promise<void> {\n        retryTimeMs = Math.max(retryTimeMs, 1);\n        if (!TcpPortScanner.shouldUseServerMethod(host)) {\n            return tcpPortUsed.waitUntilFreeOnHost(port, host, retryTimeMs, timeOutMs);\n        } else {\n            const opts = new PortStatusArgs(false, port, host, checkLocalHostAliaes, retryTimeMs, timeOutMs);\n            return TcpPortScanner.waitForPortStatusEx(opts);\n        }\n    }\n\n    // we cache only ipv4 address and the default ipv6 address for the localhost. All ipv6 aliases\n    // seem to be true aliases on all systems but ipv4 aliases may or may not be.\n    private static localHostAliases: string[] = [];\n    protected static getLocalHostAliases(): string[] {\n        if (TcpPortScanner.localHostAliases.length === 0) {\n            // On Unixes, the first two are treated like true aliases but on Windows\n            // you have distint servers on all of them. So, try everything.\n            TcpPortScanner.localHostAliases = ['0.0.0.0', '127.0.0.1', ''];\n            const ifaces = os.networkInterfaces();\n            Object.keys(ifaces).forEach((ifname) => {\n                ifaces[ifname].forEach((iface) => {\n                    // Skip external interfaces (VPN tunnels, actual IP, etc). Only want loopbacks\n                    if (iface.internal && ('ipv4' === iface.family.toLowerCase())) {\n                        if (TcpPortScanner.localHostAliases.indexOf(iface.address) === -1) {\n                            TcpPortScanner.localHostAliases.push(iface.address);\n                        }\n                    }\n                });\n            });\n            // console.log(aliases.join(','));\n        }\n        return TcpPortScanner.localHostAliases;\n    }\n\n   /**\n    * quick/dirty way of figuring out if this is a local host. guaranteed way would have\n    * been to do a dns.resolve() or dns.lookup(). server method only works for local hosts.\n    * Client method works for anything but super slow on windows.\n    * \n    * FIXME: should we use server-method only on windows?\n    * \n    * @param host an ip-address\n    */\n    protected static shouldUseServerMethod(host: string): boolean {\n        if (TcpPortScanner.ForceClientMethod) {\n            return false;\n        }\n        return (!host || (host.toLowerCase() === 'localhost') ||\n            (TcpPortScanner.getLocalHostAliases().indexOf(host) >= 0));\n    }\n}\n\nexport class PortStatusArgs {\n    public startTimeMs: number = 0;\n    constructor(\n        public readonly desiredStatus: boolean,\t// true means looking for open\n        public readonly port: number,\n        public readonly host: string = TcpPortScanner.DefaultHost,\n        public readonly checkLocalHostAliases = true,\n        public readonly retryTimeMs: number = 100,\n        public readonly timeOutMs: number = 5000\n    ) {\n        this.retryTimeMs = Math.max(this.retryTimeMs, 1);\n    }\n}\n","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"timers\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");"],"sourceRoot":""}